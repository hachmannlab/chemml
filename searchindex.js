Search.setIndex({"docnames": ["API/API", "API/CMLWContentsTable", "API/CMLWReference", "API/chemml.chem", "API/chemml.chem.magpie_python", "API/chemml.datasets", "API/chemml.initialization", "API/chemml.models", "API/chemml.optimization", "API/chemml.preprocessing", "API/chemml.visualization", "API/include_CMLWR1Enter", "API/include_CMLWR2Represent", "API/include_CMLWR3Prepare", "API/include_CMLWR4Model", "API/include_CMLWR5Search", "API/include_CMLWR7Visualize", "API/include_CMLWR8Store", "API/index", "API/wrapper_docs/chemml.APEAttributeGenerator", "API/wrapper_docs/chemml.APRDFAttributeGenerator", "API/wrapper_docs/chemml.BagofBonds", "API/wrapper_docs/chemml.ChargeDependentAttributeGenerator", "API/wrapper_docs/chemml.ChemicalOrderingAttributeGenerator", "API/wrapper_docs/chemml.CompositionEntry", "API/wrapper_docs/chemml.ConstantColumns", "API/wrapper_docs/chemml.ConvertFile", "API/wrapper_docs/chemml.CoordinationNumberAttributeGenerator", "API/wrapper_docs/chemml.CoulombMatrix", "API/wrapper_docs/chemml.CoulombMatrixAttributeGenerator", "API/wrapper_docs/chemml.CrystalStructureEntry", "API/wrapper_docs/chemml.DistanceMatrix", "API/wrapper_docs/chemml.Dragon", "API/wrapper_docs/chemml.EffectiveCoordinationNumberAttributeGenerator", "API/wrapper_docs/chemml.ElementFractionAttributeGenerator", "API/wrapper_docs/chemml.ElementPairPropertyAttributeGenerator", "API/wrapper_docs/chemml.ElementalPropertyAttributeGenerator", "API/wrapper_docs/chemml.GCLPAttributeGenerator", "API/wrapper_docs/chemml.IonicCompoundProximityAttributeGenerator", "API/wrapper_docs/chemml.IonicityAttributeGenerator", "API/wrapper_docs/chemml.LatticeSimilarityAttributeGenerator", "API/wrapper_docs/chemml.LocalPropertyDifferenceAttributeGenerator", "API/wrapper_docs/chemml.LocalPropertyVarianceAttributeGenerator", "API/wrapper_docs/chemml.MLP", "API/wrapper_docs/chemml.MLP_sklearn", "API/wrapper_docs/chemml.MeredigAttributeGenerator", "API/wrapper_docs/chemml.MissingValues", "API/wrapper_docs/chemml.Outliers", "API/wrapper_docs/chemml.PRDFAttributeGenerator", "API/wrapper_docs/chemml.PackingEfficiencyAttributeGenerator", "API/wrapper_docs/chemml.PyScript", "API/wrapper_docs/chemml.RDKitFingerprint", "API/wrapper_docs/chemml.SaveFile", "API/wrapper_docs/chemml.SavePlot", "API/wrapper_docs/chemml.Split", "API/wrapper_docs/chemml.StoichiometricAttributeGenerator", "API/wrapper_docs/chemml.StructuralHeterogeneityAttributeGenerator", "API/wrapper_docs/chemml.ValenceShellAttributeGenerator", "API/wrapper_docs/chemml.XYZreader", "API/wrapper_docs/chemml.YangOmegaAttributeGenerator", "API/wrapper_docs/chemml.decorator", "API/wrapper_docs/chemml.hist", "API/wrapper_docs/chemml.load_cep_homo", "API/wrapper_docs/chemml.load_comp_energy", "API/wrapper_docs/chemml.load_crystal_structures", "API/wrapper_docs/chemml.load_organic_density", "API/wrapper_docs/chemml.load_xyz_polarizability", "API/wrapper_docs/chemml.scatter2D", "API/wrapper_docs/pandas.concat", "API/wrapper_docs/pandas.corr", "API/wrapper_docs/pandas.plot", "API/wrapper_docs/pandas.read_excel", "API/wrapper_docs/pandas.read_table", "API/wrapper_docs/sklearn.ARDRegression", "API/wrapper_docs/sklearn.BayesianRidge", "API/wrapper_docs/sklearn.Binarizer", "API/wrapper_docs/sklearn.ElasticNet", "API/wrapper_docs/sklearn.GridSearchCV", "API/wrapper_docs/sklearn.Imputer", "API/wrapper_docs/sklearn.KFold", "API/wrapper_docs/sklearn.KernelPCA", "API/wrapper_docs/sklearn.KernelRidge", "API/wrapper_docs/sklearn.Lars", "API/wrapper_docs/sklearn.Lasso", "API/wrapper_docs/sklearn.LassoLars", "API/wrapper_docs/sklearn.LeaveOneOut", "API/wrapper_docs/sklearn.LinearRegression", "API/wrapper_docs/sklearn.LinearSVR", "API/wrapper_docs/sklearn.LogisticRegression", "API/wrapper_docs/sklearn.MLPRegressor", "API/wrapper_docs/sklearn.MaxAbsScaler", "API/wrapper_docs/sklearn.MinMaxScaler", "API/wrapper_docs/sklearn.MultiTaskElasticNet", "API/wrapper_docs/sklearn.MultiTaskLasso", "API/wrapper_docs/sklearn.Normalizer", "API/wrapper_docs/sklearn.NuSVR", "API/wrapper_docs/sklearn.OneHotEncoder", "API/wrapper_docs/sklearn.PCA", "API/wrapper_docs/sklearn.PolynomialFeatures", "API/wrapper_docs/sklearn.Ridge", "API/wrapper_docs/sklearn.RobustScaler", "API/wrapper_docs/sklearn.SGDRegressor", "API/wrapper_docs/sklearn.SVR", "API/wrapper_docs/sklearn.ShuffleSplit", "API/wrapper_docs/sklearn.StandardScaler", "API/wrapper_docs/sklearn.StratifiedShuffleSplit", "API/wrapper_docs/sklearn.cross_val_predict", "API/wrapper_docs/sklearn.cross_val_score", "API/wrapper_docs/sklearn.evaluate_regression", "API/wrapper_docs/sklearn.learning_curve", "API/wrapper_docs/sklearn.scorer_regression", "API/wrapper_docs/sklearn.train_test_split", "chemml_library", "chemml_tasks/index", "chemml_tasks/introduction", "chemml_wrapper", "explain_task/index", "index", "input_task/index", "ipython_notebooks/Convo_nets", "ipython_notebooks/Explain_visualizations", "ipython_notebooks/GA_tutorial", "ipython_notebooks/Molecule", "ipython_notebooks/active_model_based", "ipython_notebooks/chemml_tasks/introduction", "ipython_notebooks/feature_representation", "ipython_notebooks/ga_feature_selection", "ipython_notebooks/ga_hyper_opt", "ipython_notebooks/missing_values", "ipython_notebooks/ml_model", "ipython_notebooks/purge", "ipython_notebooks/pyscript_usage", "ipython_notebooks/simple_ml_model", "ipython_notebooks/visualize", "model_task/index", "optimize_task/index", "prepare_task/index", "published/RI/index", "published/index", "represent_task/index", "visualize_task/index", "wrapper/CMLWInputFile", "wrapper/CMLWInputFileGenerator", "wrapper/index"], "filenames": ["API/API.rst", "API/CMLWContentsTable.rst", "API/CMLWReference.rst", "API/chemml.chem.rst", "API/chemml.chem.magpie_python.rst", "API/chemml.datasets.rst", "API/chemml.initialization.rst", "API/chemml.models.rst", "API/chemml.optimization.rst", "API/chemml.preprocessing.rst", "API/chemml.visualization.rst", "API/include_CMLWR1Enter.rst", "API/include_CMLWR2Represent.rst", "API/include_CMLWR3Prepare.rst", "API/include_CMLWR4Model.rst", "API/include_CMLWR5Search.rst", "API/include_CMLWR7Visualize.rst", "API/include_CMLWR8Store.rst", "API/index.rst", "API/wrapper_docs/chemml.APEAttributeGenerator.rst", "API/wrapper_docs/chemml.APRDFAttributeGenerator.rst", "API/wrapper_docs/chemml.BagofBonds.rst", "API/wrapper_docs/chemml.ChargeDependentAttributeGenerator.rst", "API/wrapper_docs/chemml.ChemicalOrderingAttributeGenerator.rst", "API/wrapper_docs/chemml.CompositionEntry.rst", "API/wrapper_docs/chemml.ConstantColumns.rst", "API/wrapper_docs/chemml.ConvertFile.rst", "API/wrapper_docs/chemml.CoordinationNumberAttributeGenerator.rst", "API/wrapper_docs/chemml.CoulombMatrix.rst", "API/wrapper_docs/chemml.CoulombMatrixAttributeGenerator.rst", "API/wrapper_docs/chemml.CrystalStructureEntry.rst", "API/wrapper_docs/chemml.DistanceMatrix.rst", "API/wrapper_docs/chemml.Dragon.rst", "API/wrapper_docs/chemml.EffectiveCoordinationNumberAttributeGenerator.rst", "API/wrapper_docs/chemml.ElementFractionAttributeGenerator.rst", "API/wrapper_docs/chemml.ElementPairPropertyAttributeGenerator.rst", "API/wrapper_docs/chemml.ElementalPropertyAttributeGenerator.rst", "API/wrapper_docs/chemml.GCLPAttributeGenerator.rst", "API/wrapper_docs/chemml.IonicCompoundProximityAttributeGenerator.rst", "API/wrapper_docs/chemml.IonicityAttributeGenerator.rst", "API/wrapper_docs/chemml.LatticeSimilarityAttributeGenerator.rst", "API/wrapper_docs/chemml.LocalPropertyDifferenceAttributeGenerator.rst", "API/wrapper_docs/chemml.LocalPropertyVarianceAttributeGenerator.rst", "API/wrapper_docs/chemml.MLP.rst", "API/wrapper_docs/chemml.MLP_sklearn.rst", "API/wrapper_docs/chemml.MeredigAttributeGenerator.rst", "API/wrapper_docs/chemml.MissingValues.rst", "API/wrapper_docs/chemml.Outliers.rst", "API/wrapper_docs/chemml.PRDFAttributeGenerator.rst", "API/wrapper_docs/chemml.PackingEfficiencyAttributeGenerator.rst", "API/wrapper_docs/chemml.PyScript.rst", "API/wrapper_docs/chemml.RDKitFingerprint.rst", "API/wrapper_docs/chemml.SaveFile.rst", "API/wrapper_docs/chemml.SavePlot.rst", "API/wrapper_docs/chemml.Split.rst", "API/wrapper_docs/chemml.StoichiometricAttributeGenerator.rst", "API/wrapper_docs/chemml.StructuralHeterogeneityAttributeGenerator.rst", "API/wrapper_docs/chemml.ValenceShellAttributeGenerator.rst", "API/wrapper_docs/chemml.XYZreader.rst", "API/wrapper_docs/chemml.YangOmegaAttributeGenerator.rst", "API/wrapper_docs/chemml.decorator.rst", "API/wrapper_docs/chemml.hist.rst", "API/wrapper_docs/chemml.load_cep_homo.rst", "API/wrapper_docs/chemml.load_comp_energy.rst", "API/wrapper_docs/chemml.load_crystal_structures.rst", "API/wrapper_docs/chemml.load_organic_density.rst", "API/wrapper_docs/chemml.load_xyz_polarizability.rst", "API/wrapper_docs/chemml.scatter2D.rst", "API/wrapper_docs/pandas.concat.rst", "API/wrapper_docs/pandas.corr.rst", "API/wrapper_docs/pandas.plot.rst", "API/wrapper_docs/pandas.read_excel.rst", "API/wrapper_docs/pandas.read_table.rst", "API/wrapper_docs/sklearn.ARDRegression.rst", "API/wrapper_docs/sklearn.BayesianRidge.rst", "API/wrapper_docs/sklearn.Binarizer.rst", "API/wrapper_docs/sklearn.ElasticNet.rst", "API/wrapper_docs/sklearn.GridSearchCV.rst", "API/wrapper_docs/sklearn.Imputer.rst", "API/wrapper_docs/sklearn.KFold.rst", "API/wrapper_docs/sklearn.KernelPCA.rst", "API/wrapper_docs/sklearn.KernelRidge.rst", "API/wrapper_docs/sklearn.Lars.rst", "API/wrapper_docs/sklearn.Lasso.rst", "API/wrapper_docs/sklearn.LassoLars.rst", "API/wrapper_docs/sklearn.LeaveOneOut.rst", "API/wrapper_docs/sklearn.LinearRegression.rst", "API/wrapper_docs/sklearn.LinearSVR.rst", "API/wrapper_docs/sklearn.LogisticRegression.rst", "API/wrapper_docs/sklearn.MLPRegressor.rst", "API/wrapper_docs/sklearn.MaxAbsScaler.rst", "API/wrapper_docs/sklearn.MinMaxScaler.rst", "API/wrapper_docs/sklearn.MultiTaskElasticNet.rst", "API/wrapper_docs/sklearn.MultiTaskLasso.rst", "API/wrapper_docs/sklearn.Normalizer.rst", "API/wrapper_docs/sklearn.NuSVR.rst", "API/wrapper_docs/sklearn.OneHotEncoder.rst", "API/wrapper_docs/sklearn.PCA.rst", "API/wrapper_docs/sklearn.PolynomialFeatures.rst", "API/wrapper_docs/sklearn.Ridge.rst", "API/wrapper_docs/sklearn.RobustScaler.rst", "API/wrapper_docs/sklearn.SGDRegressor.rst", "API/wrapper_docs/sklearn.SVR.rst", "API/wrapper_docs/sklearn.ShuffleSplit.rst", "API/wrapper_docs/sklearn.StandardScaler.rst", "API/wrapper_docs/sklearn.StratifiedShuffleSplit.rst", "API/wrapper_docs/sklearn.cross_val_predict.rst", "API/wrapper_docs/sklearn.cross_val_score.rst", "API/wrapper_docs/sklearn.evaluate_regression.rst", "API/wrapper_docs/sklearn.learning_curve.rst", "API/wrapper_docs/sklearn.scorer_regression.rst", "API/wrapper_docs/sklearn.train_test_split.rst", "chemml_library.rst", "chemml_tasks/index.rst", "chemml_tasks/introduction.rst", "chemml_wrapper.rst", "explain_task/index.rst", "index.rst", "input_task/index.rst", "ipython_notebooks/Convo_nets.ipynb", "ipython_notebooks/Explain_visualizations.ipynb", "ipython_notebooks/GA_tutorial.ipynb", "ipython_notebooks/Molecule.ipynb", "ipython_notebooks/active_model_based.ipynb", "ipython_notebooks/chemml_tasks/introduction.rst", "ipython_notebooks/feature_representation.ipynb", "ipython_notebooks/ga_feature_selection.ipynb", "ipython_notebooks/ga_hyper_opt.ipynb", "ipython_notebooks/missing_values.ipynb", "ipython_notebooks/ml_model.ipynb", "ipython_notebooks/purge.ipynb", "ipython_notebooks/pyscript_usage.ipynb", "ipython_notebooks/simple_ml_model.ipynb", "ipython_notebooks/visualize.ipynb", "model_task/index.rst", "optimize_task/index.rst", "prepare_task/index.rst", "published/RI/index.rst", "published/index.rst", "represent_task/index.rst", "visualize_task/index.rst", "wrapper/CMLWInputFile.rst", "wrapper/CMLWInputFileGenerator.rst", "wrapper/index.rst"], "titles": ["Library API documentation", "Table of Contents", "Wrapper Reference", "Chem module", "Magpie_Python module", "Datasets module", "Initialization module", "Models module", "Optimization module", "Preprocessing module", "Visualization module", "ConvertFile", "APEAttributeGenerator", "ConstantColumns", "MLP", "GridSearchCV", "decorator", "SaveFile", "ChemML API", "APEAttributeGenerator", "APRDFAttributeGenerator", "BagofBonds", "ChargeDependentAttributeGenerator", "ChemicalOrderingAttributeGenerator", "CompositionEntry", "ConstantColumns", "ConvertFile", "CoordinationNumberAttributeGenerator", "CoulombMatrix", "CoulombMatrixAttributeGenerator", "CrystalStructureEntry", "DistanceMatrix", "Dragon", "EffectiveCoordinationNumberAttributeGenerator", "ElementFractionAttributeGenerator", "ElementPairPropertyAttributeGenerator", "ElementalPropertyAttributeGenerator", "GCLPAttributeGenerator", "IonicCompoundProximityAttributeGenerator", "IonicityAttributeGenerator", "LatticeSimilarityAttributeGenerator", "LocalPropertyDifferenceAttributeGenerator", "LocalPropertyVarianceAttributeGenerator", "MLP", "MLP_sklearn", "MeredigAttributeGenerator", "MissingValues", "Outliers", "PRDFAttributeGenerator", "PackingEfficiencyAttributeGenerator", "PyScript", "RDKitFingerprint", "SaveFile", "SavePlot", "Split", "StoichiometricAttributeGenerator", "StructuralHeterogeneityAttributeGenerator", "ValenceShellAttributeGenerator", "XYZreader", "YangOmegaAttributeGenerator", "decorator", "hist", "load_cep_homo", "load_comp_energy", "load_crystal_structures", "load_organic_density", "load_xyz_polarizability", "scatter2D", "concat", "corr", "plot", "read_excel", "read_table", "ARDRegression", "BayesianRidge", "Binarizer", "ElasticNet", "GridSearchCV", "Imputer", "KFold", "KernelPCA", "KernelRidge", "Lars", "Lasso", "LassoLars", "LeaveOneOut", "LinearRegression", "LinearSVR", "LogisticRegression", "MLPRegressor", "MaxAbsScaler", "MinMaxScaler", "MultiTaskElasticNet", "MultiTaskLasso", "Normalizer", "NuSVR", "OneHotEncoder", "PCA", "PolynomialFeatures", "Ridge", "RobustScaler", "SGDRegressor", "SVR", "ShuffleSplit", "StandardScaler", "StratifiedShuffleSplit", "cross_val_predict", "cross_val_score", "evaluate_regression", "learning_curve", "scorer_regression", "train_test_split", "Introduction to ChemML Library", "Welcome to chemml tasks", "heading", "Introduction to ChemML Wrapper", "Explain", "Welcome to the ChemML\u2019s documentation!", "Input", "Neural Fingerprints", "Generating Deep Neural Network Model Explanations via ChemML\u2019s Explain Module", "Genetic Algorithm GUI tutorial", "Molecule", "Active Learning", "&lt;no title&gt;", "Feature Representation Methods in ChemML", "Feature Selection using <code class=\"docutils literal notranslate\"><span class=\"pre\">chemml.optimization.GeneticAlgorithm</span></code>", "Hyperparameter Optimization using <code class=\"docutils literal notranslate\"><span class=\"pre\">chemml.optimization.GeneticAlgorithm</span></code>", "Prepare: Handling Missing Values", "Build a Neural Network using ChemML", "Prepare: Remove Constant Columns and Outliers", "Pyscript Usage", "Build a simple ML model", "Visualize", "Model", "Optimize", "Prepare", "Accelerated Discovery of High-Refractive-Index Molecules", "Published", "Represent", "Visualize", "Input File Manual", "Input File GUI", "ChemML Wrapper Tutorial"], "terms": {"chem": [0, 4, 6, 18, 117, 119, 122, 137, 139], "modul": [0, 13, 14, 15, 18, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 119, 122, 123], "bagofbond": [0, 1, 2, 3], "coulombmatrix": [0, 1, 2, 3, 115, 125], "dragon": [0, 1, 2, 3, 112, 120, 126, 127, 129, 137], "molecul": [0, 1, 3, 4, 5, 6, 11, 12, 21, 28, 32, 51, 58, 66, 112, 115, 117, 118, 119, 120, 126, 127, 129, 138, 139], "rdkitfingerprint": [0, 1, 2, 3, 121, 125, 132, 137], "xyz": [0, 3, 5, 6, 11, 58, 66, 117, 118], "atom_featur": [0, 3, 7], "bond_featur": [0, 3, 7], "num_atom_featur": [0, 3, 7, 119, 125], "num_bond_featur": [0, 3, 7, 119, 125], "tensorise_molecul": [0, 3, 119, 125], "magpie_python": [0, 18, 117], "apeattributegener": [0, 1, 2, 4], "aprdfattributegener": [0, 1, 2, 4], "chargedependentattributegener": [0, 1, 2, 4], "chemicalorderingattributegener": [0, 1, 2, 4], "compositionentri": [0, 1, 2, 4, 5, 11, 19, 22, 34, 35, 36, 37, 38, 39, 45, 55, 57, 59, 63], "coordinationnumberattributegener": [0, 1, 2, 4, 131], "coulombmatrixattributegener": [0, 1, 2, 4, 131], "crystalstructureentri": [0, 1, 2, 4, 5, 11, 20, 23, 27, 29, 33, 40, 41, 42, 48, 49, 56, 64], "effectivecoordinationnumberattributegener": [0, 1, 2, 4, 131], "elementfractionattributegener": [0, 1, 2, 4], "elementpairpropertyattributegener": [0, 1, 2, 4], "elementalpropertyattributegener": [0, 1, 2, 4], "gclpattributegener": [0, 1, 2, 4], "ioniccompoundproximityattributegener": [0, 1, 2, 4], "ionicityattributegener": [0, 1, 2, 4], "latticesimilarityattributegener": [0, 1, 2, 4], "localpropertydifferenceattributegener": [0, 1, 2, 4], "localpropertyvarianceattributegener": [0, 1, 2, 4], "meredigattributegener": [0, 1, 2, 4], "prdfattributegener": [0, 1, 2, 4], "packingefficiencyattributegener": [0, 1, 2, 4], "stoichiometricattributegener": [0, 1, 2, 4], "structuralheterogeneityattributegener": [0, 1, 2, 4], "valenceshellattributegener": [0, 1, 2, 4], "yangomegaattributegener": [0, 1, 2, 4], "initi": [0, 8, 18, 117, 126, 127, 129, 135, 137, 141], "split": [0, 1, 2, 6, 79, 85, 103, 105, 111, 117, 120, 121, 129, 132, 134, 137], "xyzread": [0, 2, 6], "dataset": [0, 3, 10, 11, 18, 62, 63, 64, 65, 66, 115, 117, 119, 120, 121, 123, 125, 126, 127, 129, 131, 132, 137], "load_cep_homo": [0, 2, 5, 10, 121, 132], "load_comp_energi": [0, 2, 5], "load_crystal_structur": [0, 2, 5, 131], "load_organic_dens": [0, 2, 5, 10, 119, 120, 123, 125, 126, 127, 129], "load_xyz_polariz": [0, 2, 3, 5, 115], "preprocess": [0, 8, 13, 18, 25, 46, 47, 75, 78, 90, 91, 94, 96, 98, 100, 104, 117, 120, 127, 128, 129, 130, 134, 137], "constantcolumn": [0, 1, 2, 9, 130], "missingvalu": [0, 1, 2, 3, 9, 12, 32, 128], "outlier": [0, 1, 2, 9, 117, 136], "model": [0, 1, 3, 4, 8, 14, 18, 43, 44, 73, 74, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 95, 99, 101, 102, 112, 115, 116, 119, 121, 125, 126, 131, 135, 137, 138, 141, 143], "mlp": [0, 1, 2, 7, 15, 44, 77, 106, 107, 109, 117, 120, 121, 134, 137], "neuralgraphhidden": [0, 7, 119], "neuralgraphoutput": [0, 7, 119], "transferlearn": [0, 7, 137], "optim": [0, 3, 4, 5, 7, 18, 112, 117, 118, 119, 121, 123, 129, 132, 137], "activelearn": [0, 8, 123], "geneticalgorithm": [0, 8, 117, 121, 135], "visual": [0, 1, 3, 8, 16, 18, 60, 61, 67, 70, 112, 115, 116, 117, 118, 129, 135, 141, 142], "saveplot": [0, 10, 115, 129, 132, 133], "decor": [0, 1, 2, 10, 115, 129, 132, 133], "hist": [0, 1, 2, 10], "scatter2d": [0, 1, 2, 10, 115, 129, 132, 133], "tabl": [0, 4, 11, 16, 18, 70, 71, 72, 117, 141], "content": [0, 4, 18, 117, 121, 141], "refer": [0, 7, 18, 117, 120, 123, 126, 127], "input": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 121, 122, 123, 125, 129, 131, 132, 137, 143], "repres": [0, 1, 3, 4, 7, 8, 11, 12, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 51, 55, 56, 57, 59, 66, 112, 115, 117, 121, 123, 125, 132, 137, 141], "prepar": [0, 1, 13, 25, 46, 47, 54, 68, 75, 78, 79, 80, 85, 90, 91, 94, 96, 97, 98, 100, 103, 104, 105, 111, 112, 117, 121, 141], "thi": [1, 3, 4, 6, 7, 8, 10, 11, 12, 15, 17, 24, 30, 53, 58, 62, 63, 64, 65, 66, 71, 72, 110, 112, 115, 120, 121, 122, 123, 126, 127, 129, 131, 132, 137, 141, 142], "i": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 58, 80, 97, 112, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 131, 132, 134, 137, 141, 142], "complet": [1, 121], "list": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 19, 20, 22, 23, 24, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 55, 56, 57, 59, 63, 64, 117, 119, 120, 121, 123, 126, 127, 141], "all": [1, 3, 4, 6, 7, 8, 9, 10, 13, 15, 96, 109, 112, 115, 117, 120, 123, 125, 126, 127, 131, 132, 137, 138, 141], "method": [1, 3, 4, 6, 7, 9, 15, 69, 106, 112, 116, 117, 122, 123, 139, 141], "ar": [1, 3, 4, 5, 6, 7, 8, 9, 11, 50, 58, 112, 115, 116, 117, 119, 121, 122, 123, 125, 126, 127, 129, 131, 132, 137, 141], "avail": [1, 3, 4, 5, 6, 8, 9, 10, 11, 50, 112, 122, 123, 125, 131, 132, 138, 141], "through": [1, 6, 115, 117, 121, 131, 132, 141, 142], "chemml": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 106, 107, 109, 116, 119, 121, 122, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142], "wrapper": [1, 7, 12, 13, 14, 15, 18, 25, 32, 36, 43, 44, 46, 47, 55, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 131, 132, 141, 142], "interfac": [1, 3, 10, 112, 115, 141, 142], "": [1, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 25, 32, 46, 47, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 121, 122, 123, 126, 127, 131, 132, 137, 141, 142], "column": [1, 3, 5, 6, 7, 9, 117, 120, 125, 126, 132, 136], "describ": [1, 4, 141], "task": [1, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 131, 132, 141], "subtask": [1, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 141], "an": [1, 3, 4, 7, 8, 9, 13, 75, 78, 80, 90, 91, 94, 96, 97, 98, 100, 104, 112, 117, 120, 121, 122, 123, 125, 126, 127, 132, 137, 141], "easier": 1, "classif": [1, 4, 7], "host": [1, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 121, 129, 141], "main": [1, 3, 4, 6, 8, 10, 112, 117, 123, 141], "librari": [1, 3, 6, 7, 18, 115, 116, 119, 121, 122, 126, 127, 129, 131, 132, 137, 141, 142], "depend": [1, 3, 4, 141], "requir": [1, 3, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 121, 125, 126, 127, 134, 137, 141, 142], "run": [1, 3, 4, 8, 117, 121, 123, 131, 132, 141, 142], "function": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 117, 121, 123, 129, 135, 137, 141], "name": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 68, 71, 72, 115, 117, 119, 120, 121, 123, 127, 131, 132, 141, 142], "determin": [1, 3, 4, 6, 7, 125, 137, 141], "block": [1, 3, 11, 12, 15, 17, 24, 30, 32, 53, 58, 62, 63, 64, 65, 66, 71, 72, 110, 121, 131, 132, 137, 141], "node": [1, 7, 120, 141], "comput": [1, 4, 7, 8, 9, 121, 131, 132, 137, 141], "graph": [1, 3, 7, 115, 117, 119, 121, 125, 131, 132, 137, 141], "output": [1, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 121, 123, 131, 132, 134, 141], "token": [1, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 141], "each": [1, 3, 4, 5, 6, 7, 8, 9, 112, 115, 116, 117, 119, 121, 123, 126, 127, 131, 132, 137, 141], "collect": [1, 4, 115], "specif": [1, 4, 9, 10, 112, 117, 131, 143], "inform": [1, 3, 4, 5, 6, 7, 8, 9, 10, 112, 115, 119, 122, 123, 125, 126, 127], "send": [1, 17, 53, 121, 141], "receiv": [1, 3, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 121, 126, 127, 141], "from": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 22, 23, 24, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 55, 56, 57, 59, 63, 64, 112, 115, 116, 117, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 137, 139, 141, 142], "other": [1, 3, 7, 8, 9, 112, 115, 117, 123, 129, 131, 141], "distanc": [1, 3, 4, 12, 31], "matrix": [1, 3, 4, 7, 12, 31, 112], "distancematrix": [1, 2], "df": [1, 3, 5, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 68, 69, 70, 71, 72, 75, 78, 80, 90, 91, 94, 96, 97, 98, 100, 104, 115, 121, 126, 127, 128, 129, 130, 133, 141], "__dict__": 1, "__weakref__": 1, "inorgan": [1, 4, 12, 19, 20, 22, 23, 24, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 55, 56, 57, 59, 131], "descriptor": [1, 3, 4, 5, 8, 12, 19, 20, 21, 22, 23, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 51, 55, 56, 57, 59, 112, 115, 117, 120, 121, 123, 125, 126, 127, 129, 131, 137], "entri": [1, 4, 5, 11, 12, 19, 20, 22, 23, 24, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 55, 56, 57, 59, 63, 64], "energi": [1, 4, 5, 12, 37, 117, 121, 132, 137], "phase": [1, 4, 12, 37, 117], "molecular": [1, 3, 5, 7, 10, 12, 21, 28, 32, 51, 112, 115, 117, 120, 121, 123, 125, 126, 127, 129, 132, 137], "molfil": [1, 12, 32, 51, 121, 141], "removed_row": [1, 12, 51], "data": [1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 21, 25, 28, 46, 47, 54, 68, 75, 78, 79, 85, 90, 91, 94, 96, 98, 100, 103, 104, 105, 112, 115, 117, 121, 122, 123, 125, 126, 131, 132, 134, 137, 141], "clean": [1, 5, 13, 25, 46, 47, 78], "api": [1, 3, 7, 10, 13, 14, 15, 25, 43, 44, 46, 47, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 122], "removed_columns_": [1, 13, 25, 47], "manipul": [1, 3, 13, 54, 68, 112, 122], "df1": [1, 13, 54, 68, 130], "df2": [1, 13, 54, 68, 128], "panda": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 123, 126, 127, 128, 129, 130, 131, 133], "concat": [1, 2, 131], "df3": [1, 13, 68], "sklearn": [1, 7, 8, 13, 14, 15, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 119, 120, 121, 126, 127, 129, 132, 137], "imput": [1, 2], "featur": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 65, 75, 80, 96, 97, 98, 112, 116, 117, 119, 123, 127, 131, 135, 137, 139], "represent": [1, 3, 4, 5, 6, 13, 75, 96, 98, 112, 117, 122, 131, 132, 137, 139], "binar": [1, 2], "onehotencod": [1, 2], "polynomialfeatur": [1, 2], "transform": [1, 4, 8, 9, 13, 14, 15, 25, 46, 47, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 120, 129, 137], "kernelpca": [1, 2], "pca": [1, 2], "scale": [1, 4, 8, 13, 90, 91, 94, 100, 104, 120, 129, 137], "maxabsscal": [1, 2], "minmaxscal": [1, 2], "normal": [1, 2, 4, 8, 10, 14, 16, 60, 73, 74, 76, 82, 83, 84, 86, 92, 93, 99], "robustscal": [1, 2], "standardscal": [1, 2, 8, 119, 120, 127, 129, 137], "kfold": [1, 2, 8, 15, 77, 106, 107, 109, 121, 123], "dfx": [1, 10, 13, 14, 15, 16, 43, 44, 61, 67, 73, 74, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 95, 99, 101, 102, 103, 105, 106, 107, 109, 111, 115, 121, 129, 133], "fold_gen": [1, 13, 79, 85, 103, 105], "leaveoneout": [1, 2, 15, 77, 106, 107, 109], "shufflesplit": [1, 2, 8, 15, 77, 106, 107, 109, 119], "stratifiedshufflesplit": [1, 2, 15, 77, 106, 107, 109], "train_test_split": [1, 2, 121, 129, 132, 137], "dfy": [1, 10, 13, 14, 15, 16, 43, 44, 67, 73, 74, 76, 77, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 95, 99, 101, 102, 106, 107, 108, 109, 111, 115, 121, 129, 133], "dfx_test": [1, 13, 111, 121], "dfy_train": [1, 13, 111, 121], "dfy_test": [1, 13, 111, 121], "dfx_train": [1, 13, 111, 121], "regress": [1, 4, 5, 7, 8, 14, 15, 43, 44, 73, 74, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 95, 99, 101, 102, 108, 110, 115, 119, 120, 123, 126, 127, 137], "dfy_predict": [1, 14, 15, 43, 44, 73, 74, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 95, 99, 101, 102, 106, 108, 115], "mlp_sklearn": [1, 2, 15, 77, 106, 107, 109], "ardregress": [1, 2, 15, 77, 106, 107, 109], "bayesianridg": [1, 2, 15, 77, 106, 107, 109], "elasticnet": [1, 2, 15, 77, 106, 107, 109], "kernelridg": [1, 2, 15, 77, 106, 107, 109, 115, 127], "lar": [1, 2, 15, 77, 106, 107, 109], "lasso": [1, 2, 15, 77, 106, 107, 109], "lassolar": [1, 2, 15, 77, 106, 107, 109], "linearregress": [1, 2, 15, 77, 106, 107, 109, 126], "linearsvr": [1, 2, 15, 77, 106, 107, 109], "logisticregress": [1, 2, 15, 77, 106, 107, 109], "mlpregressor": [1, 2, 15, 77, 106, 107, 109, 121, 132], "multitaskelasticnet": [1, 2, 15, 77, 106, 107, 109], "multitasklasso": [1, 2, 15, 77, 106, 107, 109], "nusvr": [1, 2, 15, 77, 106, 107, 109], "ridg": [1, 2, 15, 77, 106, 107, 109, 126, 127], "sgdregressor": [1, 2, 15, 77, 106, 107, 109], "svr": [1, 2, 15, 77, 106, 107, 109], "artist": [1, 16, 60, 115], "fig": [1, 3, 10, 16, 17, 53, 60, 61, 67, 70, 115, 120, 129, 133], "plot": [1, 2, 8, 10, 61, 67, 115, 116, 117, 123, 132, 133, 134], "convertfil": [2, 6], "pyscript": [2, 117, 143], "read_excel": 2, "read_tabl": 2, "gridsearchcv": 2, "cross_val_predict": 2, "cross_val_scor": 2, "evaluate_regress": 2, "learning_curv": [2, 123], "scorer_regress": 2, "corr": 2, "The": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 119, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 137, 141, 142], "includ": [3, 4, 5, 6, 7, 8, 9, 10, 112], "pleas": [3, 4, 5, 6, 7, 8, 9, 10, 112, 117, 120, 123, 126, 127, 132, 137, 141], "click": [3, 4, 5, 6, 7, 8, 9, 10, 117, 131], "link": [3, 4, 5, 6, 7, 8, 9, 10, 112], "adjac": [3, 4, 5, 6, 7, 8, 9, 10], "more": [3, 4, 5, 6, 7, 8, 9, 10, 115, 123, 126, 127, 137], "class": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 123, 126, 127, 129, 137], "const": [3, 12, 21, 28], "1": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 76, 77, 80, 81, 83, 84, 86, 87, 88, 89, 91, 92, 93, 95, 99, 101, 102, 106, 107, 109, 117, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137], "n_job": [3, 13, 14, 15, 77, 80, 86, 88, 106, 107, 109, 119, 125, 126], "verbos": [3, 11, 13, 14, 15, 72, 73, 74, 77, 78, 82, 84, 87, 88, 89, 95, 101, 102, 106, 107, 109, 119, 123, 125], "true": [3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 23, 32, 36, 43, 44, 46, 51, 52, 60, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 115, 119, 120, 121, 122, 123, 125, 128, 129, 133, 137], "implement": [3, 4, 7, 8, 112, 117, 121, 123, 136, 137], "bag": [3, 112], "bond": [3, 4, 7, 112, 119, 125], "version": [3, 4, 12, 32, 120, 123, 127, 129], "coulomb": [3, 4, 112], "katja": 3, "hansen": 3, "et": [3, 4, 7], "al": [3, 4, 6, 7, 11, 58, 112, 123], "2015": [3, 4, 7], "jpcl": 3, "float": [3, 4, 7, 8, 9, 10, 121], "option": [3, 4, 6, 7, 8, 9, 10, 123], "default": [3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 25, 32, 36, 43, 44, 46, 47, 55, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 121, 127, 129, 137], "constant": [3, 9, 13, 14, 25, 47, 89, 117, 136], "valu": [3, 4, 7, 8, 9, 10, 117, 119, 120, 121, 123, 126, 127, 132, 134, 136, 137, 141], "coordin": [3, 4, 5, 6, 11, 66, 115, 117, 118], "unit": [3, 4, 5], "convers": 3, "atom": [3, 4, 6, 7, 10, 11, 66, 112, 117, 118, 119, 125, 137], "529": 3, "angstrom": 3, "ri": [3, 137], "rj": 3, "which": [3, 4, 7, 8, 112, 119, 120, 121, 125, 126, 127, 129, 131, 132, 137, 138, 142], "denomin": 3, "euclidean": 3, "between": [3, 4, 7, 125, 141], "two": [3, 4, 6, 8, 117, 122, 125, 137, 141], "int": [3, 4, 6, 7, 8, 121, 127], "number": [3, 4, 6, 7, 8, 9, 11, 66, 115, 117, 121, 123, 137, 141], "parallel": 3, "process": [3, 8, 119, 121, 137, 141], "If": [3, 4, 6, 7, 8, 9, 10, 115, 117, 122, 123, 126, 127, 132, 134, 141], "us": [3, 4, 5, 6, 7, 8, 9, 112, 115, 116, 117, 118, 119, 121, 123, 125, 131, 132, 134, 135, 137, 138, 141, 142], "bool": [3, 4, 7, 8, 126], "messag": [3, 123], "header_": 3, "header": [3, 5, 10, 11, 13, 14, 15, 17, 52, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 121], "frame": [3, 4, 6, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 123], "contain": [3, 4, 6, 7, 8, 10, 112, 120, 121, 125, 126, 127], "one": [3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 25, 32, 36, 43, 44, 46, 47, 55, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 121, 126, 127, 141], "nuclear": [3, 6], "charg": [3, 4, 6], "singl": [3, 4, 6, 8, 116, 117, 138, 141], "tupl": [3, 7, 8, 10, 121, 126, 127], "import": [3, 5, 10, 112, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 142], "y": [3, 4, 6, 7, 8, 10, 11, 15, 16, 58, 67, 70, 106, 107, 109, 115, 120, 121, 123, 129, 132, 133, 137], "bob": 3, "concat_mol_featur": 3, "bbs_info": 3, "concaten": [3, 8, 123, 131], "kei": [3, 4, 8, 10, 11, 13, 58, 68, 112, 127, 131], "A": [3, 4, 6, 7, 8, 112, 117, 121, 123, 131, 132, 137, 141, 142], "datafram": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 123, 126, 127, 128, 129, 130, 131, 133], "provid": [3, 4, 5, 7, 8, 10, 112, 117, 119, 123, 131, 132, 137, 141], "object": [3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 53, 60, 61, 67, 70, 77, 106, 107, 109, 110, 117, 119, 120, 121, 122, 123, 129, 135, 137, 139], "arrai": [3, 4, 7, 8, 12, 21, 28, 122, 123, 132], "must": [3, 4, 6, 7, 8, 13, 75, 78, 80, 90, 91, 94, 96, 97, 98, 100, 104, 115, 123, 129, 141, 142], "otherwis": [3, 8, 112], "we": [3, 4, 7, 8, 9, 10, 112, 115, 117, 119, 120, 121, 122, 123, 126, 127, 129, 131, 132, 137, 142], "rais": [3, 15, 77, 123], "valueerror": [3, 4, 123], "In": [3, 4, 6, 7, 8, 11, 58, 112, 115, 120, 121, 123, 127, 131, 132, 137, 142], "addit": [3, 4, 7, 8, 112, 127, 137], "make": [3, 4, 8, 13, 75, 78, 80, 90, 91, 94, 96, 97, 98, 100, 104, 112, 115, 117, 122, 141], "sure": [3, 4, 8, 122, 141], "geometri": [3, 6, 117, 118, 137], "ha": [3, 4, 6, 7, 8, 9, 10, 112, 116, 117, 119, 121, 123, 126, 127, 129, 131, 132, 133, 142], "been": [3, 4, 6, 7, 9, 10, 112, 121, 122, 123, 129, 131, 132, 133, 142], "store": [3, 4, 8, 17, 52, 53, 112, 115, 123, 141], "advanc": [3, 112, 117, 137], "shape": [3, 4, 5, 7, 119, 120, 123, 125, 126, 127, 129, 131, 132], "n_molecul": 3, "max_length_of_combin": 3, "cm_type": [3, 125], "sc": [3, 4, 6, 10, 11, 12, 28, 58, 125, 129, 133], "max_n_atom": [3, 12, 28], "auto": [3, 6, 10, 11, 12, 13, 14, 28, 58, 80, 82, 84, 89, 95, 96, 97, 99, 102, 123], "nperm": [3, 12, 28], "3": [3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 136, 137], "matthia": 3, "rupp": 3, "2012": [3, 4], "prl": 3, "differ": [3, 4, 6, 7, 115, 122, 123, 141], "variat": [3, 4], "str": [3, 4, 7, 8, 11, 12, 15, 17, 26, 32, 51, 52, 77, 121], "type": [3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 119, 121, 123, 125, 127, 129, 133, 141], "follow": [3, 4, 6, 8, 115, 117, 121, 123, 129, 131, 132, 137, 141, 142], "unsorted_matrix": 3, "um": [3, 125], "unsorted_triangular": 3, "ut": [3, 125], "eigenspectrum": 3, "e": [3, 4, 6, 7, 8, 11, 58, 112, 115, 117, 119, 121, 123, 125, 131, 134, 141], "sorted_coulomb": 3, "random_coulomb": 3, "rc": [3, 125], "set": [3, 4, 6, 8, 9, 10, 13, 79, 85, 103, 105, 112, 120, 121, 123, 127, 137, 141], "maximum": [3, 4, 6, 8, 132], "per": [3, 4, 7, 137, 141], "pad": 3, "find": [3, 4, 8, 9, 117, 125, 141], "base": [3, 4, 6, 7, 8, 9, 10, 14, 15, 77, 86, 106, 107, 109, 112, 117, 119, 121, 127, 136, 137], "permut": 3, "j": [3, 4, 117, 137], "n_molecules_": 3, "total": [3, 4, 119, 121, 123, 129, 131, 132], "max_n_atoms_": [3, 6], "m1": 3, "c1ccc1": 3, "smile": [3, 5, 10, 11, 12, 32, 62, 65, 117, 118, 119, 120, 121, 126, 127, 129, 132, 137, 139], "m2": 3, "cnc": 3, "m3": [3, 5, 119, 127], "cc": [3, 127, 129], "m4": 3, "ccc": 3, "mol": [3, 11, 58, 119, 122, 125], "to_xyz": [3, 119, 122, 125], "uff": [3, 122], "cm": [3, 6, 11, 58, 125], "static": [3, 125], "concat_datafram": 3, "mol_tensors_list": 3, "tensor": [3, 7, 119, 123], "same": [3, 4, 5, 7, 8, 9, 10, 123, 129, 131, 137, 141], "row": [3, 5, 9, 117, 120, 125, 136], "exact": [3, 6, 7, 10], "2": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 26, 32, 43, 44, 47, 51, 58, 67, 77, 82, 84, 98, 106, 107, 117, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137], "checkupd": [3, 12, 32], "savelayout": [3, 12, 32], "preservetemporaryproject": [3, 12, 32], "showworksheet": [3, 12, 32], "fals": [3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 32, 46, 52, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 119, 120, 121, 122, 123, 129], "decimal_separ": [3, 12, 32], "missing_str": [3, 12, 32], "nan": [3, 4, 12, 13, 32, 78, 128], "defaultmolformat": [3, 12, 32], "helpbrows": [3, 12, 32], "usr": [3, 12, 32], "bin": [3, 10, 12, 16, 32, 61], "xdg": [3, 12, 32], "open": [3, 6, 12, 32, 112, 115, 121, 123, 127, 142], "rejectunusualval": [3, 12, 32], "add2dhydrogen": [3, 12, 32], "maxsrforallcircuit": [3, 12, 32], "19": [3, 6, 11, 12, 13, 14, 15, 32, 44, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 123, 126, 129], "maxsr": [3, 12, 32], "35": [3, 6, 8, 11, 12, 32, 58, 120, 123, 129], "maxsrdetour": [3, 12, 32], "30": [3, 6, 8, 11, 12, 29, 32, 58, 123, 129], "maxatomwalkpath": [3, 12, 32], "2000": [3, 12, 32], "logpathwalk": [3, 12, 32], "logedg": [3, 12, 32], "weight": [3, 4, 7, 8, 10, 12, 16, 23, 32, 60, 137], "mass": [3, 12, 32], "vdwvolum": [3, 12, 32], "electroneg": [3, 4, 12, 32], "polariz": [3, 5, 11, 12, 32, 66, 115, 117, 138], "ioniz": [3, 4, 12, 32], "state": [3, 4, 7, 8, 12, 32, 117], "saveonlydata": [3, 12, 32], "savelabelsonseparatefil": [3, 12, 32], "saveformatblock": [3, 12, 32], "b": [3, 4, 6, 10, 11, 12, 16, 32, 58, 67, 133], "n": [3, 4, 6, 7, 8, 11, 12, 32, 58, 119, 120, 121, 122, 125, 129], "txt": [3, 12, 32, 121, 131, 132], "saveformatsubblock": [3, 12, 32], "m": [3, 4, 9, 12, 13, 32, 47, 119, 120, 123, 126, 127, 129, 130], "saveexcludemisv": [3, 12, 32], "saveexcludeallmisv": [3, 12, 32], "saveexcludeconst": [3, 12, 32], "saveexcludenearconst": [3, 12, 32], "saveexcludestddev": [3, 12, 32], "savestddevthreshold": [3, 12, 32], "0001": [3, 7, 12, 14, 32, 76, 83, 87, 88, 89, 92, 93, 101, 120, 121], "saveexcludecorrel": [3, 12, 32], "savecorrthreshold": [3, 12, 32], "95": [3, 6, 11, 12, 32, 58, 129], "saveexclusionoptionstovari": [3, 12, 32], "saveexcludemismolecul": [3, 12, 32], "saveexcluderejectedmolecul": [3, 12, 32], "4": [3, 4, 6, 8, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 115, 117, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 136, 137], "5": [3, 4, 6, 8, 10, 11, 12, 14, 16, 17, 32, 53, 58, 60, 61, 67, 70, 76, 89, 92, 95, 101, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137], "6": [3, 4, 6, 8, 11, 12, 20, 32, 58, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132], "7": [3, 4, 6, 11, 12, 32, 58, 115, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 137, 141], "8": [3, 4, 6, 11, 12, 32, 58, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 137, 141], "9": [3, 4, 6, 7, 11, 12, 14, 32, 58, 89, 120, 121, 122, 123, 125, 126, 128, 129, 131, 132, 137], "10": [3, 4, 6, 8, 11, 12, 13, 20, 32, 48, 58, 103, 105, 112, 117, 120, 121, 122, 123, 126, 127, 129, 132, 137], "11": [3, 6, 11, 12, 32, 58, 117, 120, 121, 122, 123, 125, 126, 127, 129, 132], "12": [3, 4, 6, 11, 12, 32, 58, 115, 120, 121, 122, 123, 125, 126, 129, 131], "13": [3, 6, 11, 12, 32, 58, 121, 122, 123, 126, 129, 137], "14": [3, 4, 6, 11, 12, 32, 38, 58, 121, 122, 123, 125, 126, 129, 131, 132], "15": [3, 6, 11, 12, 14, 15, 32, 58, 101, 110, 121, 123, 125, 126, 129, 137], "16": [3, 4, 6, 11, 12, 14, 32, 58, 82, 84, 121, 123, 126, 129], "17": [3, 6, 11, 12, 32, 58, 119, 121, 123, 126, 129], "18": [3, 5, 6, 10, 11, 12, 16, 32, 58, 60, 121, 123, 126, 127, 129, 131], "20": [3, 4, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 119, 120, 121, 123, 125, 126, 129], "21": [3, 6, 11, 12, 32, 58, 121, 123, 129, 137], "22": [3, 6, 11, 12, 32, 58, 121, 123, 125, 129], "23": [3, 6, 11, 12, 32, 58, 117, 121, 123, 127, 129], "24": [3, 6, 11, 12, 32, 58, 121, 122, 123, 125, 129, 131, 137], "25": [3, 4, 6, 11, 12, 13, 14, 32, 58, 100, 101, 111, 121, 123, 129, 132], "26": [3, 6, 11, 12, 32, 58, 123, 125, 129, 132], "27": [3, 4, 6, 11, 12, 32, 58, 123, 129], "28": [3, 6, 11, 12, 32, 58, 122, 123, 129], "29": [3, 6, 11, 12, 32, 58, 123, 125, 127, 129], "savestdout": [3, 12, 32], "saveproject": [3, 12, 32], "saveprojectfil": [3, 12, 32], "dragon_project": [3, 12, 32], "drp": [3, 12, 32], "savefil": [3, 6, 12, 32, 115, 121, 132], "savetyp": [3, 12, 32], "singlefil": [3, 12, 32], "savefilepath": [3, 12, 32], "dragon_descriptor": [3, 12, 32], "logmod": [3, 12, 32], "file": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 121, 127, 129, 131, 132, 143], "logfil": [3, 12, 32], "dragon_log": [3, 12, 32], "extern": [3, 12, 32, 117], "filenam": [3, 6, 7, 10, 12, 17, 32, 52, 53, 115, 121, 129, 132, 133], "none": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 25, 32, 35, 36, 37, 43, 44, 46, 47, 51, 52, 53, 55, 58, 60, 61, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 119, 120, 122, 123, 125, 128, 129], "delimit": [3, 11, 12, 32, 72], "consecutivedelimit": [3, 12, 32], "rejectdisconnectedstrucutur": [3, 12, 32], "retainbiggestfrag": [3, 12, 32], "disconnectedcalculationopt": [3, 12, 32], "roundcoordin": [3, 12, 32], "roundweight": [3, 12, 32], "rounddescriptorvalu": [3, 12, 32], "knimemod": [3, 12, 32], "chemoinformat": 3, "softwar": [3, 112, 115, 117, 137], "commerci": [3, 115], "you": [3, 4, 6, 7, 8, 9, 115, 117, 121, 122, 123, 125, 127, 131, 132, 134, 141, 142], "should": [3, 6, 7, 8, 122, 123, 141], "user": [3, 4, 17, 53, 112, 121, 122, 126, 127, 131, 141, 142], "system": [3, 4, 117], "rang": [3, 4, 6, 8, 121, 126, 127, 137], "31": [3, 6, 11, 58, 123, 129, 132], "integ": [3, 4, 6, 7, 8, 9, 10, 141], "id": [3, 4, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 141], "There": [3, 4], "respect": [3, 4, 6, 7, 8, 9, 131, 132, 137], "atim": 3, "cherri": 3, "pick": [3, 4], "For": [3, 4, 6, 7, 8, 112, 121, 123, 126, 127, 129, 131, 137, 142], "do": [3, 4, 121, 127], "so": [3, 4, 127], "script": [3, 11, 12, 32, 50, 115, 121, 131, 132], "wizard": 3, "drgon": 3, "gui": [3, 115, 117, 131, 132, 141, 143], "boolean": [3, 9, 10, 13, 14, 15, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111], "variabl": [3, 4, 7, 8, 11, 12, 50, 51, 121, 126, 127], "end": [3, 6, 7], "save": [3, 7, 10, 115, 117, 121, 122, 131, 132, 133, 134, 142], "document": [3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 121], "rest": 3, "can": [3, 4, 6, 7, 8, 9, 10, 112, 115, 119, 121, 122, 123, 125, 127, 131, 132, 141, 142], "found": [3, 4, 8, 141], "http": [3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 26, 53, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 123, 142], "www": [3, 123], "talet": 3, "mi": [3, 120], "help": [3, 8, 112], "dragon_help": 3, "index": [3, 4, 8, 9, 17, 52, 53, 117, 123, 138, 142], "html": [3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 53, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 142], "chm": 3, "kode": 3, "solut": [3, 4], "net": 3, "products_dragon_tutori": 3, "php": 3, "pd": [3, 6, 11, 58, 120, 123, 126, 128, 129, 130, 133], "drg": 3, "mol_list": [3, 137], "output_directori": [3, 10, 12, 17, 32, 52, 53, 115, 121, 129, 131, 132, 133], "dropna": 3, "directori": [3, 4, 6, 7, 10, 117, 121, 123, 127, 131, 132], "drop": [3, 120, 127], "ani": [3, 4, 6, 8, 10, 11, 12, 50, 51, 112, 117, 121, 123, 131, 132, 141], "input_mol": 3, "input_typ": [3, 122], "engin": [3, 4, 7, 11, 71, 72, 112, 115, 117, 120, 121, 129, 131, 132], "rdkit": [3, 12, 51, 112, 117, 122, 132, 137], "kwarg": [3, 7, 8, 10, 15, 16, 17, 53, 61, 110, 115, 129, 132, 133], "central": [3, 4, 122, 123], "construct": [3, 117, 118], "chemic": [3, 4, 6, 112, 117, 118, 125, 137], "format": [3, 4, 5, 6, 9, 10, 11, 12, 17, 50, 51, 52, 53, 112, 115, 117, 118, 119, 121, 123, 131, 132, 137, 141], "built": [3, 7, 10, 121, 122], "top": [3, 4, 6, 10, 122, 126, 137], "openbabel": [3, 6, 11, 26, 112, 117, 122, 137], "python": [3, 4, 7, 8, 11, 50, 112, 117, 119, 121, 122, 123, 129, 131, 132, 141, 142], "join": [3, 13, 68, 122], "forc": [3, 122], "strength": [3, 122, 137], "cheminformat": [3, 112, 122], "consist": [3, 6, 115, 122], "experi": [3, 122, 123], "almost": 3, "ml": [3, 7, 112, 117, 137, 143], "informatin": 3, "sever": [3, 4, 112, 122], "facilit": [3, 7, 112, 122, 141, 142], "string": [3, 4, 6, 8, 9, 10, 13, 14, 15, 25, 43, 44, 46, 47, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110], "path": [3, 4, 6, 7, 10, 11, 12, 26, 32, 51, 123, 129, 131, 132], "enlist": 3, "here": [3, 4, 7, 8, 115, 117, 119, 121, 123, 126, 131, 132, 138, 141], "smart": [3, 122], "inchi": [3, 117, 118], "mol2": 3, "correspond": [3, 4, 7, 8, 137, 141], "argument": [3, 4, 7, 8, 12, 51, 120, 123, 127], "org": [3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 26, 53, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 123, 142], "doc": [3, 7, 11, 13, 15, 16, 68, 69, 70, 71, 72, 131, 132, 142], "sourc": [3, 115, 117, 142], "rdmolfil": 3, "molfromsmil": 3, "molfromsmart": 3, "highlight": 3, "molfrominchi": 3, "creatd": 3, "rdkit_molecul": [3, 122], "load": [3, 4, 5, 7, 117, 123, 127, 134, 137], "its": [3, 4, 7, 10, 112, 127, 137, 141], "high": [3, 4, 117, 138], "probabl": [3, 8], "t": [3, 4, 8, 11, 12, 15, 17, 24, 30, 53, 58, 62, 63, 64, 65, 66, 71, 72, 110, 132, 137], "convert": [3, 4, 7, 11, 26, 71, 72, 117, 118, 125, 137], "due": [3, 4, 123], "abstract": [3, 7], "descript": [3, 4, 8], "rdchem": [3, 122], "get": [3, 4, 8, 117, 120, 121, 122, 135, 137, 141], "to_smil": [3, 122], "to_smart": [3, 122], "to_inchi": [3, 122], "instanc": [3, 4, 7, 8, 13, 14, 15, 25, 43, 44, 46, 47, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 116, 117], "3d": [3, 117, 118], "info": [3, 8, 122, 123], "atomic_numb": [3, 122], "atomic_symbol": [3, 122], "caffeine_smil": [3, 122], "cn1c": [3, 122], "nc2": [3, 122], "c1c": [3, 122], "o": [3, 4, 6, 11, 58, 112, 115, 119, 122, 123, 129, 142], "c": [3, 4, 6, 11, 14, 58, 87, 88, 95, 102, 117, 120, 121, 122, 127, 131, 132, 137], "n2c": [3, 122], "caffeine_smart": [3, 122], "caffeine_inchi": [3, 122], "c8h10n4o2": [3, 122], "c1": [3, 122], "h4h": [3, 122], "3h3": [3, 122], "0x11060a8a0": 3, "creator": [3, 122], "c2c": [3, 122], "ncn2c": [3, 122], "canon": 3, "kekulesmil": [3, 122], "c2": [3, 122], "cn2c": [3, 122], "kukul": 3, "isomericsmil": [3, 122], "add": [3, 4, 7, 10, 117, 118, 119, 123, 125], "hydrogen": [3, 117, 118, 119, 125], "recreat": 3, "0x11060ab70": 3, "h": [3, 4, 6, 11, 58], "c1nc2c": 3, "n1c": 3, "chang": [3, 4, 8, 9, 10, 123, 132, 142], "conform": 3, "yet": [3, 4, 132], "mayb": 3, "2d": [3, 10], "wish": 3, "emb": 3, "mmff": [3, 119, 122, 125], "maxit": [3, 119, 122, 125], "300": [3, 14, 73, 74, 122, 123], "mmffvariant": [3, 119, 122, 125], "mmff94": [3, 119, 122, 125, 137], "0x1105f34e0": 3, "13498321": 3, "08078307": 3, "33372515": 3, "15703638": 3, "0494926": 3, "0969075": 3, "41850776": 3, "27323453": 3, "14538583": 3, "30933543": 3, "96359887": 3, "32234393": 3, "31298208": 3, "04463051": 3, "1870366": 3, "80033326": 3, "20055608": 3, "07079013": 3, "02979071": 3, "33923464": 3, "25484381": 3, "41969338": 3, "45755985": 3, "48688003": 3, "39083332": 3, "04039479": 3, "14253256": 3, "93405927": 3, "23430839": 3, "12320318": 3, "15509616": 3, "39892779": 3, "20417755": 3, "03516373": 3, "28860035": 3, "28833489": 3, "51247526": 3, "63123373": 3, "56438513": 3, "34337825": 3, "12037198": 3, "31039958": 3, "03038469": 3, "84426033": 3, "44113804": 3, "95880047": 3, "50667225": 3, "32459816": 3, "13807215": 3, "64857048": 3, "29175711": 3, "4224011": 3, "6776074": 3, "18199971": 3, "60349515": 3, "67375289": 3, "61674561": 3, "10339164": 3, "96582894": 3, "52299068": 3, "17455601": 3, "30144289": 3, "23239402": 3, "94406381": 3, "20916763": 3, "60086251": 3, "86156872": 3, "07985237": 3, "51337935": 3, "01465788": 3, "87625024": 3, "14039627": 3, "dtype": [3, 7, 11, 13, 71, 72, 96, 119], "u1": 3, "action": [3, 141], "remov": [3, 4, 7, 8, 9, 112, 117, 118, 120, 136], "prebuilt": 3, "either": [3, 4, 7, 8, 125], "hydrogn": 3, "them": [3, 6, 8, 9, 117, 120, 123, 129, 136, 137, 141], "pass": [3, 7, 8, 12, 37, 121, 123, 129, 132, 141], "addh": 3, "rdmolop": 3, "removeh": [3, 12, 51], "pybel": [3, 122], "creat": [3, 4, 6, 7, 8, 10, 115, 117, 119, 121, 122, 131, 132, 135, 137, 139, 142], "onli": [3, 4, 6, 8, 10, 13, 75, 78, 80, 90, 91, 94, 96, 97, 98, 100, 104, 120, 123, 127, 137, 141], "modifi": [3, 115], "place": [3, 112, 141], "might": [3, 4, 141], "accur": [3, 132, 137], "pre": [3, 7, 112, 137], "moltoinchi": 3, "to_mol2": 3, "extract": [3, 141], "structur": [3, 4, 5, 112, 122, 125, 131, 137, 141], "ghemic": 3, "allchem": 3, "uffoptimizemolecul": 3, "mmffoptimizemolecul": 3, "forcefil": 3, "rdforcefieldhelp": 3, "won": [3, 8], "ad": [3, 4], "automat": [3, 112, 115], "manual": [3, 6, 115, 117, 142, 143], "g": [3, 4, 6, 7, 8, 10, 112, 115, 117, 123, 131, 133, 134, 141], "doesn": [3, 8, 11, 12, 15, 17, 24, 30, 53, 58, 62, 63, 64, 65, 66, 71, 72, 110], "exist": [3, 10, 115, 123, 125, 131], "nedd": 3, "field": [3, 122], "still": [3, 4], "need": [3, 7, 8, 10, 11, 26, 117, 122, 123, 134, 141], "embed": 3, "scratch": 3, "current": [3, 4, 7, 8, 112, 117, 121, 123, 131, 132, 142], "moltosmart": 3, "moltosmil": 3, "canoc": 3, "unless": [3, 8], "when": [3, 4, 8, 120, 127, 132, 141], "request": [3, 4, 8, 117, 123], "step": [3, 7, 117, 119, 125, 129, 131, 132, 142], "500": [3, 5, 14, 82, 84, 119, 120, 123, 125, 126, 127, 129, 132], "both": [3, 4, 6, 8, 112, 115, 116, 117], "avaialbl": 3, "want": [3, 4, 6, 115, 122, 141], "write": [3, 121], "imag": [3, 122, 123, 129, 132, 133], "tkinter": 3, "extra": [3, 8, 137], "draw": [3, 8], "tool": [3, 4, 123], "dev": [3, 15, 108, 110], "usethelibrari": 3, "python_pybelapi": 3, "abl": [3, 8, 123, 131], "displai": [3, 4, 10, 121, 123, 131, 132], "insid": [3, 4, 8, 122, 123, 141], "jupyt": [3, 117, 142], "notebook": [3, 121, 131, 132, 142], "fingerprint_typ": [3, 125, 137], "morgan": [3, 12, 51, 121, 125, 132, 137], "vector": [3, 7, 9, 12, 51, 121, 125, 132, 137], "bit": [3, 7, 9, 12, 51, 121, 125, 126, 137], "n_bit": [3, 125], "1024": [3, 12, 51, 121, 125, 137], "radiu": [3, 4, 12, 51, 125, 137], "fingerprint": [3, 7, 112, 117, 121, 132, 134, 137], "packag": [3, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 132, 137, 141, 142], "hashed_atom_pair": [3, 125], "hap": [3, 125, 137], "macc": [3, 125], "hashed_topological_tors": [3, 125], "htt": [3, 125, 137], "topological_tors": 3, "tt": 3, "count": [3, 4, 121], "fragment": 3, "instead": [3, 7, 123], "It": [3, 4, 6, 7, 8, 9, 10, 112, 116, 117, 141], "zero": [3, 4, 6, 9, 117, 120, 136], "ones": [3, 4, 123, 130, 137], "element": [3, 4, 8, 9, 112], "Not": 3, "availbl": 3, "have": [3, 4, 7, 8, 115, 121, 122, 123, 127, 129, 132, 141], "fix": [3, 4, 6, 141], "length": [3, 4, 5, 6, 9, 137], "167": 3, "applic": [3, 4, 112, 137], "calcul": [3, 4, 8, 115, 121, 126, 127, 137], "fps_": 3, "load_spars": 3, "enabl": [3, 129, 131], "spars": [3, 13, 96], "npz": 3, "dens": [3, 7, 119, 123, 129], "those": [3, 4, 131], "howev": [3, 6, 137], "mai": [3, 4, 117, 122, 125, 131, 132, 134, 141, 142], "ignor": [3, 6, 8, 117, 123, 125, 127, 129, 136, 141], "your": [3, 4, 8, 10, 115, 123, 127, 141, 142], "kekul": [3, 122], "dimension": [3, 8, 123, 137], "store_spars": 3, "higli": 3, "memori": 3, "effici": [3, 4, 8, 112, 137], "less": [3, 123, 137, 141], "time": [3, 8, 121, 126, 127, 131, 132], "anoth": [3, 4, 141], "back": [3, 8], "typic": [3, 6, 7], "carri": [3, 115, 123, 137], "standard": [3, 8, 9, 127], "ndarrai": [3, 7, 8, 12, 21, 28], "numpi": [3, 4, 7, 12, 13, 21, 28, 96, 112, 117, 119, 123, 125, 128, 129, 130, 133], "number_of_atom": 3, "order": [3, 4, 8, 112, 119, 126, 127, 137], "symbol": [3, 6], "encod": [3, 11, 72, 125, 126], "binari": [3, 4, 9, 125, 126, 129], "specifi": [3, 4, 7, 8, 9, 10, 112, 121, 122, 127, 131, 132, 141, 142], "doubl": [3, 137, 141], "tripl": [3, 137], "aromat": 3, "conjug": 3, "belong": [3, 4], "ring": [3, 137], "n_featur": [3, 7, 137], "max_degre": [3, 7, 119, 125], "max_atom": [3, 7, 119, 125], "batch_siz": [3, 7, 8, 14, 43, 44, 89, 119, 120, 123, 125, 129], "3000": [3, 119], "take": [3, 7], "convolut": [3, 7, 117, 119], "network": [3, 4, 7, 116, 117, 134, 137], "learn": [3, 4, 7, 8, 13, 14, 15, 44, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 125, 127, 132, 134, 135, 138], "david": 3, "duvenaud": [3, 7], "nip": 3, "try": 3, "neighbour": [3, 7], "bigger": 3, "chunksiz": [3, 11, 72], "preffer": 3, "prealloc": 3, "np": [3, 6, 11, 58, 119, 121, 123, 125, 128, 129, 130, 133], "recommend": [3, 4, 8, 9, 10, 115, 117, 121, 131, 142], "neuralgraph": 3, "layer": [3, 7, 8, 117, 119, 121, 123, 132, 134, 137], "trainabl": [3, 119, 123, 129], "essenti": 3, "hyperparamet": [3, 117, 121, 135, 137], "while": [3, 4, 123], "rebuilt": 3, "thei": [3, 4, 7, 8, 112, 122, 137, 141], "cannot": [3, 127], "rebuild": [3, 129], "architectur": [3, 112, 137], "organ": [3, 4, 5, 119, 120, 126, 127, 129, 137], "good": 3, "edg": [3, 4, 7, 119, 125, 141], "connect": [3, 7, 115, 119, 123, 125, 141], "adapt": [4, 112, 116, 117], "entir": [4, 7, 8, 9, 123], "magpi": [4, 5, 112, 117], "bitbucket": [4, 5], "wolverton": [4, 5], "cite": [4, 112, 117, 137], "ward": 4, "agraw": 4, "choudhari": 4, "gener": [4, 8, 11, 13, 14, 15, 16, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 121, 126, 127, 131, 137, 142, 143], "purpos": [4, 112, 137], "machin": [4, 8, 15, 77, 106, 107, 109, 112, 117, 123, 125, 127, 132, 137], "framework": [4, 137], "predict": [4, 7, 8, 14, 15, 43, 44, 73, 74, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 95, 99, 101, 102, 106, 112, 115, 117, 119, 121, 123, 126, 127, 132, 133, 134, 137], "properti": [4, 10, 112, 137], "materi": [4, 112, 117, 137], "npj": 4, "vol": 4, "aug": 4, "2016": [4, 12, 51], "regard": [4, 8, 131], "github": [4, 117, 142], "com": [4, 117, 142], "ramv2": 4, "pack": [4, 137], "ap": 4, "nearbi": 4, "cluster": [4, 121, 131, 132], "packing_threshold": [4, 12, 19], "threshold": [4, 9, 13, 75], "defin": [4, 7, 8, 9, 117, 119, 121, 123, 125, 135, 141], "n_nearest_to_ev": [4, 12, 19], "array_lik": [4, 10], "nearest": 4, "assess": [4, 112, 137], "max_n_typ": 4, "over": 4, "search": [4, 8, 15, 69, 77, 106, 107, 108, 109, 110, 112, 117, 121, 126, 127, 135, 137, 141], "radius_properti": [4, 12, 19], "law": 4, "ideal": 4, "actual": [4, 117, 121, 132, 133, 134], "ratio": 4, "shell": [4, 12, 23, 41, 42], "certain": [4, 9], "often": [4, 8, 123], "quantiti": 4, "size": [4, 7, 8, 10, 16, 60, 115, 119, 123], "neighbor": 4, "around": 4, "maxim": [4, 8], "These": [4, 7, 8, 112, 115, 119], "tabul": 4, "miracl": 4, "divid": [4, 141], "averag": [4, 14, 101], "better": [4, 112, 121], "than": [4, 8, 131, 141], "fewer": 4, "alloi": 4, "taken": [4, 126, 127], "design": [4, 112, 115, 137], "measur": 4, "configur": [4, 7, 115, 141], "liquid": 4, "mean": [4, 8, 9, 13, 78, 117, 119, 120, 121, 123, 127, 136, 137], "assum": [4, 7, 8, 115], "composit": [4, 5, 112], "first": [4, 6, 8, 9, 115, 123, 125, 137, 141], "equal": [4, 8, 141], "surround": 4, "As": [4, 6, 11, 58], "shown": [4, 112, 132], "recent": 4, "work": [4, 10, 112, 117, 123, 137], "bulk": 4, "metal": 4, "glass": 4, "known": [4, 117], "form": [4, 8, 10, 116, 117, 125], "under": [4, 117, 131, 142], "assumpt": 4, "deviat": [4, 8, 9, 127], "perfect": 4, "algorithm": [4, 8, 112, 117, 123, 126, 127, 137, 143], "evalu": [4, 8, 15, 69, 108, 110, 112, 117, 119, 126, 127, 134, 143], "possibl": [4, 7, 117], "runtim": 4, "now": [4, 7, 115, 123], "up": [4, 7, 117, 127], "avoid": [4, 123, 137, 141], "combinatori": 4, "problem": [4, 8, 121], "practic": [4, 137], "highest": [4, 5, 132], "fraction": [4, 8], "idea": [4, 123], "sinc": [4, 137], "most": [4, 112, 125], "compon": [4, 8, 123], "mani": [4, 8, 112, 123, 141], "impur": 4, "present": [4, 115, 137], "larg": [4, 137], "enough": [4, 8], "amount": 4, "realli": 4, "affect": [4, 10], "d": [4, 6, 11, 58, 120, 121], "ferri": 4, "natur": 4, "commun": [4, 112], "p": [4, 6, 11, 58], "8123": 4, "sep": [4, 11, 72], "lord": 4, "ranganathan": 4, "candid": [4, 5, 8, 123, 137], "transact": 4, "47": [4, 6, 11, 58, 123, 129, 132], "pp": 4, "1737": 4, "1742": 4, "2006": 4, "v": [4, 6, 11, 58, 117, 132, 133, 134], "louzguin": 4, "luzgin": 4, "l": 4, "louzguina": 4, "luzgina": 4, "inou": 4, "correl": 4, "abil": 4, "stabil": 4, "intern": [4, 8], "review": 4, "55": [4, 6, 11, 15, 58, 109, 123, 129], "218": 4, "256": [4, 123], "jul": 4, "2010": 4, "classmethod": [4, 7], "compute_ap": 4, "n_neighbor": 4, "center_radiu": 4, "neigh_eff_radiu": 4, "radii": 4, "center_typ": 4, "shell_typ": 4, "given": [4, 7, 112], "ident": [4, 121], "1st": 4, "just": [4, 8, 122, 141], "formul": 4, "effect": 4, "usual": 4, "like": [4, 7, 8, 117], "center": [4, 117], "outer": [4, 13, 68], "compute_cluster_composit": 4, "e_id": 4, "compos": 4, "ex": 4, "determine_optimal_ap": 4, "central_atom_typ": 4, "shell_composit": 4, "cell": [4, 137], "z": [4, 6, 11, 58], "th": [4, 6, 11, 58], "lookup": 4, "closest": 4, "site": [4, 132], "partial": [4, 8, 123], "occupi": [4, 5, 132], "find_efficiently_packed_clust": 4, "ab": [4, 7], "desir": [4, 112, 131, 132, 142], "limit": [4, 6, 8], "choic": [4, 8, 112, 121, 123, 126, 127], "would": [4, 132], "05": [4, 120, 121, 123, 129, 131, 132], "x": [4, 6, 7, 8, 10, 15, 16, 61, 67, 70, 106, 107, 109, 115, 120, 121, 123, 125, 129, 132, 133, 137], "2nd": 4, "generate_featur": 4, "mention": [4, 112], "item": 4, "get_closest_composit": 4, "target_composit": 4, "other_composit": 4, "n_closest": 4, "p_norm": [4, 12, 55], "target": [4, 7, 9, 117, 119, 125, 129, 138], "whose": [4, 9], "rank": 4, "compound": [4, 112, 119, 132, 137], "norm": [4, 10, 13, 94, 115], "dist": 4, "comp": 4, "get_cluster_rang": 4, "minimum": 4, "smallest": 4, "largest": 4, "outsid": [4, 123], "min_cluster_s": 4, "max_cluster_s": 4, "set_n_nearest_to_ev": 4, "set_packing_threshold": 4, "consid": [4, 9, 119, 127, 137], "01": [4, 7, 14, 43, 44, 101, 119, 120, 129, 131, 132], "neg": [4, 8], "set_radius_properti": 4, "prop": 4, "By": [4, 8, 137], "miracleradiu": 4, "radial": 4, "distribut": [4, 8, 117, 127, 135], "rdf": 4, "approach": [4, 8, 112, 123, 137], "fernandez": 4, "cutoff": 4, "point": [4, 8, 123, 132, 137], "smooth": 4, "factor": 4, "peak": 4, "contact": 4, "logan": 4, "author": [4, 112, 117, 137], "paper": [4, 7, 126, 127], "question": 4, "cut_off_dist": [4, 12, 20, 48], "num_point": [4, 12, 20], "smooth_paramet": [4, 12, 20], "elemental_properti": [4, 12, 20, 36, 41, 42], "associ": [4, 7, 112], "r": [4, 10, 119, 121, 123, 129, 137], "trefiak": 4, "k": [4, 6, 10, 11, 16, 58, 60, 123], "woo": 4, "ga": [4, 6, 11, 58, 121, 126, 127], "uptak": 4, "capac": 4, "journal": [4, 112, 117, 137], "physic": [4, 112, 117, 138], "chemistri": [4, 112, 117, 137], "117": [4, 6, 11, 58], "14095": 4, "14105": 4, "2013": 4, "add_elemental_properti": 4, "property_nam": 4, "self": [4, 7], "clear_elemental_properti": 4, "clear": 4, "crystal": [4, 5, 112, 131], "set_cut_off_dist": 4, "cut": 4, "off": [4, 10], "prdf": 4, "set_num_point": 4, "window": [4, 142], "set_smoothing_paramet": 4, "deriv": [4, 137], "oxid": 4, "deml": 4, "formal": 4, "oxidationstateguess": 4, "statist": 4, "min": [4, 8, 10, 121, 126, 127], "max": [4, 8, 10], "varianc": 4, "cumul": 4, "electron": [4, 5, 137], "affin": 4, "cation": 4, "anion": 4, "fail": 4, "hayr": 4, "stevanovi\u0107": 4, "densiti": [4, 5, 10, 11, 65, 117, 119, 120, 123, 126, 127, 134, 137], "theori": [4, 5, 137], "enthalpi": 4, "nonmet": 4, "linear": [4, 7, 8, 13, 14, 80, 81, 119, 120, 123, 126, 127], "93": [4, 6, 11, 58, 129], "feb": 4, "warren": 4, "cowlei": 4, "voronoi": 4, "tessel": 4, "whether": [4, 7], "voronoicellbasedanalysi": 4, "get_neighbor_ordering_paramet": 4, "magnitud": 4, "perfectli": 4, "random": [4, 8, 117, 119, 125, 133, 135, 137, 141], "degre": [4, 7, 13, 14, 80, 81, 95, 98, 102, 127], "3rd": 4, "unweight": 4, "former": 4, "weigh": 4, "contribut": [4, 112, 117], "surfac": 4, "area": 4, "boundari": 4, "veri": [4, 7], "sensit": 4, "introduct": [4, 117], "small": [4, 5, 119, 120, 126, 127, 129, 137], "face": 4, "numer": [4, 9, 112, 125], "inher": 4, "full": [4, 120], "detail": [4, 123, 131, 132], "vassal": 4, "getneighbororderingparamet": 4, "set_shel": 4, "indic": [4, 6, 8, 9, 13, 79, 85, 103, 105, 123, 126, 137], "set_weight": [4, 7], "element_id": 4, "element_nam": 4, "mainli": 4, "lp_element_nam": 4, "lp_sorting_ord": 4, "number_in_cel": 4, "print": [4, 5, 119, 120, 121, 122, 123, 125, 126, 127, 129, 131, 133], "combine_composit": 4, "total_comp": 4, "add_comp": 4, "multipli": 4, "dict": [4, 5, 8, 11, 12, 15, 21, 26, 28, 32, 58, 66, 108], "dictionari": [4, 6, 7, 8, 10, 11, 15, 58, 66, 108, 123, 126, 127], "get_element_fract": 4, "element_fract": 4, "get_element_id": 4, "get_element_nam": 4, "import_composition_list": 4, "file_path": [4, 11, 26], "read": [4, 6, 112, 121, 123], "composition_list": 4, "import_values_list": 4, "develop": [4, 112, 117, 131, 132, 137], "property_list": 4, "parse_composit": 4, "pars": [4, 112, 121, 131, 132], "support": [4, 7, 112, 117], "parenthes": 4, "na_2co_3": 4, "10h_2o": 4, "properli": [4, 8], "na_2": 4, "co_3": 4, "_1": 4, "formula": 4, "close": [4, 121, 123], "parenthesi": 4, "miss": [4, 9, 117, 120, 136], "recogn": 4, "parse_element_amount": 4, "tmp_entri": 4, "print_numb": 4, "n_in_formula_unit": 4, "out": [4, 8, 115, 117, 123, 137, 141], "set_composit": 4, "to_sort": 4, "check": [4, 8, 10, 117], "posit": [4, 9, 10, 14, 76, 82, 83, 84, 141], "sort_and_norm": 4, "sort": [4, 9, 125], "proper": 4, "constructor": 4, "well": [4, 112, 117, 137], "sine": 4, "faber": 4, "n_eigenvalu": [4, 12, 29], "approxim": [4, 137], "period": 4, "c_": 4, "z_i": 4, "ext": 4, "z_j": 4, "r_ij": 4, "eigenvalu": 4, "remain": [4, 6, 8], "primit": 4, "befor": [4, 8], "lindmaa": 4, "von": 4, "lilienfeld": 4, "armiento": 4, "quantum": [4, 137], "115": [4, 6, 11, 58], "1094": 4, "1101": 4, "apr": 4, "set_n_eigenvalu": 4, "denot": 4, "book": 4, "keep": [4, 9, 123, 141], "variou": [4, 8, 112, 131, 137], "queri": [4, 8, 123, 125], "clear_represent": 4, "compute_composit": 4, "except": [4, 6, 8, 120, 127, 137, 141], "compute_voronoi_tessel": 4, "get_nam": 4, "get_structur": 4, "import_structures_list": 4, "dir_path": 4, "vasp": 4, "structures_list": 4, "replace_el": 4, "replac": [4, 8, 9, 117, 136], "new": [4, 7, 10, 12, 13, 32, 75, 78, 80, 90, 91, 94, 96, 97, 98, 100, 104, 117, 137, 142], "old": 4, "new_entri": 4, "map": [4, 8, 112, 126], "thought": 4, "n_": 4, "eff": 4, "displaystyl": 4, "rac": 4, "sum": [4, 7, 119], "f_i": 4, "sa": [4, 10, 129, 133], "where": [4, 7, 8, 9, 10, 141], "math": 4, "major": [4, 112], "benefit": 4, "against": 4, "perturb": 4, "break": 4, "symmetri": 4, "lead": [4, 137], "convent": 4, "treat": 4, "even": [4, 115], "One": 4, "literatur": [4, 138], "appli": [4, 117], "screen": [4, 137], "smaller": [4, 8], "discontinu": 4, "larger": [4, 137], "displac": 4, "our": [4, 8, 112, 119, 121, 126, 127, 131, 132, 137], "differenti": 4, "ask": [4, 8, 123], "captur": 4, "interest": [4, 127], "dispers": [4, 137], "exampl": [4, 6, 7, 8, 117, 131, 132, 135], "bcc": 4, "identifi": [4, 137], "closer": 4, "commonli": 4, "accept": [4, 6, 10], "report": [4, 137], "fcc": 4, "agre": 4, "exactli": 4, "mean_abs_dev": 4, "absolut": [4, 8, 119, 120, 121, 123, 137], "constitu": 4, "pair": [4, 137], "elemental_pair_properti": [4, 12, 35], "pair_lookup": 4, "add_elemental_pair_properti": 4, "load_pair_lookup_data": 4, "lookup_data": 4, "remove_elemental_pair_properti": 4, "use_default_properti": [4, 12, 36], "mode": [4, 123], "load_lookup_data": 4, "remove_elemental_properti": 4, "0k": 4, "ground": [4, 137], "gclpcalcul": 4, "count_phas": [4, 12, 37], "flag": [4, 129], "exclud": 4, "equilibrium": 4, "x_i": 4, "x_": 4, "f": [4, 6, 11, 58, 120, 121, 123, 132, 137], "_2": 4, "quasi": 4, "entropi": 4, "ln": 4, "access": [4, 112, 117, 122, 123], "set_count_phas": 4, "some": [4, 6, 8, 120, 137, 141], "case": [4, 6, 8, 121, 126, 131, 132], "becaus": [4, 123], "ti": [4, 6, 11, 58], "set_phas": 4, "neutral": 4, "ionic": 4, "max_formula_unit": [4, 12, 38], "l_1": 4, "ioniccompoundfind": 4, "assign": [4, 131, 141], "arbitrarili": 4, "adjust": 4, "look": [4, 6, 8], "conceiv": 4, "speci": 4, "consequ": 4, "set_max_formula_unit": 4, "simpl": [4, 115, 117, 119, 125, 126, 143], "ref": 4, "exp": [4, 120, 121], "chi": 4, "charact": [4, 6, 117, 143], "x_j": 4, "william": 4, "callist": 4, "scienc": [4, 112, 117, 137], "hoboken": 4, "john": 4, "wilei": 4, "2014": [4, 117], "similar": [4, 7, 115, 117, 123, 125, 131, 141], "lattic": 4, "compar": [4, 9, 125, 132, 137], "polyhedron": 4, "produc": [4, 8], "match": [4, 6, 7, 125], "becom": 4, "increas": [4, 137], "dissimilar": 4, "hcp": 4, "attr_nam": 4, "local": [4, 112, 116, 117, 123, 142], "sum_n": 4, "f_n": 4, "left": [4, 6], "p_": 4, "p_n": 4, "ight": 4, "past": 4, "uniqu": [4, 141], "previou": [4, 8, 137], "elementalproperti": 4, "add_shel": 4, "clear_shel": 4, "get_atom_properti": 4, "voro": 4, "prop_valu": 4, "analysi": [4, 112, 117], "super": 4, "meredig": 4, "meant": 4, "conjunct": 4, "To": [4, 6, 112, 123, 125, 129, 141, 142], "three": [4, 7, 8, 112, 116, 117, 137, 141], "unconstrain": 4, "space": [4, 8, 112, 117, 135, 143], "89": [4, 6, 11, 58, 129], "mar": 4, "schutt": 4, "n_point": [4, 12, 48], "element_list": 4, "sch\u00fctt": 4, "glaw": 4, "brockherd": 4, "sanna": 4, "m\u00fcller": 4, "u": [4, 6, 8, 11, 58, 112, 122, 123, 142], "gross": 4, "how": [4, 122, 123, 131], "toward": [4, 117, 137], "fast": 4, "add_el": 4, "enter": [4, 11, 26, 50, 58, 62, 63, 64, 65, 66, 71, 72, 115, 123, 141], "databas": [4, 5, 117], "clear_element_list": 4, "set_el": 4, "set_n_point": 4, "n_p": 4, "sphere": 4, "fit": [4, 6, 7, 8, 10, 14, 43, 44, 73, 74, 76, 81, 82, 83, 84, 86, 87, 88, 89, 92, 93, 95, 99, 101, 102, 115, 117, 119, 120, 121, 122, 126, 127, 132, 133, 134, 137], "volum": [4, 117, 137], "use_default_norm": [4, 12, 55], "stoichiometri": 4, "what": [4, 121, 131, 132], "expon": 4, "add_p_norm": 4, "clear_p_norm": 4, "stoichiometr": 4, "heterogen": 4, "polyhedra": 4, "across": 4, "hat": 4, "l_i": 4, "valenc": 4, "origin": [4, 6, 7, 112, 122], "omega": 4, "delta": 4, "yang": 4, "zhang": 4, "were": [4, 8, 132], "solid": 4, "melt": 4, "temperatur": 4, "mix": 4, "regular": [4, 7, 119, 123, 137], "interact": [4, 8, 115, 123, 125, 137], "omega_": 4, "miedema": 4, "relationship": 4, "t_m": 4, "s_": 4, "h_": 4, "takeuchi": 4, "displaystylesum": 4, "c_i": 4, "c_j": 4, "relat": 4, "polydispers": 4, "r_i": 4, "r_": 4, "compil": [4, 7, 8, 119, 123, 129], "rather": 4, "kittel": 4, "multi": [4, 7, 8, 132], "132": 4, "233": 4, "238": 4, "heat": 4, "Its": 4, "character": 4, "46": [4, 6, 11, 58, 129], "2817": 4, "2829": 4, "2005": 4, "sampl": [5, 6, 7, 8, 117, 119, 120, 121, 126, 127, 129, 132, 135], "homo": [5, 10, 11, 62, 121, 132], "photovolta": 5, "cep": 5, "project": [5, 10, 117, 142], "cepdb": 5, "molecularspac": 5, "orbit": [5, 132], "volt": 5, "ev": [5, 121, 132], "photovalta": 5, "homo_ev": 5, "rep": 5, "smi": [5, 119, 121, 123, 125], "630": 5, "formation_energi": [5, 11, 63], "len": [5, 7, 121], "202": 5, "last": [5, 7, 8, 123, 127], "twoo": 5, "density_kg": [5, 119, 127], "200": [5, 8, 14, 89, 95, 102, 119, 120, 123, 127, 132], "kg": [5, 119, 120, 126, 127, 129], "bohr": [5, 115, 137], "bp86": [5, 137], "def2svp": 5, "level": [5, 13, 68, 137], "also": [5, 6, 8, 112, 115, 117, 121, 122, 123, 127, 131, 132, 141], "calcualt": 5, "thoeri": 5, "50": [5, 6, 8, 11, 58, 119, 123, 129, 133], "pol": [5, 137], "select": [6, 8, 13, 14, 54, 76, 83, 92, 93, 112, 117, 121, 123, 135, 137], "side": 6, "x1": 6, "second": 6, "x2": 6, "result": [6, 8, 112, 115, 121, 123, 125, 132, 137], "path_pattern": [6, 11, 58], "path_root": [6, 11, 58], "ac": [6, 11, 58], "ag": [6, 11, 58], "am": [6, 11, 58], "33": [6, 11, 15, 58, 109, 123, 129], "At": [6, 11, 58, 141], "85": [6, 11, 58, 123, 129], "au": [6, 11, 58], "79": [6, 11, 58, 120, 123, 129], "ba": [6, 11, 58], "56": [6, 11, 58, 123, 129], "Be": [6, 11, 58], "bh": [6, 11, 58], "107": [6, 11, 58], "bi": [6, 11, 58], "83": [6, 11, 58, 120, 121, 129], "bk": [6, 11, 58], "97": [6, 11, 58, 123, 129], "br": [6, 11, 58], "ca": [6, 11, 58], "cd": [6, 11, 58], "48": [6, 11, 58, 123, 125, 129], "ce": [6, 11, 58], "58": [6, 11, 58, 120, 127, 129], "cf": [6, 11, 58], "98": [6, 11, 58, 129], "cl": [6, 11, 58], "96": [6, 11, 58, 129], "cn": [6, 11, 58], "112": [6, 7, 11, 58, 123], "co": [6, 11, 58], "cr": [6, 11, 58], "cu": [6, 11, 58], "db": [6, 11, 58], "105": [6, 11, 58], "110": [6, 11, 58, 123], "dy": [6, 11, 58], "66": [6, 11, 58, 120, 129], "er": [6, 11, 58], "68": [6, 11, 58, 120, 129], "99": [6, 11, 58, 120, 123, 129], "eu": [6, 11, 58], "63": [6, 11, 58, 129, 132], "fe": [6, 11, 58], "fl": [6, 11, 58], "114": [6, 11, 58, 123], "fm": [6, 11, 58], "100": [6, 7, 8, 10, 11, 14, 43, 44, 58, 88, 89, 119, 120, 123, 125, 129, 137], "fr": [6, 11, 58], "87": [6, 11, 58, 120, 127, 129], "gd": [6, 11, 58], "64": [6, 11, 58, 119, 120, 127, 129], "ge": [6, 11, 58], "32": [6, 11, 58, 119, 123, 129], "he": [6, 11, 58], "hf": [6, 11, 58], "72": [6, 11, 58, 120, 125, 129], "hg": [6, 10, 11, 58], "80": [6, 11, 58, 120, 121, 129], "ho": [6, 11, 58], "67": [6, 11, 58, 129], "108": [6, 11, 58, 123], "53": [6, 11, 58, 125, 129], "49": [6, 11, 58, 125, 129], "ir": [6, 11, 58], "77": [6, 11, 58, 129], "kr": [6, 11, 58], "36": [6, 11, 58, 121, 123, 129, 131, 137], "la": [6, 11, 58], "57": [6, 11, 58, 117, 119, 123, 125, 129], "li": [6, 11, 58], "lr": [6, 7, 11, 58, 123], "103": [6, 11, 58, 123], "lu": [6, 11, 58], "71": [6, 11, 58, 123, 129], "lv": [6, 11, 58], "116": [6, 11, 58, 129], "md": [6, 11, 58, 142], "101": [6, 11, 58, 123, 130], "mg": [6, 11, 58], "mn": [6, 11, 58], "mo": [6, 11, 58], "42": [6, 11, 58, 119, 123, 129], "mt": [6, 11, 58], "109": [6, 11, 58], "na": [6, 11, 58], "nb": [6, 11, 58], "41": [6, 11, 58, 129], "nd": [6, 11, 58], "60": [6, 11, 58, 120, 129], "ne": [6, 11, 58], "ni": [6, 11, 58], "No": [6, 11, 58, 127, 141], "102": [6, 11, 58], "76": [6, 11, 58, 123, 129], "pa": [6, 11, 58], "91": [6, 11, 58, 129], "pb": [6, 11, 58], "82": [6, 11, 58, 129], "pm": [6, 11, 58], "61": [6, 11, 58, 129], "po": [6, 11, 58], "84": [6, 11, 58, 120, 129], "pr": [6, 11, 58], "59": [6, 11, 58, 123, 129, 131], "pt": [6, 11, 58], "78": [6, 11, 15, 58, 109, 120, 121, 123, 129], "pu": [6, 11, 58], "94": [6, 11, 58, 129], "ra": [6, 11, 58], "88": [6, 11, 58, 129], "rb": [6, 11, 58, 123], "37": [6, 11, 58, 123, 129], "re": [6, 11, 58], "75": [6, 11, 13, 58, 100, 129, 132], "rf": [6, 11, 58], "104": [6, 11, 58], "rg": [6, 11, 58], "111": [6, 11, 58], "rh": [6, 11, 58], "45": [6, 11, 58, 129], "rn": [6, 11, 58], "86": [6, 11, 58, 120, 121, 129], "ru": [6, 11, 58], "44": [6, 11, 58, 117, 123, 129], "sb": [6, 11, 58], "51": [6, 11, 58, 117, 123, 129], "se": [6, 11, 58, 120, 121], "34": [6, 11, 58, 119, 123, 125, 129, 131], "sg": [6, 11, 58], "106": [6, 11, 58, 123], "si": [6, 11, 58, 120], "sm": [6, 11, 58], "62": [6, 11, 58, 119, 120, 125, 129], "sn": [6, 11, 58], "sr": [6, 11, 58], "38": [6, 11, 58, 123, 129, 131], "ta": [6, 11, 58], "73": [6, 11, 58, 120, 125, 129, 131], "tb": [6, 11, 58], "65": [6, 11, 58, 119, 123, 129], "tc": [6, 11, 58], "43": [6, 11, 58, 121, 123, 125, 129], "te": [6, 11, 58], "52": [6, 11, 58, 129], "90": [6, 8, 11, 58, 121, 129], "tl": [6, 11, 58, 112, 137], "81": [6, 11, 58, 120, 129], "tm": [6, 11, 58], "69": [6, 11, 58, 129], "92": [6, 11, 58, 129], "uuo": [6, 11, 58], "118": [6, 11, 58, 123], "uup": [6, 11, 58], "uu": [6, 11, 58], "uut": [6, 11, 58], "113": [6, 11, 58], "w": [6, 10, 11, 58, 127, 129, 133], "74": [6, 11, 58, 120, 125, 129], "xe": [6, 11, 58], "54": [6, 11, 58, 129], "39": [6, 11, 58, 120, 121, 122, 123, 127, 129, 131, 132], "yb": [6, 11, 58], "70": [6, 11, 58, 123, 125, 129], "zn": [6, 11, 58], "zr": [6, 11, 58], "40": [6, 11, 58, 121, 123, 125, 129], "reader": [6, 11, 58], "skip_lin": [6, 11, 58], "path_onli": 6, "cartesian": 6, "pattern": 6, "special": 6, "everyth": 6, "seq": 6, "seper": 6, "give": [6, 112, 123, 131, 132], "separ": [6, 112, 141], "That": 6, "why": 6, "util": [6, 112, 117, 119, 123, 127, 132, 134, 137], "fnmatch": 6, "unix": 6, "extens": [6, 137], "part": [6, 112, 117], "tri": 6, "without": [6, 7, 117, 134], "subdirectori": 6, "therefor": 6, "abov": [6, 7, 112, 115, 121, 123, 127, 131, 132], "walk": [6, 115], "everi": [6, 8, 121, 123], "start": [6, 8, 117, 135], "curent": 6, "readstr": 6, "thu": [6, 8, 121], "skip": 6, "line": [6, 10, 16, 70, 121, 141], "bottom": 6, "pool": [6, 8, 123, 137], "coulomb_matrix": 6, "mydir": 6, "1f": 6, "1_opt": [6, 122], "_opt": 6, "2c": 6, "2_opt": 6, "3f": 6, "3_opt": 6, "7c": 6, "7_opt": 6, "kera": [7, 8, 14, 15, 43, 44, 77, 106, 107, 109, 112, 117, 119, 134, 135], "nfeatur": [7, 120, 129], "nneuron": [7, 14, 43, 44, 120, 123, 129], "activ": [7, 8, 14, 43, 44, 89, 112, 117, 119, 120, 121, 129, 135, 141, 142], "learning_r": [7, 14, 43, 44, 89, 101, 120, 121, 129], "nepoch": [7, 14, 43, 44, 120, 129], "alpha": [7, 8, 13, 14, 76, 80, 81, 83, 84, 89, 92, 93, 99, 101, 120, 121, 127, 129], "001": [7, 8, 14, 73, 74, 89, 95, 99, 102, 120, 123], "loss": [7, 8, 14, 43, 44, 87, 101, 119, 120, 123, 129], "mean_squared_error": [7, 14, 15, 43, 44, 108, 120, 123, 129], "is_regress": [7, 129], "nclass": [7, 14, 43, 44, 120, 129], "layer_config_fil": [7, 14, 43, 44, 120, 129], "opt_config": [7, 120, 129], "sgd": [7, 129], "random_se": 7, "param": [7, 119, 123, 129], "perceptron": [7, 132], "neural": [7, 116, 117, 125, 134, 137], "underli": [7, 117, 134], "build": [7, 8, 112, 116, 117, 125, 134, 137, 143], "deep": [7, 112, 116, 117, 123, 129, 137], "tensorflow": [7, 14, 43, 44, 112, 117, 119, 123, 127, 134], "pytorch": [7, 117, 120, 134], "hidden": [7, 8, 137], "io": [7, 11, 71, 142], "valid": [7, 8, 15, 77, 106, 107, 109, 112, 121, 132], "stabl": [7, 8, 11, 13, 14, 15, 16, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 142], "nn": [7, 14, 15, 43, 44, 77, 106, 107, 109, 117], "non": [7, 8, 9, 119, 120, 123, 129], "nonlinear": 7, "relu": [7, 14, 89, 119, 120, 121, 123, 129], "train": [7, 8, 13, 79, 85, 103, 105, 112, 115, 117, 120, 121, 123, 127, 132, 134, 137], "epoch": [7, 119, 123, 129], "mini": 7, "batch": [7, 8, 119, 123, 125], "l2": [7, 13, 14, 88, 94, 101, 119, 137], "overrid": 7, "weight_decai": 7, "decid": 7, "label": [7, 8, 10, 120, 123, 127], "test": [7, 8, 13, 79, 85, 103, 105, 117, 119, 120, 121, 123, 132, 134, 137], "see": [7, 115, 122, 141, 142], "note": [7, 117, 121, 131, 132, 141], "consolid": 7, "reduc": 7, "redund": [7, 112], "adam": [7, 14, 89, 119, 120, 123], "momentum": [7, 14, 89], "lr_decai": [7, 14, 43, 44], "nesterov": 7, "get_model": [7, 120, 129], "include_output": [7, 129], "n_layer": 7, "torch": 7, "path_to_model": 7, "along": [7, 115, 126, 127, 132, 137], "csv": [7, 17, 52, 123], "arg": [7, 132], "convolv": [7, 119], "being": 7, "conv_width": [7, 119], "atoms0": [7, 119], "atom_input": [7, 119], "bond_input": [7, 119], "edge_input": [7, 119], "int32": [7, 119], "initialis": 7, "wai": [7, 8, 9, 115, 125], "kwag": 7, "atoms1": [7, 119], "bia": [7, 120], "lambda": 7, "inner_layer_arg": 7, "inner": 7, "featuer": 7, "arxiv": 7, "1509": 7, "09292": 7, "inputs_shap": 7, "subclass": 7, "creation": [7, 112], "instanti": [7, 8, 120, 123, 137], "call": [7, 8, 120, 123], "input_shap": 7, "tensorshap": 7, "expect": [7, 8, 123, 132], "mask": [7, 9], "logic": 7, "live": 7, "tf": [7, 119, 123], "littl": 7, "wherea": 7, "compute_mask": 7, "keyword": [7, 120, 127], "unus": 7, "compute_output_shap": 7, "later": [7, 8, 9, 123], "free": [7, 117], "dimens": [7, 8], "from_config": 7, "config": [7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 121, 131, 132], "revers": 7, "get_config": 7, "capabl": 7, "doe": [7, 10, 123, 126, 127, 129], "handl": [7, 117, 136], "nor": 7, "serializ": 7, "reinstanti": 7, "accord": [7, 8, 126, 127, 137], "come": [7, 141], "final": [7, 8, 131, 132], "fp_length": [7, 119], "fp_out": 7, "main_predict": [7, 119], "base_model": [7, 137], "transfer": [7, 112, 117, 134, 138], "parent": [7, 8, 10], "head": [7, 113, 120, 131], "child": 7, "freez": 7, "bias": 7, "append": [7, 119, 120, 121, 125], "els": 7, "child_model": 7, "frozen": 7, "model_cr": [8, 123], "target_lay": [8, 123], "train_siz": [8, 13, 15, 103, 105, 109, 111, 123], "test_siz": [8, 13, 103, 105, 111, 119, 123, 129, 137], "test_typ": 8, "passiv": 8, "histori": [8, 117, 119], "bemcm": 8, "qbc": [8, 123], "shift": [8, 123], "allevi": [8, 112, 123], "unlabel": 8, "budget": 8, "combin": [8, 127, 137], "suggest": 8, "word": [8, 123], "functiontyp": 8, "coupl": 8, "dure": [8, 123], "fresh": 8, "don": 8, "rate": [8, 137], "metric": [8, 15, 77, 106, 107, 108, 109, 110, 121, 123, 126, 127, 129, 137], "linearli": 8, "begin": 8, "immedi": [8, 141], "choos": [8, 12, 13, 14, 15, 25, 32, 36, 43, 44, 46, 47, 55, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123], "minumum": 8, "think": 8, "held": 8, "round": [8, 119, 123], "acquir": [8, 123], "updat": 8, "divers": 8, "randomli": [8, 123], "maxumum": 8, "committe": [8, 123], "dsa": 8, "complement": 8, "alon": 8, "greater": [8, 141], "memor": 8, "short": [8, 141], "query_numb": [8, 123], "u_indic": 8, "train_indic": [8, 123, 137], "test_indic": [8, 123, 137], "y_pred": [8, 119, 121, 129, 137], "stage": 8, "after": [8, 115, 129, 141], "random_result": [8, 123], "deposit": [8, 123], "random_search": [8, 123], "get_target_lay": 8, "resum": [8, 117, 135], "wa": [8, 117, 122, 132], "least": 8, "latent": 8, "experiment": 8, "setup": 8, "research": [8, 112], "feasibl": 8, "1d": [8, 132], "random_st": [8, 13, 14, 15, 76, 79, 80, 83, 87, 88, 89, 92, 93, 97, 99, 101, 103, 105, 109, 111, 119, 123, 129, 137], "onc": [8, 121, 123, 131, 132, 142], "randomst": 8, "directli": [8, 142], "model_select": [8, 13, 15, 77, 79, 85, 103, 105, 106, 107, 109, 111, 119, 129, 137], "scikit": [8, 13, 14, 15, 44, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 127, 129, 132], "n_evalu": [8, 123], "basic": [8, 112], "trust": 8, "perform": [8, 112, 115, 117, 126, 131, 134, 137], "scaler": [8, 137], "style": [8, 10, 16, 60, 70], "fit_transform": [8, 13, 25, 46, 47, 75, 78, 80, 90, 91, 94, 96, 97, 98, 100, 104, 119, 120, 127, 129, 137], "repeat": 8, "baselin": [8, 117, 135], "replic": 8, "empti": [8, 123], "ensembl": [8, 123], "bootstrap": 8, "n_ensembl": [8, 123], "normalize_input": [8, 123], "normalize_intern": [8, 123], "continu": [8, 125], "estim": [8, 15, 77, 106, 107, 109, 137], "shuffl": [8, 13, 14, 15, 79, 89, 101, 109, 111], "gradient": [8, 137], "princip": [8, 123], "right": [8, 117, 120, 141], "trajectori": 8, "cool": 8, "matplotlib": [8, 10, 16, 17, 53, 60, 61, 67, 70, 112, 117, 123, 129, 133], "figur": [8, 10, 16, 17, 53, 60, 61, 67, 70, 112, 115, 123], "about": [8, 10], "pop_siz": [8, 121, 126, 127], "crossover_s": [8, 121, 126, 127], "mutation_s": [8, 121, 126, 127], "crossover_typ": [8, 126], "blend": 8, "fused_cutoff": 8, "mutation_prob": 8, "initial_popul": 8, "real": [8, 121], "genet": [8, 117, 126, 127, 137, 143], "solv": [8, 121], "trial": [8, 137], "hyper": [8, 112], "declar": 8, "alwai": [8, 13, 75, 78, 80, 90, 91, 94, 96, 97, 98, 100, 104, 122, 123, 141], "mandatori": [8, 141], "among": 8, "uniform": [8, 121, 126, 127], "lower": [8, 123], "upper": 8, "bound": 8, "mutat": [8, 121, 127], "gaussian": [8, 127], "neuron": [8, 137], "minim": 8, "popul": [8, 126, 127], "individu": [8, 121, 126, 127], "crossov": 8, "singlepoint": 8, "doublepoint": 8, "roulett": 8, "wheel": 8, "best": [8, 121, 126, 127, 137], "member": 8, "next": [8, 121, 131, 132, 137], "initit": 8, "n_gener": [8, 121, 126, 127], "early_stop": [8, 14, 89, 121, 123], "init_ratio": 8, "crossover_ratio": 8, "evolv": 8, "termin": [8, 117, 142], "fitness_dict": 8, "best_ind_df": [8, 121], "best_ind": 8, "strategi": [9, 13, 46, 47, 78, 117, 120, 130, 136, 137], "ignore_row": [9, 13, 46, 128], "string_as_nul": [9, 13, 46, 128], "inf_as_nul": [9, 13, 46, 128], "missing_valu": [9, 13, 46, 78, 128], "interpol": [9, 117, 136], "ignore_column": [9, 128], "null": 9, "inf": [9, 128], "show": [9, 10, 119, 122, 129, 133], "goal": 9, "track": [9, 123, 141], "median": [9, 13, 47, 117, 136], "within": [9, 112, 126, 127], "highli": [9, 137], "png": [10, 17, 53, 123, 129, 132, 133], "axessubplot": [10, 16, 17, 53, 60, 70], "distinct": 10, "locat": 10, "folder": [10, 115], "ep": [10, 14, 82, 84], "public": 10, "qualiti": [10, 137], "_as_gen": 10, "savefig": [10, 123], "ax": [10, 16, 17, 53, 60, 70, 123], "kind": [10, 16, 70], "facecolor": [10, 129, 133], "dpi": [10, 129, 133], "pad_inch": [10, 129, 133], "bbox_inch": [10, 115, 129, 133], "tight": [10, 115, 129, 133], "obj": [10, 126, 127, 129, 133], "main_directori": 10, "_subplot": [10, 16, 17, 53, 60, 70], "titl": [10, 16, 60, 70, 112, 115, 117, 129, 133, 137], "xlabel": [10, 16, 60, 115, 129, 133], "ylabel": [10, 16, 60, 115, 129, 133], "xlim": [10, 16, 60, 70, 129, 133], "ylim": [10, 16, 60, 70, 129, 133], "grid": [10, 15, 16, 60, 70, 77, 109, 112, 115, 129, 133], "grid_color": [10, 16, 60, 115, 129, 133], "grid_linestyl": [10, 16, 60, 129, 133], "grid_linewidth": [10, 16, 60, 129, 133], "axi": [10, 13, 68, 78], "gridcolor": 10, "color": [10, 16, 61, 67], "line2d": 10, "set_linestyl": 10, "width": [10, 119], "set_linewidth": 10, "amw": [10, 120], "dec": [10, 129, 133], "histogram": 10, "proce": 10, "matplotlib_font": 10, "famili": [10, 16, 60, 137], "dejavu": 10, "san": 10, "variant": [10, 16, 60], "custom": 10, "font": 10, "wil": 10, "session": 10, "pylab_exampl": 10, "fonts_demo": 10, "pyplot": 10, "sequenc": 10, "marker": [10, 16, 67, 115, 129, 133], "linestyl": [10, 16, 67], "linewidth": [10, 16, 67], "scatter": 10, "den": 10, "fea": 10, "sender": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "converted_file_path": [11, 26], "babel": [11, 26], "view": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 131], "to_format": [11, 26], "required_requir": [11, 12, 16, 17, 20, 24, 26, 30, 32, 41, 42, 51, 52, 53, 58, 61, 67, 71, 72], "from_format": [11, 26], "page": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 132, 137], "paramet": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 123, 131, 137, 141], "wiki": [11, 26], "iv4": [11, 50], "iv5": [11, 50], "iv6": [11, 50], "iv1": [11, 50], "iv2": [11, 50], "iv3": [11, 50], "ov2": [11, 50], "ov3": [11, 50], "ov1": [11, 50], "ov6": [11, 50], "ov4": [11, 50], "ov5": [11, 50], "line08": [11, 50], "code": [11, 50, 112, 115, 119, 120, 121, 123, 126, 127, 129, 131, 132, 137], "line09": [11, 50], "line01": [11, 50], "line02": [11, 50], "line03": [11, 50], "line04": [11, 50], "line05": [11, 50], "line20": [11, 50], "line07": [11, 50], "line06": [11, 50], "line17": [11, 50], "line16": [11, 50], "line15": [11, 50], "line14": [11, 50], "line13": [11, 50], "line12": [11, 50], "line11": [11, 50], "line10": [11, 50], "line19": [11, 50], "line18": [11, 50], "anyth": [11, 12, 15, 17, 24, 30, 53, 58, 62, 63, 64, 65, 66, 71, 72, 110], "core": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 123, 129], "squeez": [11, 71, 72], "index_col": [11, 71, 72], "date_pars": [11, 71, 72], "na_valu": [11, 71, 72], "parse_d": [11, 71, 72], "skiprow": [11, 71, 72], "sheet_nam": [11, 71], "skip_foot": [11, 71, 72], "convert_float": [11, 71], "usecol": [11, 71, 72], "true_valu": [11, 71, 72], "false_valu": [11, 71, 72], "thousand": [11, 71, 72], "pydata": [11, 13, 15, 16, 68, 69, 70, 71, 72], "comment": [11, 72], "escapechar": [11, 72], "float_precis": [11, 72], "na_filt": [11, 72], "iter": [11, 72, 121, 132], "mangle_dupe_col": [11, 72], "skip_blank_lin": [11, 72], "keep_default_na": [11, 72], "infer": [11, 72], "prefix": [11, 72], "memory_map": [11, 72], "skipfoot": [11, 72], "compact_int": [11, 72], "linetermin": [11, 72], "compress": [11, 72], "dayfirst": [11, 72], "low_memori": [11, 72], "quotechar": [11, 72], "warn_bad_lin": [11, 72], "as_recarrai": [11, 72], "dialect": [11, 72], "tupleize_col": [11, 72], "infer_datetime_format": [11, 72], "keep_date_col": [11, 72], "use_unsign": [11, 72], "nrow": [11, 72], "delim_whitespac": [11, 72], "buffer_lin": [11, 72], "skipinitialspac": [11, 72], "decim": [11, 72], "filepath_or_buff": [11, 72], "error_bad_lin": [11, 72], "doublequot": [11, 72], "quot": [11, 72], "filepath": [12, 17, 24, 52, 121], "cmtype": [12, 28], "directory_path": [12, 30], "norm_typ": [12, 31], "fro": [12, 31], "ncore": [12, 31], "lxml": [12, 32, 117], "molinputformat": [12, 32], "molinput": [12, 32], "03": [12, 51, 120, 121, 132], "nbit": [12, 51], "fptype": [12, 51], "purg": [13, 25, 47], "func_method": [13, 14, 25, 43, 44, 46, 47, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115], "handle_miss": [13, 46], "track_head": [13, 14, 15, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111], "copi": [13, 68, 75, 78, 90, 91, 94, 97, 100, 104, 115], "_split": [13, 15, 77, 79, 85, 103, 105, 106, 107, 109], "n_split": [13, 79, 103, 105, 119, 121], "decomposit": [13, 80, 97], "kernel_pca": [13, 80], "equival": [13, 80, 97], "inverse_transform": [13, 80, 90, 91, 97, 100, 104, 119, 129, 137], "fit_inverse_transform": [13, 80], "kernel": [13, 14, 80, 81, 95, 102, 115, 121, 127, 142], "eigen_solv": [13, 80], "max_it": [13, 14, 76, 80, 83, 84, 87, 88, 89, 92, 93, 95, 99, 102, 121], "copy_x": [13, 14, 73, 74, 76, 80, 82, 83, 84, 86, 92, 93, 99], "kernel_param": [13, 14, 80, 81], "n_compon": [13, 80, 97], "remove_zero_eig": [13, 80], "tol": [13, 14, 73, 74, 76, 80, 83, 87, 88, 89, 92, 93, 95, 97, 99, 102], "coef0": [13, 14, 80, 81, 95, 102], "gamma": [13, 14, 80, 81, 95, 102], "feature_rang": [13, 91], "float64": [13, 96], "categorical_featur": [13, 96], "n_valu": [13, 96], "handle_unknown": [13, 96], "error": [13, 96, 115, 119, 121, 123, 137], "svd_solver": [13, 97], "iterated_pow": [13, 97], "whiten": [13, 97], "include_bia": [13, 98], "interaction_onli": [13, 98], "with_scal": [13, 100], "with_cent": [13, 100], "quantile_rang": [13, 100], "with_mean": [13, 104], "with_std": [13, 104], "stratifi": [13, 111], "verify_integr": [13, 68], "ignore_index": [13, 68], "join_ax": [13, 68], "nhidden": [14, 43, 44], "opt_config_fil": [14, 43, 44], "linear_model": [14, 15, 73, 74, 76, 77, 82, 83, 84, 86, 88, 92, 93, 99, 101, 106, 107, 109, 126], "bay": [14, 15, 73, 74, 77, 106, 107, 109], "n_iter": [14, 73, 74, 101], "lambda_2": [14, 73, 74], "1e": [14, 73, 74, 89, 123], "06": [14, 73, 74, 120, 131, 132], "fit_intercept": [14, 73, 74, 76, 82, 83, 84, 86, 87, 88, 92, 93, 99, 101], "threshold_lambda": [14, 73], "10000": [14, 73, 119, 125, 137], "compute_scor": [14, 73, 74], "alpha_2": [14, 73, 74], "alpha_1": [14, 73, 74], "lambda_1": [14, 73, 74], "coordinate_desc": [14, 15, 76, 77, 83, 92, 93, 106, 107, 109], "warm_start": [14, 76, 83, 88, 89, 92, 93, 101], "cyclic": [14, 76, 83, 92, 93], "l1_ratio": [14, 76, 92, 101], "1000": [14, 76, 83, 87, 92, 93], "precomput": [14, 76, 82, 83, 84], "kernel_ridg": [14, 15, 77, 81, 106, 107, 109, 127], "least_angl": [14, 15, 77, 82, 84, 106, 107, 109], "n_nonzero_coef": [14, 82], "fit_path": [14, 82, 84], "22044604925e": [14, 82, 84], "svm": [14, 15, 77, 87, 95, 102, 106, 107, 109], "epsilon_insensit": [14, 87], "intercept_sc": [14, 87, 88], "epsilon": [14, 87, 89, 101, 102, 123], "dual": [14, 87, 88], "logist": [14, 15, 77, 88, 106, 107, 109, 121], "class_weight": [14, 88], "penalti": [14, 88, 101], "multi_class": [14, 88], "ovr": [14, 88], "solver": [14, 88, 89, 99], "liblinear": [14, 88], "neural_network": [14, 15, 77, 89, 106, 107, 109, 132], "multilayer_perceptron": [14, 15, 77, 89, 106, 107, 109], "validation_fract": [14, 89], "08": [14, 89, 120], "beta_1": [14, 89, 123], "beta_2": [14, 89, 123], "999": [14, 89, 123], "nesterovs_momentum": [14, 89], "hidden_layer_s": [14, 89, 121], "power_t": [14, 89, 101], "learning_rate_init": [14, 89], "rbf": [14, 95, 102, 115, 127], "cache_s": [14, 95, 102], "shrink": [14, 95, 102], "nu": [14, 95], "stochastic_gradi": [14, 15, 77, 101, 106, 107, 109], "squared_loss": [14, 101], "eta0": [14, 101], "invscal": [14, 101, 121], "scorer": [15, 77, 106, 107, 109, 110], "make_scor": [15, 77, 106, 107, 109, 110], "_predictscor": [15, 77, 106, 107, 109, 110], "cv": [15, 77, 106, 107, 109], "cross": [15, 77, 106, 107, 109, 121], "cv_results_": [15, 77], "grid_search": [15, 77], "best_estimator_": [15, 77], "score": [15, 77, 107, 108, 109, 110, 116, 117, 121], "fit_param": [15, 77, 106, 107], "refit": [15, 77], "return_train_scor": [15, 77], "iid": [15, 77], "error_scor": [15, 77], "pre_dispatch": [15, 77, 106, 107, 109], "param_grid": [15, 77], "group": [15, 106, 107, 109, 137], "evaluation_results_": [15, 108], "mae_multioutput": [15, 108], "mean_absolute_error": [15, 108, 123, 126, 127], "uniform_averag": [15, 108], "raw_valu": [15, 108], "r2_score": [15, 108], "multioutput": [15, 108], "variance_weight": [15, 108], "mse_sample_weight": [15, 108], "rmse_multioutput": [15, 108], "median_absolute_error": [15, 108], "mae_sample_weight": [15, 108], "rmse_sample_weight": [15, 108], "root_mean_squared_error": [15, 108], "explained_variance_scor": [15, 108], "r2_sample_weight": [15, 108], "ev_sample_weight": [15, 108], "ev_multioutput": [15, 108], "mse_multioutput": [15, 108], "model_evalu": [15, 108, 110], "train_sizes_ab": [15, 109], "extended_result_": [15, 109], "test_scor": [15, 109], "train_scor": [15, 109], "exploit_incremental_learn": [15, 109], "callabl": [15, 110], "return": [15, 110, 121, 123, 126, 127, 132], "scalar": [15, 110], "mae": [15, 110, 119, 121, 123, 127, 129, 137], "mse": [15, 110], "r2": [15, 110, 123], "greater_is_bett": [15, 110], "needs_threshold": [15, 110], "needs_proba": [15, 110], "min_period": [15, 69], "pearson": [15, 69], "xerr": [16, 70], "yerr": [16, 70], "logx": [16, 70], "logi": [16, 70], "rot": [16, 70], "sharei": [16, 70], "sharex": [16, 70], "use_index": [16, 70], "xtick": [16, 70], "fontsiz": [16, 70], "sort_column": [16, 70], "loglog": [16, 70], "colormap": [16, 70], "layout": [16, 70], "legend": [16, 70], "secondary_i": [16, 70], "subplot": [16, 70], "figsiz": [16, 70], "ytick": [16, 70], "record_tim": [17, 52], "informat": [112, 117], "program": [112, 117, 137], "suit": [112, 117], "driven": [112, 117], "paradigm": 112, "emerg": 112, "domain": [112, 117], "allow": [112, 116, 117, 122, 125, 131, 141], "execut": [112, 121, 131, 132], "workflow": [112, 115, 123, 131, 132, 141, 142], "context": 112, "autom": [112, 117, 137], "versatil": [112, 117], "friendli": 112, "modern": 112, "viabl": 112, "wide": 112, "proposit": 112, "broader": 112, "methodolog": 112, "innov": 112, "cornerston": 112, "ecosystem": 112, "silico": 112, "brief": 112, "overview": [112, 117, 143], "cover": 112, "notabl": 112, "third": 112, "parti": 112, "oper": [112, 115, 129], "popular": 112, "aspect": 112, "obviou": 112, "infus": [112, 117, 138], "dl": 112, "reimplement": 112, "techniqu": [112, 131], "issu": 112, "irrelev": 112, "date": 112, "focu": 112, "supervis": 112, "crucial": 112, "facil": 112, "maintain": [112, 117], "tune": 112, "particular": [112, 125, 137], "quantifi": 112, "improv": 112, "accuraci": [112, 121, 123], "reliabl": 112, "coars": 112, "evolutionari": [112, 117, 137], "methodologi": 112, "enhanc": 112, "explor": [112, 117, 137], "comprehens": [112, 141], "via": [112, 116, 117, 122, 123, 137, 142], "seaborn": [112, 117], "articl": [112, 117, 137], "chemml2019": [112, 117], "haghighatlari": [112, 117, 137], "mojtaba": [112, 117, 137], "vishwakarma": [112, 117, 137], "gaurav": [112, 117, 137], "altarawi": [112, 117], "doaa": [112, 117], "subramanian": [112, 117], "ramachandran": [112, 117], "kota": [112, 117], "bhargava": [112, 117], "urala": [112, 117], "sonpal": [112, 117, 137], "aditya": [112, 117, 137], "setlur": [112, 117], "srirangaraj": [112, 117], "hachmann": [112, 117, 121, 127, 131, 132, 137], "johann": [112, 117, 137], "chemrxiv": [112, 117, 137], "8323271": [112, 117], "mine": [112, 115, 117, 137, 141], "doi": [112, 117, 137], "26434": [112, 117], "v1": [112, 117], "year": [112, 117, 137], "2019": [112, 117, 137], "hellooooo": 113, "worrrlddd": 113, "hello": [114, 124], "world": [114, 124], "direct": [115, 120, 141], "text": [115, 121, 122, 141], "section": [115, 121], "arbitrari": [115, 123, 141], "graphic": [115, 141, 142], "cm_featur": 115, "let": [115, 123, 127], "tutori": [115, 117, 123, 131, 142], "tab": 115, "sai": [115, 137], "desktop": 115, "navig": 115, "command": [115, 142], "chemmlwrapp": 115, "input_fil": [115, 121, 131, 132], "although": [115, 122, 141], "nohup": 115, "prevent": 115, "disconnect": 115, "kill": 115, "job": 115, "ouput_directori": 115, "alreadi": [115, 122, 123], "sequenti": [115, 120, 123, 129], "fugur": 115, "log": [115, 121], "citat": [115, 138], "explan": [116, 117], "ai": [116, 117], "xai": [116, 117], "deepshap": [116, 117], "lrp": [116, 117], "lime": [116, 117], "global": [116, 117], "aggreg": [116, 117], "multipl": [116, 117, 126, 127], "relev": [116, 117], "attribut": [116, 117, 122, 123], "dnn": [116, 117, 138], "waterfal": [116, 117], "shap": [116, 117], "repositori": 117, "hachmannlab": 117, "languag": 117, "anaconda": 117, "strictli": 117, "modular": 117, "orient": 117, "overal": 117, "flexibl": [117, 137], "releas": 117, "pypi": [117, 142], "strongli": 117, "environ": [117, 119, 129, 142], "instruct": [117, 129, 141, 142], "subsequ": [117, 137], "pip": [117, 123, 142], "conda": 117, "chemml_env": 117, "forg": 117, "nb_conda_kernel": 117, "graphviz": [117, 142], "openpyxl": 117, "ipywidget": [117, 142], "chemml_review2019": 117, "1016": [117, 125], "coch": 117, "02": [117, 120, 131, 132], "009": 117, "issn": [117, 137], "2211": 117, "3398": 117, "opinion": 117, "month": 117, "jan": 117, "simul": [117, 123, 137], "hachmann2018": 117, "afzal": [117, 137], "mohammad": [117, 137], "atif": [117, 137], "faiz": [117, 137], "pal": 117, "yudhajit": 117, "1080": 117, "08927022": 117, "2018": [117, 137], "1471692": 117, "10290435": 117, "921": 117, "929": 117, "deploi": [117, 137], "cyberinfrastructur": 117, "vishwakarma2019toward": [117, 137], "autonom": [117, 137], "preprint": [117, 137], "With": [117, 136], "oultier": [117, 136], "regression_metr": [117, 119, 127, 134, 137], "sometim": [117, 134], "emc": [117, 135], "loop": [117, 135, 141], "video": [117, 135], "explain": 117, "interpret": 117, "rule": [117, 143], "usag": [117, 143], "error_metr": [117, 143], "single_obj": [117, 143], "test_hyperparamet": [117, 143], "acceler": [117, 138], "discoveri": [117, 138], "refract": [117, 138], "tzvp": [117, 138], "copyright": 117, "2022": 117, "aatish": [117, 121, 127, 131, 132], "pradhan": 117, "reserv": [117, 141], "claus": 117, "bsd": 117, "opensourc": 117, "buffalo": [117, 137], "edu": 117, "adityaso": 117, "aatishpr": [117, 132], "univers": [117, 137], "york": 117, "ub": [117, 121, 127, 131, 132], "contributor": 117, "molssi": 117, "scientif": 117, "advic": 117, "mentor": 117, "port": 117, "venugop": 117, "govindaraju": 117, "krishna": 117, "rajan": 117, "encourag": 117, "feedback": 117, "feel": 117, "fork": 117, "pull": 117, "branch": [117, 123], "acknowledg": 117, "upon": 117, "nation": 117, "foundat": [117, 137], "grant": 117, "oac": 117, "1751161": 117, "1640867": 117, "fund": 117, "school": [117, 137], "depart": 117, "biolog": 117, "excel": 117, "seed": 117, "1140384": 117, "75163": 117, "de": 117, "sc0017193": 117, "ii": 117, "fellowship": 117, "institut": 117, "hi": 117, "tensorize_molecul": 119, "feed": 119, "forward": [119, 120], "dragon_subset": [119, 125, 129], "asarrai": [119, 121], "mol_objs_list": [119, 125], "xatom": 119, "xbond": 119, "xedg": 119, "tensoris": [119, 125], "8m": 119, "merg": [119, 123, 125], "done": [119, 121, 123, 125, 131, 132, 142], "y_scale": 119, "xatoms_train": 119, "xatoms_test": 119, "xbonds_train": 119, "xbonds_test": 119, "xedges_train": 119, "xedges_test": 119, "target_train": 119, "target_test": 119, "reshap": [119, 120, 121, 123, 129, 137], "ntest": 119, "400": [119, 126, 127], "neighborhood": 119, "tf_cpp_min_log_level": 119, "set_se": 119, "num_molecul": [119, 125], "use_bia": 119, "atoms2": 119, "fp_out0": 119, "softmax": 119, "fp_out1": 119, "fp_out2": 119, "obtain": [119, 121, 131, 132, 137], "final_fp": 119, "dense_layer0": 119, "128": [119, 129], "kernel_regular": 119, "dense_layer1": 119, "dense_layer2": 119, "summari": [119, 123, 129], "steps_per_epoch": 119, "validation_split": [119, 123], "__________________________________________________________________________________________________": [119, 123], "inputlay": [119, 123], "neural_graph_hidden": 119, "neuralgrap": 119, "2720": 119, "neural_graph_hidden_1": 119, "neuralgr": 119, "560": 119, "neural_graph_output": 119, "13800": 119, "neural_graph_output_1": 119, "neural_graph_output_2": 119, "25728": 119, "8256": 119, "129": [119, 123], "lt": [119, 120, 121, 122, 123, 129], "callback": [119, 123], "0x7fb289a7bac0": 119, "gt": [119, 120, 121, 122, 123, 129, 131, 132], "metrics_df": [119, 129, 137], "r_2": 119, "r_squar": [119, 129], "squar": [119, 121, 123, 137], "171": [119, 123], "927": 119, "subset": [120, 126, 137], "_": [120, 126, 127], "astyp": 120, "float32": 120, "ytr": 120, "450": 120, "yte": 120, "xtr": 120, "xte": 120, "scale_i": 120, "r1_pytorch": 120, "engine_model": 120, "eval": 120, "futur": [120, 127], "in_featur": 120, "out_featur": 120, "background": 120, "x_instanc": 120, "dnn_obj": 120, "feature_nam": 120, "shap_obj": 120, "x_background": 120, "backward": 120, "hook": 120, "autograd": 120, "deprec": 120, "grad_input": 120, "register_full_backward_hook": 120, "behavior": 120, "mw": 120, "sv": 120, "sp": 120, "mv": 120, "me": 120, "mp": 120, "x4av": 120, "x5av": 120, "x0sol": 120, "x1sol": 120, "x2sol": 120, "x3sol": 120, "x4sol": 120, "x5sol": 120, "xmod": 120, "rdchi": 120, "004226": 120, "017965": 120, "002007": 120, "000315": 120, "00169": 120, "000138": 120, "005208": 120, "047417": 120, "00027": 120, "000075": 120, "01016": 120, "004733": 120, "000346": 120, "000708": 120, "001949": 120, "001744": 120, "003523": 120, "003081": 120, "001851": 120, "000127": 120, "rel_df": 120, "max_displai": 120, "001690": 120, "000270": 120, "010160": 120, "028730": 120, "016923": 120, "008729": 120, "001357": 120, "006194": 120, "000647": 120, "007421": 120, "095255": 120, "015222": 120, "001943": 120, "010119": 120, "004144": 120, "005155": 120, "008186": 120, "016180": 120, "012706": 120, "022199": 120, "010823": 120, "022696": 120, "000656": 120, "033408": 120, "022131": 120, "010370": 120, "005127": 120, "000974": 120, "007972": 120, "009267": 120, "020344": 120, "002649": 120, "002977": 120, "002012": 120, "008781": 120, "011291": 120, "016925": 120, "012719": 120, "015563": 120, "004058": 120, "029044": 120, "002798": 120, "049662": 120, "035422": 120, "021034": 120, "002494": 120, "009761": 120, "001202": 120, "011599": 120, "068437": 120, "010441": 120, "000044": 120, "027242": 120, "014504": 120, "018708": 120, "023040": 120, "027916": 120, "017599": 120, "025875": 120, "015381": 120, "049061": 120, "005836": 120, "043910": 120, "027921": 120, "007267": 120, "001379": 120, "004171": 120, "000695": 120, "002118": 120, "024150": 120, "002204": 120, "003459": 120, "001431": 120, "001361": 120, "007888": 120, "013086": 120, "018476": 120, "015196": 120, "030085": 120, "008146": 120, "041555": 120, "001472": 120, "445": [120, 123], "005420": 120, "363526": 120, "021909": 120, "005207": 120, "012532": 120, "002856": 120, "063025": 120, "353158": 120, "146915": 120, "001592": 120, "000388": 120, "000952": 120, "007028": 120, "001970": 120, "001590": 120, "001733": 120, "010887": 120, "009257": 120, "012901": 120, "002078": 120, "446": 120, "022738": 120, "000947": 120, "008990": 120, "000644": 120, "005321": 120, "000275": 120, "008555": 120, "076582": 120, "034864": 120, "003276": 120, "001233": 120, "001632": 120, "007859": 120, "008330": 120, "015024": 120, "011447": 120, "016477": 120, "011646": 120, "016196": 120, "001541": 120, "447": 120, "040769": 120, "017716": 120, "012482": 120, "002395": 120, "006325": 120, "001261": 120, "006515": 120, "010023": 120, "017198": 120, "004421": 120, "004269": 120, "002139": 120, "011364": 120, "014354": 120, "018635": 120, "012219": 120, "019320": 120, "013332": 120, "037022": 120, "002666": 120, "448": 120, "031687": 120, "000953": 120, "011975": 120, "001535": 120, "007395": 120, "000637": 120, "007118": 120, "048946": 120, "023622": 120, "005410": 120, "002070": 120, "000787": 120, "008766": 120, "011670": 120, "019803": 120, "014711": 120, "023315": 120, "013825": 120, "028351": 120, "001976": 120, "449": 120, "086079": 120, "019403": 120, "024792": 120, "004013": 120, "015506": 120, "001990": 120, "006451": 120, "047543": 120, "034029": 120, "004332": 120, "008165": 120, "001471": 120, "019860": 120, "026304": 120, "049016": 120, "040434": 120, "062661": 120, "038612": 120, "073309": 120, "005649": 120, "gb": 120, "global_relev": 120, "852358e": 120, "460922e": 120, "916600e": 120, "09": [120, 127, 129, 131, 132], "480899e": 120, "985339e": 120, "119740e": 120, "441856e": 120, "313563e": 120, "732422e": 120, "074020e": 120, "698213e": 120, "548810e": 120, "979194e": 120, "979182e": 120, "497676e": 120, "692370e": 120, "368907e": 120, "703364e": 120, "827584e": 120, "943156e": 120, "442207e": 120, "982853e": 120, "167618e": 120, "767643e": 120, "544903e": 120, "695936e": 120, "647259e": 120, "734375e": 120, "808682e": 120, "042306e": 120, "645516e": 120, "371978e": 120, "195341e": 120, "840679e": 120, "198224e": 120, "480988e": 120, "390743e": 120, "671428e": 120, "087783e": 120, "358562e": 120, "878673e": 120, "464898e": 120, "634698e": 120, "121170e": 120, "942520e": 120, "903390e": 120, "117974e": 120, "421733e": 120, "227762e": 120, "386731e": 120, "618912e": 120, "629301e": 120, "081515e": 120, "930467e": 120, "053745e": 120, "399344e": 120, "572330e": 120, "249878e": 120, "686418e": 120, "847356e": 120, "456890e": 120, "978082e": 120, "267381e": 120, "525580e": 120, "493623e": 120, "980043e": 120, "094076e": 120, "575872e": 120, "154179e": 120, "333245e": 120, "833615e": 120, "671629e": 120, "171651e": 120, "357215e": 120, "296293e": 120, "410476e": 120, "585398e": 120, "818333e": 120, "818089e": 120, "308143e": 120, "546318e": 120, "663755e": 120, "276156e": 120, "163062e": 120, "969179e": 120, "639444e": 120, "548547e": 120, "039503e": 120, "969042e": 120, "748551e": 120, "720700e": 120, "601595e": 120, "903842e": 120, "377851e": 120, "843494e": 120, "994525e": 120, "649269e": 120, "829363e": 120, "432086e": 120, "720702e": 120, "094605e": 120, "553468e": 120, "649520e": 120, "930702e": 120, "04": [120, 121, 132], "881745e": 120, "039482e": 120, "698072e": 120, "903534e": 120, "484877e": 120, "538170e": 120, "578953e": 120, "798985e": 120, "169378e": 120, "421158e": 120, "285994e": 120, "613479e": 120, "128355e": 120, "236324e": 120, "190678e": 120, "538567e": 120, "on1v": 120, "134295e": 120, "494847e": 120, "tie": 120, "496903e": 120, "684134e": 120, "285664e": 120, "698204e": 120, "nhet": 120, "856633e": 120, "766285e": 120, "ncsp3": 120, "469539e": 120, "218661e": 120, "mpc06": 120, "640874e": 120, "400087e": 120, "zm1kup": 120, "580742e": 120, "333340e": 120, "psi_e_0d": 120, "498837e": 120, "498822e": 120, "psi_i_1d": 120, "599327e": 120, "534556e": 120, "psi_i_0d": 120, "923630e": 120, "07": [120, 131, 132], "585455e": 120, "training_data": 120, "intercept": 120, "4380609945792554": 120, "prediction_loc": 120, "08527803": 120, "40218305862638054": 120, "39777754": 120, "5757294857850958": 120, "27969124": 120, "local_relev": 120, "129633e": 120, "151605e": 120, "nc": 120, "467723e": 120, "224304e": 120, "pw2": 120, "047326e": 120, "195": [120, 123], "gmti": 120, "784028e": 120, "196": 120, "gnar": 120, "954540e": 120, "197": [120, 123], "smtiv": 120, "333702e": 120, "198": 120, "smti": 120, "270500e": 120, "199": [120, 123], "x0": 120, "281857e": 120, "161804": 120, "160159": 120, "on0v": 120, "114473": 120, "111190": 120, "x0av": 120, "089178": 120, "x0a": 120, "000132": 120, "mpc05": 120, "000131": 120, "var": [120, 121], "000056": 120, "dtr10": 120, "000023": 120, "bac": 120, "000002": 120, "134021": 120, "112305": 120, "nhm": 120, "104204": 120, "101720": 120, "101234": 120, "psi_e_0": 120, "000238": 120, "pw5": 120, "000217": 120, "mwc03": 120, "000120": 120, "dz": 120, "000106": 120, "dtr06": 120, "000071": 120, "local_explan": 120, "go": [121, 141], "understand": 121, "showcas": 121, "procedur": 121, "optmiz": 121, "five": [121, 141], "ga_ev": 121, "yield": [121, 137], "hyperparemet": 121, "consum": 121, "henc": 121, "convini": 121, "temporari": 121, "guag": 121, "progress": 121, "tmp": 121, "counter": 121, "colist": 121, "delet": 121, "def": [121, 123, 126, 127], "indi": 121, "ga_search": 121, "criteria": 121, "y_true": 121, "ndata": 121, "y_mean": 121, "ae": 121, "fold": 121, "kf": 121, "accuracy_kfold": 121, "y_act": 121, "model_accuraci": 121, "tanh": [121, 123], "neurons1": 121, "220": 121, "neurons2": 121, "neurons3": 121, "test_hyp": 121, "xtest": 121, "ytest": 121, "ypred": 121, "acc": 121, "chemmlnotebook": [121, 131, 132, 142], "ui": [121, 131, 132, 142], "successfulli": [121, 131, 132], "chemml_config": 121, "mnt": [121, 127, 131, 132], "mr": [121, 127, 131, 132], "master_chemml_wrapper_v2": [121, 127, 131, 132], "path_to_the_config_fil": [121, 131, 132], "cmlwrapper_out": [121, 131, 132], "instal": [121, 123, 131, 132, 142], "ga_out": 121, "oct": 121, "2021": [121, 127, 131, 132, 137], "noth": 121, "recv": 121, "fps_rdkfp": 121, "ml_model": 121, "ga_fil": 121, "best_individu": [121, 126, 127], "0h": [121, 131, 132], "0m": [121, 131, 132], "shutdown": 121, "fitness_valu": [121, 126, 127], "hour": [121, 126, 127], "483401552230648": 121, "140": [121, 123], "120": 121, "390616": 121, "008216": 121, "009518": 121, "010988": 121, "011194": 121, "010027": 121, "particl": 121, "7548308245753313": 121, "216": [121, 123], "3m": [121, 129], "223": [121, 123], "0x7ff612682ee0": 122, "pybel_molecul": 122, "0x7ff61268cd60": 122, "0x7ff61240b660": 122, "spatial": [122, 125], "sake": 122, "box": 122, "had": 122, "0x7ff6123e29a0": 122, "6h3": 122, "6h": 122, "0x7ff6123f9880": 122, "36692757": 122, "28335772": 122, "53992304": 122, "32204937": 122, "74601445": 122, "37302266": 122, "90718619": 122, "57551206": 122, "14052643": 122, "64477579": 122, "11928699": 122, "69453293": 122, "63353949": 122, "52418726": 122, "09809813": 122, "68417929": 122, "67033406": 122, "55384519": 122, "54691374": 122, "030122": 122, "70648171": 122, "6282777": 122, "0716059": 122, "10505256": 122, "92702632": 122, "92861735": 122, "04796252": 122, "89831872": 122, "03005027": 122, "00546184": 122, "41948147": 122, "48015768": 122, "66959671": 122, "64071624": 122, "17160277": 122, "56192208": 122, "58191842": 122, "10836174": 122, "29188919": 122, "64977785": 122, "76115728": 122, "18017807": 122, "79046003": 122, "09291043": 122, "0854339": 122, "42660851": 122, "40755161": 122, "30241858": 122, "23159667": 122, "27174952": 122, "62426683": 122, "0140735": 122, "55773804": 122, "40642947": 122, "42450498": 122, "37408335": 122, "87662244": 122, "27541304": 122, "2806427": 122, "38499594": 122, "22486349": 122, "1822382": 122, "8644061": 122, "65989367": 122, "62754458": 122, "3469081": 122, "85172564": 122, "54480199": 122, "64186973": 122, "69435292": 122, "26555006": 122, "91736714": 122, "behind": 123, "achiev": 123, "higher": [123, 137], "warn": [123, 125, 127, 129, 132], "filterwarn": [123, 125, 127, 129], "toi": 123, "earlystop": 123, "glorot_uniform": 123, "backend": 123, "b1_in": 123, "inp1": 123, "l1": 123, "b1_l1": 123, "b1_l2": 123, "b2_l1": 123, "b2_l2": 123, "outp": 123, "decai": 123, "2412": 123, "208": 123, "136": 123, "867": 123, "pydot": 123, "Then": 123, "ipython": [123, 132], "svg": 123, "vis_util": 123, "model_to_dot": 123, "prog": 123, "dot": 123, "could": [123, 127], "independ": 123, "tr_ind": 123, "te_ind": 123, "373": 123, "342": 123, "372": 123, "331": 123, "130": 123, "201": 123, "451": 123, "294": 123, "369": 123, "328": 123, "398": 123, "485": 123, "426": 123, "391": 123, "124": 123, "495": 123, "276": 123, "316": 123, "383": 123, "498": 123, "225": 123, "440": 123, "148": [123, 137], "122": 123, "178": 123, "456": 123, "253": 123, "131": 123, "374": 123, "419": 123, "357": 123, "211": 123, "389": 123, "458": 123, "324": 123, "415": 123, "355": 123, "254": 123, "258": 123, "399": 123, "231": 123, "462": 123, "292": 123, "438": 123, "266": 123, "119": 123, "464": 123, "242": 123, "250": 123, "321": 123, "468": 123, "144": 123, "123": [123, 137], "206": 123, "227": 123, "410": 123, "403": 123, "326": 123, "229": 123, "363": 123, "407": 123, "416": 123, "430": 123, "441": 123, "465": 123, "346": 123, "281": 123, "273": 123, "151": 123, "404": 123, "161": 123, "370": 123, "431": 123, "last_deposited_indices_": 123, "x_train": [123, 129, 137], "y_train": [123, 129, 137], "x_test": [123, 129, 137], "y_test": [123, 129, 137], "again": 123, "q": 123, "147": 123, "166": 123, "169": 123, "237": 123, "248": 123, "284": 123, "295": 123, "310": 123, "343": 123, "348": 123, "375": 123, "408": 123, "num_queri": 123, "num_train": 123, "num_test": 123, "mae_std": 123, "rmse": [123, 129, 137], "rmse_std": 123, "r2_std": 123, "155572": 123, "986243": 123, "471923": 123, "153": 123, "165": 123, "173": 123, "190": 123, "228": 123, "269": 123, "304": 123, "308": 123, "365": 123, "376": 123, "402": 123, "422": 123, "433": 123, "442": 123, "494": 123, "term": 123, "root": [123, 137], "000000": [123, 128], "230502": 123, "990689": 123, "014735": 123, "135526": 123, "420088": 123, "184212": 123, "curv": 123, "make_predict_funct": 123, "predict_funct": 123, "0x7f110b915940": 123, "trigger": 123, "retrac": 123, "trace": 123, "expens": [123, 127], "excess": 123, "repeatedli": 123, "experimental_relax_shap": 123, "relax": 123, "unnecessari": 123, "guid": [123, 131], "controlling_retrac": 123, "api_doc": 123, "148370": 123, "831671": 123, "502552": 123, "438552": 123, "618577": 123, "145817": 123, "091333": 123, "049682": 123, "209013": 123, "827610": 123, "467243": 123, "034004": 123, "analyz": [123, 137], "dist_pc": 123, "640x480": 123, "dist_i": 123, "inlin": [123, 129, 133], "out_dir": 123, "al_toy_exampl": 123, "makedir": 123, "monitor": 123, "val_loss": 123, "min_delta": 123, "patienc": 123, "to_csv": 123, "my": [123, 131], "dist_pc_0_": 123, "dist_y_0_": 123, "lcurve_": 123, "0x7f110b89c9d0": 123, "0x7f10d81f3f70": 123, "0x7f107c3d9ee0": 123, "0x7f107c6bd550": 123, "0x7f10d855a160": 123, "426883": 123, "928198": 123, "619069": 123, "901240": 123, "297333": 123, "084853": 123, "150": 123, "730914": 123, "224642": 123, "313881": 123, "132943": 123, "474416": 123, "255601": 123, "796186": 123, "091387": 123, "563045": 123, "048841": 123, "755510": 123, "052260": 123, "275099": 123, "672109": 123, "915425": 123, "183024": 123, "700281": 123, "016584": 123, "824896": 123, "473710": 123, "496102": 123, "330896": 123, "778783": 123, "065220": 123, "952071": 123, "569051": 123, "381525": 123, "837295": 123, "477530": 123, "107432": 123, "947933": 123, "829895": 123, "703703": 123, "578128": 123, "543490": 123, "208759": 123, "502437": 123, "242243": 123, "426619": 123, "814782": 123, "481414": 123, "207281": 123, "283638": 123, "291657": 123, "423523": 123, "174839": 123, "794309": 123, "035551": 123, "646365": 123, "965678": 123, "593052": 123, "539270": 123, "704606": 123, "021051": 123, "base64": 123, "b64encod": 123, "mov": 123, "video_encod": 123, "decod": 123, "ascii": 123, "video_tag": 123, "control": 123, "alt": 123, "src": 123, "m4v": 123, "lcurv": 123, "raw": 125, "topolog": [125, 137], "discret": 125, "mimic": 125, "electro": 125, "nuclei": 125, "unsort": 125, "triangular": 125, "eigen": 125, "spectrum": 125, "4m": [125, 129], "388": 125, "023441": 125, "409571": 125, "814719": 125, "880993": 125, "516695": 125, "960477": 125, "181391": 125, "302647": 125, "358707": 125, "859397": 125, "634258": 125, "622341": 125, "210007": 125, "421152": 125, "116506": 125, "568986": 125, "742816": 125, "052745": 125, "1643": 125, "1644": 125, "1645": 125, "1646": 125, "493386": 125, "659853": 125, "280913": 125, "835105": 125, "040493": 125, "380449": 125, "709312": 125, "173379": 125, "351225": 125, "725846": 125, "224880": 125, "430347": 125, "094433": 125, "457407": 125, "307203": 125, "1647": 125, "1648": 125, "1649": 125, "1650": 125, "1651": 125, "1652": 125, "1653": 125, "common": 125, "seri": 125, "digit": 125, "presenc": 125, "absenc": 125, "substructur": 125, "etc": [125, 131, 137], "morgan_fp": 125, "1014": 125, "1015": 125, "1017": 125, "1018": 125, "1019": 125, "1020": 125, "1021": 125, "1022": 125, "1023": 125, "1m": [125, 129], "simplic": 126, "iloc": 126, "chromosom": 126, "discard": 126, "suppos": [126, 127], "new_col": 126, "pred": [126, 127], "fitness_df": [126, 127], "final_best_featur": 126, "037435": 126, "000541": 126, "537817": 126, "000542": 126, "scalerx": 127, "580965": 127, "stream_executor": 127, "platform": [127, 129], "dso_load": 127, "dynam": [127, 137], "libcudart": 127, "dlerror": 127, "share": 127, "581035": 127, "cuda": 127, "cudart_stub": 127, "cudart": 127, "gpu": 127, "py": [127, 132], "futurewarn": 127, "sigmoid": 127, "polynomi": 127, "krr": 127, "final_best_hyperparamet": 127, "928571428571429": 127, "102514": 127, "000390": 127, "1057547599530448": 127, "095582": 127, "000230": 127, "000312": 127, "000143": 127, "000309": 127, "checkpoint": 127, "computation": 127, "fitness_df_resum": 127, "final_best_hyperparameters_resum": 127, "000271": 127, "000260": 127, "000471": 127, "000116": 127, "0210089362161252": 127, "095203": 127, "000316": 127, "col1": [128, 130], "col2": [128, 130], "col3": [128, 130], "333333": 128, "666667": 128, "tf_xla_flag": 129, "tf_xla_enable_xla_devic": 129, "xscale": [129, 137], "yscale": [129, 137], "002": 129, "2023": 129, "533525": 129, "cpu_feature_guard": 129, "142": 129, "oneapi": 129, "onednn": 129, "cpu": 129, "critic": 129, "sse4": 129, "appropri": 129, "549286": 129, "xla": 129, "servic": 129, "168": 129, "0x7fa11084d090": 129, "guarante": 129, "devic": 129, "549304": 129, "176": 129, "streamexecutor": 129, "638092": 129, "mlir": 129, "mlir_graph_optimization_pass": 129, "regist": 129, "786u": 129, "6591": 129, "802u": 129, "6901": 129, "719u": 129, "6365": 129, "722u": 129, "4933": 129, "4814": 129, "739u": 129, "4217": 129, "936u": 129, "4152": 129, "750u": 129, "3982": 129, "3968": 129, "4011": 129, "825u": 129, "3865": 129, "3745": 129, "3663": 129, "911u": 129, "3646": 129, "766u": 129, "3650": 129, "783u": 129, "3580": 129, "746u": 129, "3539": 129, "662u": 129, "3493": 129, "909u": 129, "3472": 129, "3431": 129, "3417": 129, "842u": 129, "3373": 129, "3365": 129, "893u": 129, "3345": 129, "3318": 129, "930u": 129, "3278": 129, "3273": 129, "3241": 129, "971u": 129, "3216": 129, "3223": 129, "957u": 129, "3184": 129, "2m": 129, "3158": 129, "3132": 129, "3102": 129, "3088": 129, "965u": 129, "3065": 129, "3052": 129, "3038": 129, "866u": 129, "3013": 129, "2985": 129, "2968": 129, "2963": 129, "2930": 129, "931u": 129, "2910": 129, "2885": 129, "2876": 129, "2868": 129, "2839": 129, "2827": 129, "2819": 129, "2781": 129, "2784": 129, "749u": 129, "2764": 129, "2746": 129, "940u": 129, "2721": 129, "894u": 129, "2716": 129, "2691": 129, "2665": 129, "2652": 129, "2636": 129, "800u": 129, "2623": 129, "987u": 129, "2605": 129, "2584": 129, "2571": 129, "2564": 129, "2540": 129, "759u": 129, "2531": 129, "2522": 129, "765u": 129, "2490": 129, "2476": 129, "743u": 129, "2460": 129, "2447": 129, "2426": 129, "943u": 129, "2416": 129, "2406": 129, "2387": 129, "683u": 129, "2368": 129, "870u": 129, "2364": 129, "731u": 129, "2343": 129, "925u": 129, "2326": 129, "2307": 129, "2302": 129, "2283": 129, "861u": 129, "2277": 129, "903u": 129, "2268": 129, "747u": 129, "2249": 129, "860u": 129, "2236": 129, "902u": 129, "2222": 129, "810u": 129, "2204": 129, "2188": 129, "723u": 129, "2177": 129, "658u": 129, "2162": 129, "2154": 129, "751u": 129, "2141": 129, "2123": 129, "2116": 129, "2100": 129, "699u": 129, "2089": 129, "888u": 129, "2070": 129, "692u": 129, "2061": 129, "saved_mlp": 129, "saved_mlp_chemml_model": 129, "json": 129, "load_chemml_model": 129, "loaded_mlp": 129, "0x7fa14c8ef6a0": 129, "0x7fa1489d1dc0": 129, "mape": [129, 137], "894117": 129, "492043": 129, "857629": 129, "98108": 129, "950": 129, "1550": 129, "pariti": [129, 132, 133], "330": [129, 133], "base_mlp": 129, "keras_mlp_no_output": 129, "_________________________________________________________________": 129, "6432": 129, "dense_1": 129, "2112": 129, "dense_2": 129, "8320": 129, "864": 129, "df_clean": 130, "varieti": [131, 137], "snippet": 131, "insert": 131, "statement": 131, "dedic": 131, "templat": 131, "tile": 131, "inorganic_cryst": 131, "precis": [131, 132], "intermedi": [131, 132], "inorganic_pyscript": 131, "fri": [131, 132], "00": 131, "chose": 131, "seen": 131, "regressor": 132, "aim": 132, "simple_ml_workflow": 132, "below": [132, 141], "home": 132, "anaconda3": 132, "env": 132, "v2_0": 132, "lib": 132, "python3": 132, "dataconversionwarn": 132, "n_sampl": 132, "ravel": 132, "_multilayer_perceptron": 132, "614": 132, "convergencewarn": 132, "stochast": 132, "reach": 132, "hasn": 132, "converg": 132, "dfy_actual_vs_dfy_predict": 132, "enegeri": 132, "comapr": 132, "fulli": 132, "equat": 132, "throughput": 137, "studi": 137, "novel": 137, "polyimid": 137, "pi": 137, "optic": 137, "optoelectron": 137, "protocol": 137, "principl": 137, "emploi": 137, "chemlg": 137, "virtual": 137, "chemhtp": 137, "potenti": 137, "rapid": 137, "promis": 137, "preval": 137, "distinguish": [137, 141], "introduc": 137, "moieti": 137, "backbon": 137, "insight": 137, "ration": 137, "goe": 137, "beyond": 137, "tradit": 137, "million": 137, "constraint": 137, "000": 137, "kohn": 137, "sham": 137, "dft": 137, "forcefield": 137, "gga": 137, "zeta": 137, "basi": 137, "karslruh": 137, "restrict": [137, 141], "pbe0": 137, "hybrid": 137, "def2": 137, "svp": 137, "grimm": 137, "d3": 137, "correct": 137, "account": 137, "addition": 137, "karlsruh": 137, "overhead": 137, "orca": 137, "neese2012": 137, "chapter": 137, "abbrevi": 137, "serv": 137, "truth": 137, "effort": 137, "remaind": 137, "acccur": 137, "surrog": 137, "pursuit": 137, "benchmark": 137, "outlin": 137, "weak": 137, "1893": 137, "physicochem": 137, "fp": 137, "circular": 137, "hash": 137, "torsion": 137, "earli": 137, "stop": 137, "dropout": 137, "overfit": 137, "dictat": 137, "percentag": 137, "coeffici": 137, "publish": 137, "load_small_organic_data": 137, "feature_set": 137, "refractive_index": 137, "number_dens": 137, "100000": 137, "load_hyperparamet": 137, "f_name": 137, "zip": 137, "t_name": 137, "lorentzlorenz": 137, "physics_infused_model": 137, "scaler_i": 137, "return_scal": 137, "load_small_organic_data_10k": 137, "dragon_tzvp": 137, "tzvp_model": 137, "transfer_learn": 137, "load_model": 137, "svp_model": 137, "combined_model": 137, "afzal2018a": 137, "cheng": 137, "chong": 137, "1063": 137, "5007873": 137, "241712": 137, "polym": 137, "afzal2019d": 137, "schultz": 137, "andrew": 137, "8374": 137, "8383": 137, "royal": 137, "societi": 137, "afzal2019a": 137, "1039": 137, "c8cp05492d": 137, "14639076": 137, "4452": 137, "4460": 137, "afzal2019b": 137, "prasad": 137, "ganesh": 137, "1932": 137, "7447": 137, "14610": 137, "14618": 137, "american": 137, "phdthesi": 137, "atif_thesi": 137, "mastersthesi": 137, "gaurav_msthesi": 137, "vishwakarma2021metr": 137, "uncertainti": 137, "quantif": 137, "trend": 137, "press": 137, "editor": 141, "flow": 141, "pseudo": 141, "turn": 141, "easi": 141, "retriev": 141, "pound": 141, "sign": 141, "identif": 141, "sent": 141, "predefin": 141, "switch": 141, "few": 141, "charect": 141, "made": 141, "block_i": 141, "abort": 141, "mac": 142, "linux": 142, "wsl": 142, "microsoft": 142, "en": 142, "win10": 142, "widgetsnbextens": 142, "widget": 142, "blob": 142, "master": 142, "user_instal": 142, "accompani": 142, "readthedoc": 142, "simultan": 142, "ensur": 142, "appear": 142}, "objects": {"chemml": [[3, 0, 0, "-", "chem"], [5, 0, 0, "-", "datasets"], [6, 0, 0, "-", "initialization"], [7, 0, 0, "-", "models"], [8, 0, 0, "-", "optimization"], [9, 0, 0, "-", "preprocessing"], [10, 0, 0, "-", "visualization"]], "chemml.chem": [[3, 1, 1, "", "BagofBonds"], [3, 1, 1, "", "CoulombMatrix"], [3, 1, 1, "", "Dragon"], [3, 1, 1, "", "Molecule"], [3, 1, 1, "", "RDKitFingerprint"], [3, 1, 1, "", "XYZ"], [3, 3, 1, "", "atom_features"], [3, 3, 1, "", "bond_features"], [4, 0, 0, "-", "magpie_python"], [3, 3, 1, "", "num_atom_features"], [3, 3, 1, "", "num_bond_features"], [3, 3, 1, "", "tensorise_molecules"]], "chemml.chem.BagofBonds": [[3, 2, 1, "", "concat_mol_features"], [3, 2, 1, "", "represent"]], "chemml.chem.CoulombMatrix": [[3, 2, 1, "", "concat_dataframes"], [3, 2, 1, "", "represent"]], "chemml.chem.Dragon": [[3, 2, 1, "", "represent"]], "chemml.chem.Molecule": [[3, 2, 1, "", "hydrogens"], [3, 2, 1, "", "to_inchi"], [3, 2, 1, "", "to_mol2"], [3, 2, 1, "", "to_smarts"], [3, 2, 1, "", "to_smiles"], [3, 2, 1, "", "to_xyz"], [3, 2, 1, "", "visualize"]], "chemml.chem.RDKitFingerprint": [[3, 2, 1, "", "load_sparse"], [3, 2, 1, "", "represent"], [3, 2, 1, "", "store_sparse"]], "chemml.chem.magpie_python": [[4, 1, 1, "", "APEAttributeGenerator"], [4, 1, 1, "", "APRDFAttributeGenerator"], [4, 1, 1, "", "ChargeDependentAttributeGenerator"], [4, 1, 1, "", "ChemicalOrderingAttributeGenerator"], [4, 1, 1, "", "CompositionEntry"], [4, 1, 1, "", "CoordinationNumberAttributeGenerator"], [4, 1, 1, "", "CoulombMatrixAttributeGenerator"], [4, 1, 1, "", "CrystalStructureEntry"], [4, 1, 1, "", "EffectiveCoordinationNumberAttributeGenerator"], [4, 1, 1, "", "ElementFractionAttributeGenerator"], [4, 1, 1, "", "ElementPairPropertyAttributeGenerator"], [4, 1, 1, "", "ElementalPropertyAttributeGenerator"], [4, 1, 1, "", "GCLPAttributeGenerator"], [4, 1, 1, "", "IonicCompoundProximityAttributeGenerator"], [4, 1, 1, "", "IonicityAttributeGenerator"], [4, 1, 1, "", "LatticeSimilarityAttributeGenerator"], [4, 1, 1, "", "LocalPropertyDifferenceAttributeGenerator"], [4, 1, 1, "", "LocalPropertyVarianceAttributeGenerator"], [4, 1, 1, "", "MeredigAttributeGenerator"], [4, 1, 1, "", "PRDFAttributeGenerator"], [4, 1, 1, "", "PackingEfficiencyAttributeGenerator"], [4, 1, 1, "", "StoichiometricAttributeGenerator"], [4, 1, 1, "", "StructuralHeterogeneityAttributeGenerator"], [4, 1, 1, "", "ValenceShellAttributeGenerator"], [4, 1, 1, "", "YangOmegaAttributeGenerator"]], "chemml.chem.magpie_python.APEAttributeGenerator": [[4, 2, 1, "", "compute_APE"], [4, 2, 1, "", "compute_cluster_compositions"], [4, 2, 1, "", "determine_optimal_APE"], [4, 2, 1, "", "find_efficiently_packed_clusters"], [4, 2, 1, "", "generate_features"], [4, 2, 1, "", "get_closest_compositions"], [4, 2, 1, "", "get_cluster_range"], [4, 2, 1, "", "set_n_nearest_to_eval"], [4, 2, 1, "", "set_packing_threshold"], [4, 2, 1, "", "set_radius_property"]], "chemml.chem.magpie_python.APRDFAttributeGenerator": [[4, 2, 1, "", "add_elemental_properties"], [4, 2, 1, "", "add_elemental_property"], [4, 2, 1, "", "clear_elemental_properties"], [4, 2, 1, "", "generate_features"], [4, 2, 1, "", "set_cut_off_distance"], [4, 2, 1, "", "set_num_points"], [4, 2, 1, "", "set_smoothing_parameter"]], "chemml.chem.magpie_python.ChargeDependentAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.ChemicalOrderingAttributeGenerator": [[4, 2, 1, "", "generate_features"], [4, 2, 1, "", "set_shells"], [4, 2, 1, "", "set_weighted"]], "chemml.chem.magpie_python.CompositionEntry": [[4, 2, 1, "", "combine_compositions"], [4, 2, 1, "", "get_element_fraction"], [4, 2, 1, "", "get_element_fractions"], [4, 2, 1, "", "get_element_ids"], [4, 2, 1, "", "get_element_names"], [4, 2, 1, "", "import_composition_list"], [4, 2, 1, "", "import_values_list"], [4, 2, 1, "", "parse_composition"], [4, 2, 1, "", "parse_element_amounts"], [4, 2, 1, "", "print_number"], [4, 2, 1, "", "set_composition"], [4, 2, 1, "", "sort_and_normalize"]], "chemml.chem.magpie_python.CoordinationNumberAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.CoulombMatrixAttributeGenerator": [[4, 2, 1, "", "generate_features"], [4, 2, 1, "", "set_n_eigenvalues"]], "chemml.chem.magpie_python.CrystalStructureEntry": [[4, 2, 1, "", "clear_representations"], [4, 2, 1, "", "compute_composition"], [4, 2, 1, "", "compute_voronoi_tessellation"], [4, 2, 1, "", "get_name"], [4, 2, 1, "", "get_structure"], [4, 2, 1, "", "import_structures_list"], [4, 2, 1, "", "replace_elements"]], "chemml.chem.magpie_python.EffectiveCoordinationNumberAttributeGenerator": [[4, 2, 1, "", "generate_features"], [4, 2, 1, "", "mean_abs_dev"]], "chemml.chem.magpie_python.ElementFractionAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.ElementPairPropertyAttributeGenerator": [[4, 2, 1, "", "add_elemental_pair_properties"], [4, 2, 1, "", "add_elemental_pair_property"], [4, 2, 1, "", "generate_features"], [4, 2, 1, "", "load_pair_lookup_data"], [4, 2, 1, "", "remove_elemental_pair_properties"], [4, 2, 1, "", "remove_elemental_pair_property"]], "chemml.chem.magpie_python.ElementalPropertyAttributeGenerator": [[4, 2, 1, "", "add_elemental_properties"], [4, 2, 1, "", "add_elemental_property"], [4, 2, 1, "", "generate_features"], [4, 2, 1, "", "load_lookup_data"], [4, 2, 1, "", "remove_elemental_properties"], [4, 2, 1, "", "remove_elemental_property"]], "chemml.chem.magpie_python.GCLPAttributeGenerator": [[4, 2, 1, "", "generate_features"], [4, 2, 1, "", "set_count_phases"], [4, 2, 1, "", "set_phases"]], "chemml.chem.magpie_python.IonicCompoundProximityAttributeGenerator": [[4, 2, 1, "", "generate_features"], [4, 2, 1, "", "set_max_formula_unit"]], "chemml.chem.magpie_python.IonicityAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.LatticeSimilarityAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator": [[4, 2, 1, "", "add_elemental_properties"], [4, 2, 1, "", "add_elemental_property"], [4, 2, 1, "", "add_shell"], [4, 2, 1, "", "add_shells"], [4, 2, 1, "", "clear_elemental_properties"], [4, 2, 1, "", "clear_shells"], [4, 2, 1, "", "generate_features"], [4, 2, 1, "", "get_atom_properties"], [4, 2, 1, "", "remove_elemental_properties"], [4, 2, 1, "", "remove_elemental_property"]], "chemml.chem.magpie_python.LocalPropertyVarianceAttributeGenerator": [[4, 2, 1, "", "get_atom_properties"]], "chemml.chem.magpie_python.MeredigAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.PRDFAttributeGenerator": [[4, 2, 1, "", "add_element"], [4, 2, 1, "", "clear_element_list"], [4, 2, 1, "", "generate_features"], [4, 2, 1, "", "set_cut_off_distance"], [4, 2, 1, "", "set_elements"], [4, 2, 1, "", "set_n_points"]], "chemml.chem.magpie_python.PackingEfficiencyAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.StoichiometricAttributeGenerator": [[4, 2, 1, "", "add_p_norm"], [4, 2, 1, "", "add_p_norms"], [4, 2, 1, "", "clear_p_norms"], [4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.StructuralHeterogeneityAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.ValenceShellAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.chem.magpie_python.YangOmegaAttributeGenerator": [[4, 2, 1, "", "generate_features"]], "chemml.datasets": [[5, 3, 1, "", "load_cep_homo"], [5, 3, 1, "", "load_comp_energy"], [5, 3, 1, "", "load_crystal_structures"], [5, 3, 1, "", "load_organic_density"], [5, 3, 1, "", "load_xyz_polarizability"]], "chemml.initialization": [[6, 1, 1, "", "Split"], [6, 1, 1, "", "XYZreader"]], "chemml.initialization.Split": [[6, 2, 1, "", "fit"]], "chemml.initialization.XYZreader": [[6, 2, 1, "", "read"]], "chemml.models": [[7, 1, 1, "", "MLP"], [7, 1, 1, "", "NeuralGraphHidden"], [7, 1, 1, "", "NeuralGraphOutput"], [7, 1, 1, "", "TransferLearning"]], "chemml.models.MLP": [[7, 2, 1, "", "get_model"], [7, 2, 1, "", "load"], [7, 2, 1, "", "save"]], "chemml.models.NeuralGraphHidden": [[7, 2, 1, "", "build"], [7, 2, 1, "", "call"], [7, 2, 1, "", "compute_output_shape"], [7, 2, 1, "", "from_config"], [7, 2, 1, "", "get_config"]], "chemml.models.NeuralGraphOutput": [[7, 2, 1, "", "build"], [7, 2, 1, "", "call"], [7, 2, 1, "", "compute_output_shape"], [7, 2, 1, "", "from_config"], [7, 2, 1, "", "get_config"]], "chemml.models.TransferLearning": [[7, 2, 1, "", "transfer"]], "chemml.optimization": [[8, 1, 1, "", "ActiveLearning"], [8, 1, 1, "", "GeneticAlgorithm"]], "chemml.optimization.ActiveLearning": [[8, 2, 1, "", "deposit"], [8, 2, 1, "", "get_target_layer"], [8, 2, 1, "", "ignore"], [8, 2, 1, "", "initialize"], [8, 2, 1, "", "random_search"], [8, 2, 1, "", "search"], [8, 2, 1, "", "visualize"]], "chemml.optimization.GeneticAlgorithm": [[8, 2, 1, "", "search"]], "chemml.preprocessing": [[9, 3, 1, "", "ConstantColumns"], [9, 3, 1, "", "MissingValues"], [9, 3, 1, "", "Outliers"]], "chemml.visualization": [[10, 1, 1, "", "SavePlot"], [10, 1, 1, "", "decorator"], [10, 1, 1, "", "hist"], [10, 1, 1, "", "scatter2D"]], "chemml.visualization.SavePlot": [[10, 2, 1, "", "save"]], "chemml.visualization.decorator": [[10, 2, 1, "", "fit"], [10, 2, 1, "", "matplotlib_font"]], "chemml.visualization.hist": [[10, 2, 1, "", "plot"]], "chemml.visualization.scatter2D": [[10, 2, 1, "", "plot"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"librari": [0, 112, 117, 120], "api": [0, 18, 117], "document": [0, 117], "chemml": [0, 18, 112, 113, 115, 117, 120, 125, 126, 127, 128, 129, 143], "wrapper": [0, 2, 115, 117, 143], "tabl": 1, "content": 1, "refer": [2, 4], "input": [2, 115, 118, 141, 142], "repres": [2, 139], "prepar": [2, 115, 128, 130, 136], "model": [2, 7, 117, 120, 123, 127, 129, 132, 134], "optim": [2, 8, 122, 126, 127, 135], "visual": [2, 10, 120, 122, 123, 133, 140], "chem": [3, 125], "modul": [3, 4, 5, 6, 7, 8, 9, 10, 120], "paramet": [3, 4, 6, 7, 8, 9, 10], "attribut": [3, 4, 6, 8, 120], "exampl": [3, 5, 10, 123], "return": [3, 4, 5, 6, 7, 8, 9, 10], "note": [3, 4, 6, 8, 9, 10], "magpie_python": 4, "advanc": 4, "rais": 4, "see": 4, "also": 4, "dataset": 5, "initi": [6, 123], "method": [8, 115, 120, 125], "preprocess": [9, 119], "convertfil": [11, 26], "pyscript": [11, 50, 131], "xyzread": [11, 58], "load_cep_homo": [11, 62], "load_comp_energi": [11, 63], "load_crystal_structur": [11, 64], "load_organic_dens": [11, 65], "load_xyz_polariz": [11, 66], "read_excel": [11, 71], "read_tabl": [11, 72], "apeattributegener": [12, 19], "aprdfattributegener": [12, 20], "bagofbond": [12, 21], "chargedependentattributegener": [12, 22], "chemicalorderingattributegener": [12, 23], "compositionentri": [12, 24], "coordinationnumberattributegener": [12, 27], "coulombmatrix": [12, 28], "coulombmatrixattributegener": [12, 29], "crystalstructureentri": [12, 30], "distancematrix": [12, 31], "dragon": [12, 32], "effectivecoordinationnumberattributegener": [12, 33], "elementfractionattributegener": [12, 34], "elementpairpropertyattributegener": [12, 35], "elementalpropertyattributegener": [12, 36], "gclpattributegener": [12, 37], "ioniccompoundproximityattributegener": [12, 38], "ionicityattributegener": [12, 39], "latticesimilarityattributegener": [12, 40], "localpropertydifferenceattributegener": [12, 41], "localpropertyvarianceattributegener": [12, 42], "meredigattributegener": [12, 45], "prdfattributegener": [12, 48], "packingefficiencyattributegener": [12, 49], "rdkitfingerprint": [12, 51], "stoichiometricattributegener": [12, 55], "structuralheterogeneityattributegener": [12, 56], "valenceshellattributegener": [12, 57], "yangomegaattributegener": [12, 59], "constantcolumn": [13, 25], "missingvalu": [13, 46], "outlier": [13, 47, 130], "split": [13, 54, 119], "binar": [13, 75], "imput": [13, 78], "kfold": [13, 79], "kernelpca": [13, 80], "leaveoneout": [13, 85], "maxabsscal": [13, 90], "minmaxscal": [13, 91], "normal": [13, 94], "onehotencod": [13, 96], "pca": [13, 97], "polynomialfeatur": [13, 98], "robustscal": [13, 100], "shufflesplit": [13, 103], "standardscal": [13, 104], "stratifiedshufflesplit": [13, 105], "train_test_split": [13, 111], "concat": [13, 68], "mlp": [14, 43, 129], "mlp_sklearn": [14, 44], "ardregress": [14, 73], "bayesianridg": [14, 74], "elasticnet": [14, 76], "kernelridg": [14, 81], "lar": [14, 82], "lasso": [14, 83], "lassolar": [14, 84], "linearregress": [14, 86], "linearsvr": [14, 87], "logisticregress": [14, 88], "mlpregressor": [14, 89], "multitaskelasticnet": [14, 92], "multitasklasso": [14, 93], "nusvr": [14, 95], "ridg": [14, 99], "sgdregressor": [14, 101], "svr": [14, 102], "gridsearchcv": [15, 77], "cross_val_predict": [15, 106], "cross_val_scor": [15, 107], "evaluate_regress": [15, 108], "learning_curv": [15, 109], "scorer_regress": [15, 110], "corr": [15, 69], "decor": [16, 60], "hist": [16, 61], "scatter2d": [16, 67], "plot": [16, 70, 120, 129], "savefil": [17, 52], "saveplot": [17, 53], "introduct": [112, 115], "citat": [112, 117, 137], "welcom": [113, 117], "task": 113, "intro": 113, "head": 114, "step": 115, "1": [115, 128], "an": 115, "file": [115, 141, 142], "2": [115, 128], "run": 115, "one": 115, "termin": 115, "two": 115, "ani": 115, "python": 115, "interpret": 115, "3": [115, 128], "check": 115, "output": [115, 129], "directori": 115, "explain": [116, 120], "": [117, 120], "code": 117, "design": 117, "latest": 117, "version": 117, "instal": 117, "depend": 117, "publish": [117, 138], "licens": 117, "about": 117, "u": 117, "neural": [119, 120, 129], "fingerprint": [119, 125], "data": [119, 129], "build": [119, 120, 129, 132], "train": [119, 129], "network": [119, 120, 129], "gener": [120, 141], "deep": 120, "explan": 120, "via": 120, "The": 120, "ha": 120, "three": 120, "ai": 120, "xai": 120, "deepshap": 120, "lrp": 120, "lime": 120, "It": 120, "allow": 120, "both": 120, "local": 120, "singl": [120, 137], "instanc": 120, "global": 120, "aggreg": 120, "multipl": 120, "ar": 120, "form": 120, "relev": 120, "score": 120, "each": 120, "featur": [120, 125, 126], "us": [120, 122, 126, 127, 129], "dnn": [120, 137], "waterfal": 120, "adapt": 120, "from": [120, 125], "shap": 120, "genet": 121, "algorithm": 121, "gui": [121, 142], "tutori": [121, 143], "evalu": [121, 129], "error_metr": 121, "single_obj": 121, "space": [121, 126, 127], "test_hyperparamet": 121, "molecul": [122, 125, 137], "construct": 122, "smile": [122, 125], "3d": 122, "atom": 122, "coordin": 122, "inchi": 122, "add": 122, "remov": [122, 128, 130], "hydrogen": 122, "convert": 122, "chemic": 122, "format": 122, "xyz": 122, "geometri": 122, "activ": 123, "learn": [123, 129, 137], "kera": [123, 129], "emc": 123, "start": 123, "search": 123, "get": 123, "baselin": 123, "random": 123, "sampl": 123, "distribut": 123, "loop": 123, "creat": [123, 125], "video": 123, "represent": 125, "object": [125, 126, 127], "coulomb": 125, "matrix": 125, "rdkit": 125, "tensor": 125, "select": 126, "geneticalgorithm": [126, 127], "defin": [126, 127], "hyperparamet": [126, 127], "function": [126, 127], "resum": 127, "handl": 128, "miss": 128, "valu": [128, 129], "implement": 128, "4": 128, "strategi": 128, "interpol": 128, "replac": 128, "them": 128, "ignor": 128, "row": 128, "With": 128, "zero": 128, "column": [128, 130], "fit": 129, "save": 129, "load": 129, "predict": 129, "densiti": 129, "test": 129, "perform": 129, "util": 129, "regression_metr": 129, "actual": 129, "v": 129, "If": 129, "underli": 129, "tensorflow": 129, "pytorch": 129, "i": 129, "requir": 129, "sometim": 129, "you": 129, "mai": 129, "need": 129, "without": 129, "layer": 129, "e": 129, "g": 129, "transfer": [129, 137], "constant": 130, "oultier": 130, "base": 130, "mean": 130, "median": 130, "usag": 131, "simpl": 132, "ml": 132, "acceler": 137, "discoveri": 137, "high": 137, "refract": 137, "index": 137, "target": 137, "physic": 137, "infus": 137, "tzvp": 137, "polariz": 137, "ri": 138, "manual": 141, "overview": 141, "specif": 141, "charact": 141, "rule": 141}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Library API documentation": [[0, "library-api-documentation"]], "ChemML Library API": [[0, null]], "Wrapper API documentation": [[0, "wrapper-api-documentation"]], "ChemML Wrapper API": [[0, null]], "Table of Contents": [[1, "table-of-contents"]], "Table of contents": [[1, "id1"]], "Wrapper Reference": [[2, "wrapper-reference"]], "Input": [[2, "input"], [118, "input"], [118, null]], "Represent": [[2, "represent"], [139, "represent"], [139, null]], "Prepare": [[2, "prepare"], [136, "prepare"], [136, null]], "Model": [[2, "model"], [134, "model"], [134, null]], "Optimize": [[2, "optimize"], [135, "optimize"], [135, null]], "Visualize": [[2, "visualize"], [133, "Visualize"], [140, "visualize"], [140, null]], "Chem module": [[3, "chem-module"]], "Parameters": [[3, "parameters"], [3, "id1"], [3, "id2"], [3, "id4"], [3, "id7"], [3, "id9"], [3, "id11"], [3, "id13"], [3, "id15"], [3, "id19"], [3, "id21"], [3, "id23"], [3, "id25"], [3, "id27"], [3, "id29"], [3, "id31"], [3, "id33"], [3, "id35"], [3, "id37"], [3, "id39"], [3, "id40"], [3, "id41"], [3, "id43"], [3, "id47"], [4, "parameters"], [4, "id2"], [4, "id4"], [4, "id7"], [4, "id9"], [4, "id11"], [4, "id13"], [4, "id15"], [4, "id16"], [4, "id18"], [4, "id22"], [4, "id23"], [4, "id24"], [4, "id27"], [4, "id28"], [4, "id29"], [4, "id33"], [4, "id38"], [4, "id41"], [4, "id42"], [4, "id44"], [4, "id46"], [4, "id51"], [4, "id53"], [4, "id55"], [4, "id58"], [4, "id61"], [4, "id63"], [4, "id65"], [4, "id66"], [4, "id73"], [4, "id76"], [4, "id82"], [4, "id84"], [4, "id86"], [4, "id89"], [4, "id91"], [4, "id95"], [4, "id96"], [4, "id97"], [4, "id100"], [4, "id101"], [4, "id103"], [4, "id104"], [4, "id105"], [4, "id108"], [4, "id109"], [4, "id112"], [4, "id115"], [4, "id116"], [4, "id119"], [4, "id122"], [4, "id126"], [4, "id130"], [4, "id133"], [4, "id134"], [4, "id135"], [4, "id137"], [4, "id138"], [4, "id141"], [4, "id143"], [4, "id144"], [4, "id146"], [4, "id151"], [4, "id157"], [4, "id159"], [4, "id162"], [4, "id163"], [4, "id164"], [4, "id166"], [4, "id170"], [4, "id172"], [4, "id173"], [4, "id177"], [4, "id182"], [4, "id186"], [6, "parameters"], [6, "id1"], [6, "id2"], [7, "parameters"], [7, "id1"], [7, "id2"], [7, "id3"], [7, "id26"], [7, "id27"], [8, "parameters"], [8, "id1"], [8, "id3"], [8, "id4"], [8, "id6"], [8, "id9"], [8, "id11"], [8, "id13"], [8, "id14"], [9, "parameters"], [9, "id1"], [9, "id3"], [10, "id2"], [10, "id3"], [10, "id4"], [10, "id6"], [10, "id8"], [10, "id10"], [10, "id12"]], "Attributes": [[3, "attributes"], [3, "id5"], [3, "id17"], [3, "id34"], [4, "attributes"], [4, "id19"], [4, "id36"], [4, "id43"], [4, "id69"], [4, "id77"], [4, "id94"], [4, "id102"], [4, "id110"], [4, "id117"], [4, "id154"], [4, "id169"], [6, "attributes"], [8, "attributes"], [8, "id7"], [8, "id15"]], "Examples": [[3, "examples"], [3, "id6"], [3, "id12"], [3, "id18"], [5, "examples"], [5, "id2"], [5, "id4"], [5, "id6"], [5, "id8"], [10, "examples"], [10, "id7"], [10, "id11"]], "Returns": [[3, "returns"], [3, "id3"], [3, "id8"], [3, "id10"], [3, "id14"], [3, "id32"], [3, "id36"], [3, "id38"], [3, "id42"], [3, "id44"], [3, "id45"], [3, "id46"], [3, "id49"], [4, "returns"], [4, "id3"], [4, "id5"], [4, "id8"], [4, "id10"], [4, "id12"], [4, "id14"], [4, "id25"], [4, "id34"], [4, "id39"], [4, "id45"], [4, "id47"], [4, "id48"], [4, "id49"], [4, "id50"], [4, "id52"], [4, "id54"], [4, "id56"], [4, "id59"], [4, "id62"], [4, "id67"], [4, "id74"], [4, "id79"], [4, "id80"], [4, "id81"], [4, "id83"], [4, "id85"], [4, "id87"], [4, "id90"], [4, "id92"], [4, "id98"], [4, "id106"], [4, "id113"], [4, "id120"], [4, "id127"], [4, "id131"], [4, "id139"], [4, "id142"], [4, "id147"], [4, "id152"], [4, "id160"], [4, "id167"], [4, "id174"], [4, "id178"], [4, "id183"], [4, "id187"], [5, "returns"], [5, "id1"], [5, "id3"], [5, "id5"], [5, "id7"], [6, "returns"], [7, "returns"], [7, "id28"], [8, "returns"], [8, "id2"], [8, "id5"], [8, "id10"], [8, "id12"], [8, "id16"], [9, "returns"], [9, "id2"], [9, "id4"], [10, "returns"], [10, "id5"], [10, "id9"], [10, "id13"]], "Notes": [[3, "notes"], [3, "id16"], [3, "id20"], [3, "id22"], [3, "id24"], [3, "id26"], [3, "id28"], [3, "id30"], [3, "id48"], [4, "notes"], [4, "id6"], [4, "id30"], [4, "id37"], [4, "id70"], [4, "id111"], [4, "id118"], [4, "id123"], [4, "id129"], [4, "id148"], [4, "id165"], [4, "id176"], [6, "notes"], [8, "notes"], [8, "id8"], [9, "notes"], [9, "id5"], [10, "notes"]], "Magpie_Python module": [[4, "magpie-python-module"]], "Advanced Notes": [[4, "advanced-notes"]], "References": [[4, "references"], [4, "id20"], [4, "id31"], [4, "id71"], [4, "id124"], [4, "id149"], [4, "id155"], [4, "id180"]], "Raises": [[4, "raises"], [4, "id17"], [4, "id26"], [4, "id35"], [4, "id40"], [4, "id57"], [4, "id60"], [4, "id64"], [4, "id68"], [4, "id75"], [4, "id78"], [4, "id88"], [4, "id93"], [4, "id99"], [4, "id107"], [4, "id114"], [4, "id121"], [4, "id128"], [4, "id132"], [4, "id136"], [4, "id140"], [4, "id153"], [4, "id158"], [4, "id161"], [4, "id168"], [4, "id171"], [4, "id175"], [4, "id179"], [4, "id184"], [4, "id188"]], "See Also": [[4, "see-also"], [4, "id145"]], "Datasets module": [[5, "datasets-module"]], "Initialization module": [[6, "initialization-module"]], "Return": [[6, "return"]], "Models module": [[7, "models-module"]], "Optimization module": [[8, "optimization-module"]], "Methods": [[8, "methods"]], "Preprocessing module": [[9, "preprocessing-module"]], "Visualization module": [[10, "visualization-module"]], "Parameters:": [[10, "parameters"], [10, "id1"]], "Example:": [[10, "example"]], "ConvertFile": [[11, "convertfile"], [26, "convertfile"]], "PyScript": [[11, "pyscript"], [50, "pyscript"]], "XYZreader": [[11, "xyzreader"], [58, "xyzreader"]], "load_cep_homo": [[11, "load-cep-homo"], [62, "load-cep-homo"]], "load_comp_energy": [[11, "load-comp-energy"], [63, "load-comp-energy"]], "load_crystal_structures": [[11, "load-crystal-structures"], [64, "load-crystal-structures"]], "load_organic_density": [[11, "load-organic-density"], [65, "load-organic-density"]], "load_xyz_polarizability": [[11, "load-xyz-polarizability"], [66, "load-xyz-polarizability"]], "read_excel": [[11, "read-excel"], [71, "read-excel"]], "read_table": [[11, "read-table"], [72, "read-table"]], "APEAttributeGenerator": [[12, "apeattributegenerator"], [19, "apeattributegenerator"]], "APRDFAttributeGenerator": [[12, "aprdfattributegenerator"], [20, "aprdfattributegenerator"]], "BagofBonds": [[12, "bagofbonds"], [21, "bagofbonds"]], "ChargeDependentAttributeGenerator": [[12, "chargedependentattributegenerator"], [22, "chargedependentattributegenerator"]], "ChemicalOrderingAttributeGenerator": [[12, "chemicalorderingattributegenerator"], [23, "chemicalorderingattributegenerator"]], "CompositionEntry": [[12, "compositionentry"], [24, "compositionentry"]], "CoordinationNumberAttributeGenerator": [[12, "coordinationnumberattributegenerator"], [27, "coordinationnumberattributegenerator"]], "CoulombMatrix": [[12, "coulombmatrix"], [28, "coulombmatrix"]], "CoulombMatrixAttributeGenerator": [[12, "coulombmatrixattributegenerator"], [29, "coulombmatrixattributegenerator"]], "CrystalStructureEntry": [[12, "crystalstructureentry"], [30, "crystalstructureentry"]], "DistanceMatrix": [[12, "distancematrix"], [31, "distancematrix"]], "Dragon": [[12, "dragon"], [32, "dragon"]], "EffectiveCoordinationNumberAttributeGenerator": [[12, "effectivecoordinationnumberattributegenerator"], [33, "effectivecoordinationnumberattributegenerator"]], "ElementFractionAttributeGenerator": [[12, "elementfractionattributegenerator"], [34, "elementfractionattributegenerator"]], "ElementPairPropertyAttributeGenerator": [[12, "elementpairpropertyattributegenerator"], [35, "elementpairpropertyattributegenerator"]], "ElementalPropertyAttributeGenerator": [[12, "elementalpropertyattributegenerator"], [36, "elementalpropertyattributegenerator"]], "GCLPAttributeGenerator": [[12, "gclpattributegenerator"], [37, "gclpattributegenerator"]], "IonicCompoundProximityAttributeGenerator": [[12, "ioniccompoundproximityattributegenerator"], [38, "ioniccompoundproximityattributegenerator"]], "IonicityAttributeGenerator": [[12, "ionicityattributegenerator"], [39, "ionicityattributegenerator"]], "LatticeSimilarityAttributeGenerator": [[12, "latticesimilarityattributegenerator"], [40, "latticesimilarityattributegenerator"]], "LocalPropertyDifferenceAttributeGenerator": [[12, "localpropertydifferenceattributegenerator"], [41, "localpropertydifferenceattributegenerator"]], "LocalPropertyVarianceAttributeGenerator": [[12, "localpropertyvarianceattributegenerator"], [42, "localpropertyvarianceattributegenerator"]], "MeredigAttributeGenerator": [[12, "meredigattributegenerator"], [45, "meredigattributegenerator"]], "PRDFAttributeGenerator": [[12, "prdfattributegenerator"], [48, "prdfattributegenerator"]], "PackingEfficiencyAttributeGenerator": [[12, "packingefficiencyattributegenerator"], [49, "packingefficiencyattributegenerator"]], "RDKitFingerprint": [[12, "rdkitfingerprint"], [51, "rdkitfingerprint"]], "StoichiometricAttributeGenerator": [[12, "stoichiometricattributegenerator"], [55, "stoichiometricattributegenerator"]], "StructuralHeterogeneityAttributeGenerator": [[12, "structuralheterogeneityattributegenerator"], [56, "structuralheterogeneityattributegenerator"]], "ValenceShellAttributeGenerator": [[12, "valenceshellattributegenerator"], [57, "valenceshellattributegenerator"]], "YangOmegaAttributeGenerator": [[12, "yangomegaattributegenerator"], [59, "yangomegaattributegenerator"]], "ConstantColumns": [[13, "constantcolumns"], [25, "constantcolumns"]], "MissingValues": [[13, "missingvalues"], [46, "missingvalues"]], "Outliers": [[13, "outliers"], [47, "outliers"]], "Split": [[13, "split"], [54, "split"]], "Binarizer": [[13, "binarizer"], [75, "binarizer"]], "Imputer": [[13, "imputer"], [78, "imputer"]], "KFold": [[13, "kfold"], [79, "kfold"]], "KernelPCA": [[13, "kernelpca"], [80, "kernelpca"]], "LeaveOneOut": [[13, "leaveoneout"], [85, "leaveoneout"]], "MaxAbsScaler": [[13, "maxabsscaler"], [90, "maxabsscaler"]], "MinMaxScaler": [[13, "minmaxscaler"], [91, "minmaxscaler"]], "Normalizer": [[13, "normalizer"], [94, "normalizer"]], "OneHotEncoder": [[13, "onehotencoder"], [96, "onehotencoder"]], "PCA": [[13, "pca"], [97, "pca"]], "PolynomialFeatures": [[13, "polynomialfeatures"], [98, "polynomialfeatures"]], "RobustScaler": [[13, "robustscaler"], [100, "robustscaler"]], "ShuffleSplit": [[13, "shufflesplit"], [103, "shufflesplit"]], "StandardScaler": [[13, "standardscaler"], [104, "standardscaler"]], "StratifiedShuffleSplit": [[13, "stratifiedshufflesplit"], [105, "stratifiedshufflesplit"]], "train_test_split": [[13, "train-test-split"], [111, "train-test-split"]], "concat": [[13, "concat"], [68, "concat"]], "MLP": [[14, "mlp"], [43, "mlp"]], "MLP_sklearn": [[14, "mlp-sklearn"], [44, "mlp-sklearn"]], "ARDRegression": [[14, "ardregression"], [73, "ardregression"]], "BayesianRidge": [[14, "bayesianridge"], [74, "bayesianridge"]], "ElasticNet": [[14, "elasticnet"], [76, "elasticnet"]], "KernelRidge": [[14, "kernelridge"], [81, "kernelridge"]], "Lars": [[14, "lars"], [82, "lars"]], "Lasso": [[14, "lasso"], [83, "lasso"]], "LassoLars": [[14, "lassolars"], [84, "lassolars"]], "LinearRegression": [[14, "linearregression"], [86, "linearregression"]], "LinearSVR": [[14, "linearsvr"], [87, "linearsvr"]], "LogisticRegression": [[14, "logisticregression"], [88, "logisticregression"]], "MLPRegressor": [[14, "mlpregressor"], [89, "mlpregressor"]], "MultiTaskElasticNet": [[14, "multitaskelasticnet"], [92, "multitaskelasticnet"]], "MultiTaskLasso": [[14, "multitasklasso"], [93, "multitasklasso"]], "NuSVR": [[14, "nusvr"], [95, "nusvr"]], "Ridge": [[14, "ridge"], [99, "ridge"]], "SGDRegressor": [[14, "sgdregressor"], [101, "sgdregressor"]], "SVR": [[14, "svr"], [102, "svr"]], "GridSearchCV": [[15, "gridsearchcv"], [77, "gridsearchcv"]], "cross_val_predict": [[15, "cross-val-predict"], [106, "cross-val-predict"]], "cross_val_score": [[15, "cross-val-score"], [107, "cross-val-score"]], "evaluate_regression": [[15, "evaluate-regression"], [108, "evaluate-regression"]], "learning_curve": [[15, "learning-curve"], [109, "learning-curve"]], "scorer_regression": [[15, "scorer-regression"], [110, "scorer-regression"]], "corr": [[15, "corr"], [69, "corr"]], "decorator": [[16, "decorator"], [60, "decorator"]], "hist": [[16, "hist"], [61, "hist"]], "scatter2D": [[16, "scatter2d"], [67, "scatter2d"]], "plot": [[16, "plot"], [70, "plot"]], "SaveFile": [[17, "savefile"], [52, "savefile"]], "SavePlot": [[17, "saveplot"], [53, "saveplot"]], "ChemML API": [[18, "chemml-api"], [18, null], [117, null]], "Introduction to ChemML Library": [[112, "introduction-to-chemml-library"]], "Citation:": [[112, "citation"], [117, "citation"]], "Welcome to chemml tasks": [[113, "welcome-to-chemml-tasks"]], "INTRO": [[113, null]], "heading": [[114, "heading"]], "Introduction to ChemML Wrapper": [[115, "introduction-to-chemml-wrapper"]], "Step #1: prepare an input file": [[115, "step-1-prepare-an-input-file"]], "Step #2: run ChemML Wrapper": [[115, "step-2-run-chemml-wrapper"]], "method one: Running in the Terminal": [[115, "method-one-running-in-the-terminal"]], "method two: Running in any Python Interpreter": [[115, "method-two-running-in-any-python-interpreter"]], "Step #3: check the output directory": [[115, "step-3-check-the-output-directory"]], "Explain": [[116, "explain"], [116, null]], "Welcome to the ChemML\u2019s documentation!": [[117, "welcome-to-the-chemml-s-documentation"]], "Code Design:": [[117, "code-design"]], "Latest Version:": [[117, "latest-version"]], "Installation and Dependencies:": [[117, "installation-and-dependencies"]], "ChemML Library": [[117, null]], "ChemML Wrapper": [[117, null], [143, null]], "Published Models": [[117, null]], "License:": [[117, "license"]], "About us:": [[117, "about-us"]], "Neural Fingerprints": [[119, "Neural-Fingerprints"]], "Splitting and preprocessing the data": [[119, "Splitting-and-preprocessing-the-data"]], "Building the Neural Fingerprints": [[119, "Building-the-Neural-Fingerprints"]], "Building and training the neural network": [[119, "Building-and-training-the-neural-network"]], "Generating Deep Neural Network Model Explanations via ChemML\u2019s Explain Module": [[120, "Generating-Deep-Neural-Network-Model-Explanations-via-ChemML's-Explain-Module"]], "The chemml.explain module has three eXplainable AI (XAI) methods - DeepSHAP, LRP, and LIME. It allows both local (for a single instance) and global (aggregated for multiple instances) explanations. The explainations are in the form of a relevance score attributed to each feature used to build the DNN model.": [[120, "The-chemml.explain-module-has-three-eXplainable-AI-(XAI)-methods---DeepSHAP,-LRP,-and-LIME.-It-allows-both-local-(for-a-single-instance)-and-global-(aggregated-for-multiple-instances)-explanations.-The-explainations-are-in-the-form-of-a-relevance-score-attributed-to-each-feature-used-to-build-the-DNN-model."]], "DeepSHAP Explanations": [[120, "DeepSHAP-Explanations"]], "Visualizing local DeepSHAP explanations using a waterfall plot adapted from the shap library.": [[120, "Visualizing-local-DeepSHAP-explanations-using-a-waterfall-plot-adapted-from-the-shap-library."]], "Genetic Algorithm GUI tutorial": [[121, "Genetic-Algorithm-GUI-tutorial"]], "evaluate": [[121, "evaluate"]], "error_metric": [[121, "error_metric"]], "single_obj": [[121, "single_obj"]], "space": [[121, "space"]], "test_hyperparameters": [[121, "test_hyperparameters"]], "Molecule": [[122, "Molecule"]], "Construct a molecule using SMILES": [[122, "Construct-a-molecule-using-SMILES"]], "Construct a molecule using 3D atomic coordinates": [[122, "Construct-a-molecule-using-3D-atomic-coordinates"]], "Construct a molecule using InChi": [[122, "Construct-a-molecule-using-InChi"]], "Visualize the molecule": [[122, "Visualize-the-molecule"]], "Add or remove hydrogens": [[122, "Add-or-remove-hydrogens"]], "Convert chemical formats": [[122, "Convert-chemical-formats"]], "Optimize XYZ geometry": [[122, "Optimize-XYZ-geometry"]], "Active Learning": [[123, "Active-Learning"]], "Keras model example": [[123, "Keras-model-example"]], "Initialize active learning: EMC": [[123, "Initialize-active-learning:-EMC"]], "Start the active search": [[123, "Start-the-active-search"]], "Get a baseline: random sampling": [[123, "Get-a-baseline:-random-sampling"]], "Visualize distributions": [[123, "Visualize-distributions"]], "Search in a loop": [[123, "Search-in-a-loop"]], "Create a video": [[123, "Create-a-video"]], "Feature Representation Methods in ChemML": [[125, "Feature-Representation-Methods-in-ChemML"]], "Creating chemml.chem.Molecule object from molecule SMILES": [[125, "Creating-chemml.chem.Molecule-object-from-molecule-SMILES"]], "Coulomb Matrix": [[125, "Coulomb-Matrix"]], "Fingerprints from RDKit": [[125, "Fingerprints-from-RDKit"]], "Molecule tensors from chemml.chem.Molecule objects": [[125, "Molecule-tensors-from-chemml.chem.Molecule-objects"]], "Feature Selection using chemml.optimization.GeneticAlgorithm": [[126, "Feature-Selection-using-chemml.optimization.GeneticAlgorithm"]], "Defining hyperparameter space": [[126, "Defining-hyperparameter-space"], [127, "Defining-hyperparameter-space"]], "Defining objective function": [[126, "Defining-objective-function"], [127, "Defining-objective-function"]], "Optimize the feature space": [[126, "Optimize-the-feature-space"]], "Hyperparameter Optimization using chemml.optimization.GeneticAlgorithm": [[127, "Hyperparameter-Optimization-using-chemml.optimization.GeneticAlgorithm"]], "Optimize the model": [[127, "Optimize-the-model"]], "Resume optimization": [[127, "Resume-optimization"]], "Prepare: Handling Missing Values": [[128, "Prepare:-Handling-Missing-Values"]], "ChemML implements 4 strategies to handle missing values and interpolate, replace or remove them.": [[128, "ChemML-implements-4-strategies-to-handle-missing-values-and-interpolate,-replace-or-remove-them."]], "Strategy 1: Ignoring Rows": [[128, "Strategy-1:-Ignoring-Rows"]], "Strategy 2: Replacing With Zeros": [[128, "Strategy-2:-Replacing-With-Zeros"]], "Strategy 3: Interpolate": [[128, "Strategy-3:-Interpolate"]], "Strategy 3: Ignore Columns": [[128, "Strategy-3:-Ignore-Columns"]], "Build a Neural Network using ChemML": [[129, "Build-a-Neural-Network-using-ChemML"]], "Fit the chemml.model.MLP model to the training data": [[129, "Fit-the-chemml.model.MLP-model-to-the-training-data"]], "Saving the ChemML model": [[129, "Saving-the-ChemML-model"]], "Loading the saved ChemML model": [[129, "Loading-the-saved-ChemML-model"]], "Predict the densities for the test data": [[129, "Predict-the-densities-for-the-test-data"]], "Evaluate model performance using chemml.utils.regression_metrics": [[129, "Evaluate-model-performance-using-chemml.utils.regression_metrics"]], "Plot actual vs. predicted values": [[129, "Plot-actual-vs.-predicted-values"]], "If the Underlying (TensorFlow/PyTorch) model is required \u2026": [[129, "If-the-Underlying-(TensorFlow/PyTorch)-model-is-required-..."]], "Sometimes you may need the keras model without the output layer (for e.g., for transfer learning)": [[129, "Sometimes-you-may-need-the-keras-model-without-the-output-layer-(for-e.g.,-for-transfer-learning)"]], "Prepare: Remove Constant Columns and Outliers": [[130, "Prepare:-Remove-Constant-Columns-and-Outliers"]], "Removing Constant Columns": [[130, "Removing-Constant-Columns"]], "Removing oultiers based on mean": [[130, "Removing-oultiers-based-on-mean"]], "Removing outliers based on median": [[130, "Removing-outliers-based-on-median"]], "Pyscript Usage": [[131, "Pyscript-Usage"]], "Build a simple ML model": [[132, "Build-a-simple-ML-model"]], "Accelerated Discovery of High-Refractive-Index Molecules": [[137, "accelerated-discovery-of-high-refractive-index-molecules"]], "Single Target DNNs": [[137, "single-target-dnns"]], "Physics Infused DNN": [[137, "physics-infused-dnn"]], "Transfer learning TZVP Polarizabilities": [[137, "transfer-learning-tzvp-polarizabilities"]], "Citation": [[137, "citation"]], "Published": [[138, "published"]], "RI": [[138, null]], "Input File Manual": [[141, "input-file-manual"]], "Input File Overview": [[141, "input-file-overview"]], "Specific Characters": [[141, "specific-characters"]], "General Rules": [[141, "general-rules"]], "Input File GUI": [[142, "input-file-gui"]], "ChemML Wrapper Tutorial": [[143, "chemml-wrapper-tutorial"]]}, "indexentries": {"bagofbonds (class in chemml.chem)": [[3, "chemml.chem.BagofBonds"]], "coulombmatrix (class in chemml.chem)": [[3, "chemml.chem.CoulombMatrix"]], "dragon (class in chemml.chem)": [[3, "chemml.chem.Dragon"]], "molecule (class in chemml.chem)": [[3, "chemml.chem.Molecule"]], "rdkitfingerprint (class in chemml.chem)": [[3, "chemml.chem.RDKitFingerprint"]], "xyz (class in chemml.chem)": [[3, "chemml.chem.XYZ"]], "atom_features() (in module chemml.chem)": [[3, "chemml.chem.atom_features"]], "bond_features() (in module chemml.chem)": [[3, "chemml.chem.bond_features"]], "chemml.chem": [[3, "module-chemml.chem"]], "concat_dataframes() (chemml.chem.coulombmatrix static method)": [[3, "chemml.chem.CoulombMatrix.concat_dataframes"]], "concat_mol_features() (chemml.chem.bagofbonds method)": [[3, "chemml.chem.BagofBonds.concat_mol_features"]], "hydrogens() (chemml.chem.molecule method)": [[3, "chemml.chem.Molecule.hydrogens"]], "load_sparse() (chemml.chem.rdkitfingerprint method)": [[3, "chemml.chem.RDKitFingerprint.load_sparse"]], "module": [[3, "module-chemml.chem"], [4, "module-chemml.chem.magpie_python"], [5, "module-chemml.datasets"], [6, "module-chemml.initialization"], [7, "module-chemml.models"], [8, "module-chemml.optimization"], [9, "module-chemml.preprocessing"], [10, "module-chemml.visualization"]], "num_atom_features() (in module chemml.chem)": [[3, "chemml.chem.num_atom_features"]], "num_bond_features() (in module chemml.chem)": [[3, "chemml.chem.num_bond_features"]], "represent() (chemml.chem.bagofbonds method)": [[3, "chemml.chem.BagofBonds.represent"]], "represent() (chemml.chem.coulombmatrix method)": [[3, "chemml.chem.CoulombMatrix.represent"]], "represent() (chemml.chem.dragon method)": [[3, "chemml.chem.Dragon.represent"]], "represent() (chemml.chem.rdkitfingerprint method)": [[3, "chemml.chem.RDKitFingerprint.represent"]], "store_sparse() (chemml.chem.rdkitfingerprint method)": [[3, "chemml.chem.RDKitFingerprint.store_sparse"]], "tensorise_molecules() (in module chemml.chem)": [[3, "chemml.chem.tensorise_molecules"]], "to_inchi() (chemml.chem.molecule method)": [[3, "chemml.chem.Molecule.to_inchi"]], "to_mol2() (chemml.chem.molecule method)": [[3, "chemml.chem.Molecule.to_mol2"]], "to_smarts() (chemml.chem.molecule method)": [[3, "chemml.chem.Molecule.to_smarts"]], "to_smiles() (chemml.chem.molecule method)": [[3, "chemml.chem.Molecule.to_smiles"]], "to_xyz() (chemml.chem.molecule method)": [[3, "chemml.chem.Molecule.to_xyz"]], "visualize() (chemml.chem.molecule method)": [[3, "chemml.chem.Molecule.visualize"]], "apeattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator"]], "aprdfattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.APRDFAttributeGenerator"]], "chargedependentattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.ChargeDependentAttributeGenerator"]], "chemicalorderingattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.ChemicalOrderingAttributeGenerator"]], "compositionentry (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.CompositionEntry"]], "coordinationnumberattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.CoordinationNumberAttributeGenerator"]], "coulombmatrixattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.CoulombMatrixAttributeGenerator"]], "crystalstructureentry (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.CrystalStructureEntry"]], "effectivecoordinationnumberattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.EffectiveCoordinationNumberAttributeGenerator"]], "elementfractionattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.ElementFractionAttributeGenerator"]], "elementpairpropertyattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.ElementPairPropertyAttributeGenerator"]], "elementalpropertyattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.ElementalPropertyAttributeGenerator"]], "gclpattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.GCLPAttributeGenerator"]], "ioniccompoundproximityattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.IonicCompoundProximityAttributeGenerator"]], "ionicityattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.IonicityAttributeGenerator"]], "latticesimilarityattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.LatticeSimilarityAttributeGenerator"]], "localpropertydifferenceattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator"]], "localpropertyvarianceattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.LocalPropertyVarianceAttributeGenerator"]], "meredigattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.MeredigAttributeGenerator"]], "prdfattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.PRDFAttributeGenerator"]], "packingefficiencyattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.PackingEfficiencyAttributeGenerator"]], "stoichiometricattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.StoichiometricAttributeGenerator"]], "structuralheterogeneityattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.StructuralHeterogeneityAttributeGenerator"]], "valenceshellattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.ValenceShellAttributeGenerator"]], "yangomegaattributegenerator (class in chemml.chem.magpie_python)": [[4, "chemml.chem.magpie_python.YangOmegaAttributeGenerator"]], "add_element() (chemml.chem.magpie_python.prdfattributegenerator method)": [[4, "chemml.chem.magpie_python.PRDFAttributeGenerator.add_element"]], "add_elemental_pair_properties() (chemml.chem.magpie_python.elementpairpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementPairPropertyAttributeGenerator.add_elemental_pair_properties"]], "add_elemental_pair_property() (chemml.chem.magpie_python.elementpairpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementPairPropertyAttributeGenerator.add_elemental_pair_property"]], "add_elemental_properties() (chemml.chem.magpie_python.aprdfattributegenerator method)": [[4, "chemml.chem.magpie_python.APRDFAttributeGenerator.add_elemental_properties"]], "add_elemental_properties() (chemml.chem.magpie_python.elementalpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementalPropertyAttributeGenerator.add_elemental_properties"]], "add_elemental_properties() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.add_elemental_properties"]], "add_elemental_property() (chemml.chem.magpie_python.aprdfattributegenerator method)": [[4, "chemml.chem.magpie_python.APRDFAttributeGenerator.add_elemental_property"]], "add_elemental_property() (chemml.chem.magpie_python.elementalpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementalPropertyAttributeGenerator.add_elemental_property"]], "add_elemental_property() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.add_elemental_property"]], "add_p_norm() (chemml.chem.magpie_python.stoichiometricattributegenerator method)": [[4, "chemml.chem.magpie_python.StoichiometricAttributeGenerator.add_p_norm"]], "add_p_norms() (chemml.chem.magpie_python.stoichiometricattributegenerator method)": [[4, "chemml.chem.magpie_python.StoichiometricAttributeGenerator.add_p_norms"]], "add_shell() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.add_shell"]], "add_shells() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.add_shells"]], "chemml.chem.magpie_python": [[4, "module-chemml.chem.magpie_python"]], "clear_element_list() (chemml.chem.magpie_python.prdfattributegenerator method)": [[4, "chemml.chem.magpie_python.PRDFAttributeGenerator.clear_element_list"]], "clear_elemental_properties() (chemml.chem.magpie_python.aprdfattributegenerator method)": [[4, "chemml.chem.magpie_python.APRDFAttributeGenerator.clear_elemental_properties"]], "clear_elemental_properties() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.clear_elemental_properties"]], "clear_p_norms() (chemml.chem.magpie_python.stoichiometricattributegenerator method)": [[4, "chemml.chem.magpie_python.StoichiometricAttributeGenerator.clear_p_norms"]], "clear_representations() (chemml.chem.magpie_python.crystalstructureentry method)": [[4, "chemml.chem.magpie_python.CrystalStructureEntry.clear_representations"]], "clear_shells() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.clear_shells"]], "combine_compositions() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.combine_compositions"]], "compute_ape() (chemml.chem.magpie_python.apeattributegenerator class method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.compute_APE"]], "compute_cluster_compositions() (chemml.chem.magpie_python.apeattributegenerator class method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.compute_cluster_compositions"]], "compute_composition() (chemml.chem.magpie_python.crystalstructureentry method)": [[4, "chemml.chem.magpie_python.CrystalStructureEntry.compute_composition"]], "compute_voronoi_tessellation() (chemml.chem.magpie_python.crystalstructureentry method)": [[4, "chemml.chem.magpie_python.CrystalStructureEntry.compute_voronoi_tessellation"]], "determine_optimal_ape() (chemml.chem.magpie_python.apeattributegenerator class method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.determine_optimal_APE"]], "find_efficiently_packed_clusters() (chemml.chem.magpie_python.apeattributegenerator class method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.find_efficiently_packed_clusters"]], "generate_features() (chemml.chem.magpie_python.apeattributegenerator method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.aprdfattributegenerator method)": [[4, "chemml.chem.magpie_python.APRDFAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.chargedependentattributegenerator method)": [[4, "chemml.chem.magpie_python.ChargeDependentAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.chemicalorderingattributegenerator method)": [[4, "chemml.chem.magpie_python.ChemicalOrderingAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.coordinationnumberattributegenerator method)": [[4, "chemml.chem.magpie_python.CoordinationNumberAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.coulombmatrixattributegenerator method)": [[4, "chemml.chem.magpie_python.CoulombMatrixAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.effectivecoordinationnumberattributegenerator method)": [[4, "chemml.chem.magpie_python.EffectiveCoordinationNumberAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.elementfractionattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementFractionAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.elementpairpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementPairPropertyAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.elementalpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementalPropertyAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.gclpattributegenerator method)": [[4, "chemml.chem.magpie_python.GCLPAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.ioniccompoundproximityattributegenerator method)": [[4, "chemml.chem.magpie_python.IonicCompoundProximityAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.ionicityattributegenerator method)": [[4, "chemml.chem.magpie_python.IonicityAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.latticesimilarityattributegenerator method)": [[4, "chemml.chem.magpie_python.LatticeSimilarityAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.meredigattributegenerator method)": [[4, "chemml.chem.magpie_python.MeredigAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.prdfattributegenerator method)": [[4, "chemml.chem.magpie_python.PRDFAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.packingefficiencyattributegenerator method)": [[4, "chemml.chem.magpie_python.PackingEfficiencyAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.stoichiometricattributegenerator method)": [[4, "chemml.chem.magpie_python.StoichiometricAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.structuralheterogeneityattributegenerator method)": [[4, "chemml.chem.magpie_python.StructuralHeterogeneityAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.valenceshellattributegenerator method)": [[4, "chemml.chem.magpie_python.ValenceShellAttributeGenerator.generate_features"]], "generate_features() (chemml.chem.magpie_python.yangomegaattributegenerator method)": [[4, "chemml.chem.magpie_python.YangOmegaAttributeGenerator.generate_features"]], "get_atom_properties() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.get_atom_properties"]], "get_atom_properties() (chemml.chem.magpie_python.localpropertyvarianceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyVarianceAttributeGenerator.get_atom_properties"]], "get_closest_compositions() (chemml.chem.magpie_python.apeattributegenerator method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.get_closest_compositions"]], "get_cluster_range() (chemml.chem.magpie_python.apeattributegenerator class method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.get_cluster_range"]], "get_element_fraction() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.get_element_fraction"]], "get_element_fractions() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.get_element_fractions"]], "get_element_ids() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.get_element_ids"]], "get_element_names() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.get_element_names"]], "get_name() (chemml.chem.magpie_python.crystalstructureentry method)": [[4, "chemml.chem.magpie_python.CrystalStructureEntry.get_name"]], "get_structure() (chemml.chem.magpie_python.crystalstructureentry method)": [[4, "chemml.chem.magpie_python.CrystalStructureEntry.get_structure"]], "import_composition_list() (chemml.chem.magpie_python.compositionentry class method)": [[4, "chemml.chem.magpie_python.CompositionEntry.import_composition_list"]], "import_structures_list() (chemml.chem.magpie_python.crystalstructureentry class method)": [[4, "chemml.chem.magpie_python.CrystalStructureEntry.import_structures_list"]], "import_values_list() (chemml.chem.magpie_python.compositionentry class method)": [[4, "chemml.chem.magpie_python.CompositionEntry.import_values_list"]], "load_lookup_data() (chemml.chem.magpie_python.elementalpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementalPropertyAttributeGenerator.load_lookup_data"]], "load_pair_lookup_data() (chemml.chem.magpie_python.elementpairpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementPairPropertyAttributeGenerator.load_pair_lookup_data"]], "mean_abs_dev() (chemml.chem.magpie_python.effectivecoordinationnumberattributegenerator method)": [[4, "chemml.chem.magpie_python.EffectiveCoordinationNumberAttributeGenerator.mean_abs_dev"]], "parse_composition() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.parse_composition"]], "parse_element_amounts() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.parse_element_amounts"]], "print_number() (chemml.chem.magpie_python.compositionentry class method)": [[4, "chemml.chem.magpie_python.CompositionEntry.print_number"]], "remove_elemental_pair_properties() (chemml.chem.magpie_python.elementpairpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementPairPropertyAttributeGenerator.remove_elemental_pair_properties"]], "remove_elemental_pair_property() (chemml.chem.magpie_python.elementpairpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementPairPropertyAttributeGenerator.remove_elemental_pair_property"]], "remove_elemental_properties() (chemml.chem.magpie_python.elementalpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementalPropertyAttributeGenerator.remove_elemental_properties"]], "remove_elemental_properties() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.remove_elemental_properties"]], "remove_elemental_property() (chemml.chem.magpie_python.elementalpropertyattributegenerator method)": [[4, "chemml.chem.magpie_python.ElementalPropertyAttributeGenerator.remove_elemental_property"]], "remove_elemental_property() (chemml.chem.magpie_python.localpropertydifferenceattributegenerator method)": [[4, "chemml.chem.magpie_python.LocalPropertyDifferenceAttributeGenerator.remove_elemental_property"]], "replace_elements() (chemml.chem.magpie_python.crystalstructureentry method)": [[4, "chemml.chem.magpie_python.CrystalStructureEntry.replace_elements"]], "set_composition() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.set_composition"]], "set_count_phases() (chemml.chem.magpie_python.gclpattributegenerator method)": [[4, "chemml.chem.magpie_python.GCLPAttributeGenerator.set_count_phases"]], "set_cut_off_distance() (chemml.chem.magpie_python.aprdfattributegenerator method)": [[4, "chemml.chem.magpie_python.APRDFAttributeGenerator.set_cut_off_distance"]], "set_cut_off_distance() (chemml.chem.magpie_python.prdfattributegenerator method)": [[4, "chemml.chem.magpie_python.PRDFAttributeGenerator.set_cut_off_distance"]], "set_elements() (chemml.chem.magpie_python.prdfattributegenerator method)": [[4, "chemml.chem.magpie_python.PRDFAttributeGenerator.set_elements"]], "set_max_formula_unit() (chemml.chem.magpie_python.ioniccompoundproximityattributegenerator method)": [[4, "chemml.chem.magpie_python.IonicCompoundProximityAttributeGenerator.set_max_formula_unit"]], "set_n_eigenvalues() (chemml.chem.magpie_python.coulombmatrixattributegenerator method)": [[4, "chemml.chem.magpie_python.CoulombMatrixAttributeGenerator.set_n_eigenvalues"]], "set_n_nearest_to_eval() (chemml.chem.magpie_python.apeattributegenerator method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.set_n_nearest_to_eval"]], "set_n_points() (chemml.chem.magpie_python.prdfattributegenerator method)": [[4, "chemml.chem.magpie_python.PRDFAttributeGenerator.set_n_points"]], "set_num_points() (chemml.chem.magpie_python.aprdfattributegenerator method)": [[4, "chemml.chem.magpie_python.APRDFAttributeGenerator.set_num_points"]], "set_packing_threshold() (chemml.chem.magpie_python.apeattributegenerator method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.set_packing_threshold"]], "set_phases() (chemml.chem.magpie_python.gclpattributegenerator method)": [[4, "chemml.chem.magpie_python.GCLPAttributeGenerator.set_phases"]], "set_radius_property() (chemml.chem.magpie_python.apeattributegenerator method)": [[4, "chemml.chem.magpie_python.APEAttributeGenerator.set_radius_property"]], "set_shells() (chemml.chem.magpie_python.chemicalorderingattributegenerator method)": [[4, "chemml.chem.magpie_python.ChemicalOrderingAttributeGenerator.set_shells"]], "set_smoothing_parameter() (chemml.chem.magpie_python.aprdfattributegenerator method)": [[4, "chemml.chem.magpie_python.APRDFAttributeGenerator.set_smoothing_parameter"]], "set_weighted() (chemml.chem.magpie_python.chemicalorderingattributegenerator method)": [[4, "chemml.chem.magpie_python.ChemicalOrderingAttributeGenerator.set_weighted"]], "sort_and_normalize() (chemml.chem.magpie_python.compositionentry method)": [[4, "chemml.chem.magpie_python.CompositionEntry.sort_and_normalize"]], "chemml.datasets": [[5, "module-chemml.datasets"]], "load_cep_homo() (in module chemml.datasets)": [[5, "chemml.datasets.load_cep_homo"]], "load_comp_energy() (in module chemml.datasets)": [[5, "chemml.datasets.load_comp_energy"]], "load_crystal_structures() (in module chemml.datasets)": [[5, "chemml.datasets.load_crystal_structures"]], "load_organic_density() (in module chemml.datasets)": [[5, "chemml.datasets.load_organic_density"]], "load_xyz_polarizability() (in module chemml.datasets)": [[5, "chemml.datasets.load_xyz_polarizability"]], "split (class in chemml.initialization)": [[6, "chemml.initialization.Split"]], "xyzreader (class in chemml.initialization)": [[6, "chemml.initialization.XYZreader"]], "chemml.initialization": [[6, "module-chemml.initialization"]], "fit() (chemml.initialization.split method)": [[6, "chemml.initialization.Split.fit"]], "read() (chemml.initialization.xyzreader method)": [[6, "chemml.initialization.XYZreader.read"]], "mlp (class in chemml.models)": [[7, "chemml.models.MLP"]], "neuralgraphhidden (class in chemml.models)": [[7, "chemml.models.NeuralGraphHidden"]], "neuralgraphoutput (class in chemml.models)": [[7, "chemml.models.NeuralGraphOutput"]], "transferlearning (class in chemml.models)": [[7, "chemml.models.TransferLearning"]], "build() (chemml.models.neuralgraphhidden method)": [[7, "chemml.models.NeuralGraphHidden.build"]], "build() (chemml.models.neuralgraphoutput method)": [[7, "chemml.models.NeuralGraphOutput.build"]], "call() (chemml.models.neuralgraphhidden method)": [[7, "chemml.models.NeuralGraphHidden.call"]], "call() (chemml.models.neuralgraphoutput method)": [[7, "chemml.models.NeuralGraphOutput.call"]], "chemml.models": [[7, "module-chemml.models"]], "compute_output_shape() (chemml.models.neuralgraphhidden method)": [[7, "chemml.models.NeuralGraphHidden.compute_output_shape"]], "compute_output_shape() (chemml.models.neuralgraphoutput method)": [[7, "chemml.models.NeuralGraphOutput.compute_output_shape"]], "from_config() (chemml.models.neuralgraphhidden class method)": [[7, "chemml.models.NeuralGraphHidden.from_config"]], "from_config() (chemml.models.neuralgraphoutput class method)": [[7, "chemml.models.NeuralGraphOutput.from_config"]], "get_config() (chemml.models.neuralgraphhidden method)": [[7, "chemml.models.NeuralGraphHidden.get_config"]], "get_config() (chemml.models.neuralgraphoutput method)": [[7, "chemml.models.NeuralGraphOutput.get_config"]], "get_model() (chemml.models.mlp method)": [[7, "chemml.models.MLP.get_model"]], "load() (chemml.models.mlp method)": [[7, "chemml.models.MLP.load"]], "save() (chemml.models.mlp method)": [[7, "chemml.models.MLP.save"]], "transfer() (chemml.models.transferlearning method)": [[7, "chemml.models.TransferLearning.transfer"]], "activelearning (class in chemml.optimization)": [[8, "chemml.optimization.ActiveLearning"]], "geneticalgorithm (class in chemml.optimization)": [[8, "chemml.optimization.GeneticAlgorithm"]], "chemml.optimization": [[8, "module-chemml.optimization"]], "deposit() (chemml.optimization.activelearning method)": [[8, "chemml.optimization.ActiveLearning.deposit"]], "get_target_layer() (chemml.optimization.activelearning method)": [[8, "chemml.optimization.ActiveLearning.get_target_layer"]], "ignore() (chemml.optimization.activelearning method)": [[8, "chemml.optimization.ActiveLearning.ignore"]], "initialize() (chemml.optimization.activelearning method)": [[8, "chemml.optimization.ActiveLearning.initialize"]], "random_search() (chemml.optimization.activelearning method)": [[8, "chemml.optimization.ActiveLearning.random_search"]], "search() (chemml.optimization.activelearning method)": [[8, "chemml.optimization.ActiveLearning.search"]], "search() (chemml.optimization.geneticalgorithm method)": [[8, "chemml.optimization.GeneticAlgorithm.search"]], "visualize() (chemml.optimization.activelearning method)": [[8, "chemml.optimization.ActiveLearning.visualize"]], "constantcolumns() (in module chemml.preprocessing)": [[9, "chemml.preprocessing.ConstantColumns"]], "missingvalues() (in module chemml.preprocessing)": [[9, "chemml.preprocessing.MissingValues"]], "outliers() (in module chemml.preprocessing)": [[9, "chemml.preprocessing.Outliers"]], "chemml.preprocessing": [[9, "module-chemml.preprocessing"]], "saveplot (class in chemml.visualization)": [[10, "chemml.visualization.SavePlot"]], "chemml.visualization": [[10, "module-chemml.visualization"]], "decorator (class in chemml.visualization)": [[10, "chemml.visualization.decorator"]], "fit() (chemml.visualization.decorator method)": [[10, "chemml.visualization.decorator.fit"]], "hist (class in chemml.visualization)": [[10, "chemml.visualization.hist"]], "matplotlib_font() (chemml.visualization.decorator method)": [[10, "chemml.visualization.decorator.matplotlib_font"]], "plot() (chemml.visualization.hist method)": [[10, "chemml.visualization.hist.plot"]], "plot() (chemml.visualization.scatter2d method)": [[10, "chemml.visualization.scatter2D.plot"]], "save() (chemml.visualization.saveplot method)": [[10, "chemml.visualization.SavePlot.save"]], "scatter2d (class in chemml.visualization)": [[10, "chemml.visualization.scatter2D"]]}})